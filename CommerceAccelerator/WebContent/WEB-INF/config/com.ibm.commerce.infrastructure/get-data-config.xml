<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2011, 2012 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<_config:get-data-config xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/foundation/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/commerce/foundation/config ../../xsd/get-data-config.xsd ">

	<!-- OnlineStore noun services -->
	<data-type>
		<name>OnlineStore</name>
		<type>com.ibm.commerce.infrastructure.facade.datatypes.OnlineStoreType</type>
	</data-type>
	<data-type>
		<name>Folder</name>
		<type>com.ibm.commerce.infrastructure.facade.datatypes.FolderType</type>
	</data-type>
	<client-facade>
		<data-type-name>OnlineStore</data-type-name>
		<class>com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient</class>
		<method>getOnlineStore</method>
	</client-facade>
	<client-facade>
		<data-type-name>Folder</data-type-name>
		<class>com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient</class>
		<method>getFolder</method>
	</client-facade>
	
	<!-- Without language -->
	<expression-builder>
		<name>findByUniqueID</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.usage='$usage$'}/OnlineStore[StoreIdentifier[(UniqueID='$storeId$')]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_All</value>
		</param>
		<param>
			<name>usage</name>
			<value></value>
		</param>
		<param>
			<name>storeId</name>
			<value>0</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findByName</name>
		<data-type-name>OnlineStore</data-type-name>
		<class>com.ibm.commerce.foundation.internal.client.taglib.util.SearchExpressionBuilder</class>
		<method>formatExpression</method>
		<param>
			<name>template</name>
			<value>{_wcf.usage='$usage$'}/OnlineStore[search(StoreIdentifier/ExternalIdentifier/NameIdentifier='$storeName$')]</value>
		</param>					
		<param>
			<name>accessProfile</name>
			<value>IBM_All</value>
		</param>
		<param>
			<name>usage</name>
			<value></value>
		</param>
		<param>
			<name>storeName</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findAll</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.usage='$usage$'}/OnlineStore</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_All</value>
		</param>
		<param>
			<name>usage</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findByRelatedStoreUniqueID</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.usage='$usage$'}/OnlineStore[OnlineStoreRelatedStores[StoreIdentifier[(UniqueID='$storeId$')]]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_All</value>
		</param>
		<param>
			<name>usage</name>
			<value></value>
		</param>		
		<param>
			<name>storeId</name>
			<value></value>
		</param>
	</expression-builder>	
	
	<!-- With language -->
	<expression-builder>
		<name>findByUniqueIDWithLanguage</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.dataLanguageIds='$dataLanguageIds$';_wcf.usage='$usage$'}/OnlineStore[StoreIdentifier[(UniqueID='$storeId$')]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_All</value>
		</param>
		<param>
			<name>dataLanguageIds</name>
			<value></value>
		</param>
		<param>
			<name>usage</name>
			<value></value>
		</param>
		<param>
			<name>storeId</name>
			<value>0</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findByNameWithLanguage</name>
		<data-type-name>OnlineStore</data-type-name>
		<class>com.ibm.commerce.foundation.internal.client.taglib.util.SearchExpressionBuilder</class>
		<method>formatExpression</method>
		<param>
			<name>template</name>
			<value>{_wcf.usage='$usage$';_wcf.dataLanguageIds='$dataLanguageIds$'}/OnlineStore[search(StoreIdentifier/ExternalIdentifier/NameIdentifier='$storeName$')]</value>
		</param>					
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_All</value>
		</param>
		<param>
			<name>dataLanguageIds</name>
			<value></value>
		</param>
		<param>
			<name>usage</name>
			<value></value>
		</param>
		<param>
			<name>storeName</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findAllWithLanguage</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.dataLanguageIds='$dataLanguageIds$';_wcf.usage='$usage$'}/OnlineStore</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_All</value>
		</param>
		<param>
			<name>dataLanguageIds</name>
			<value></value>
		</param>
		<param>
			<name>usage</name>
			<value></value>
		</param>
	</expression-builder>
	
	<!-- Service to get SEO Page definitions -->
	<expression-builder>
		<name>findSEOPageDefintionByPageNameAndStoreID</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.dataLanguageIds='$dataLanguageIds$'}/OnlineStore[ObjectTypeID='$objectTypeId$' and PageName='$pageName$' and StoreIdentifier[UniqueID='$storeId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_SEOPageDefinition_Details</value>
		</param>
		<param>
			<name>dataLanguageIds</name>
			<value></value>
		</param>
	</expression-builder>
	
	<!-- Service to get SEO Page definitions based on page group and object ID -->
	<expression-builder>
		<name>findSEOPageDefByPageGroupAndObjectIDAndStoreID</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.dataLanguageIds='$dataLanguageIds$'}/OnlineStore[OnlineStoreIdentifier[UniqueID='$storeId$'] and SEOProperty[(ObjectIdentifier='$objectId$') and pageGroup='$pageGroup$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_SEOPageDefinition_Details</value>
		</param>
		<param>
			<name>dataLanguageIds</name>
			<value></value>
		</param>
	</expression-builder>
	
	<!-- Configuration noun services -->
	<data-type>
		<name>Configuration</name>
		<type>com.ibm.commerce.infrastructure.facade.datatypes.ConfigurationType</type>
	</data-type>
	<client-facade>
		<data-type-name>Configuration</data-type-name>
		<class>com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient</class>
		<method>getConfiguration</method>
	</client-facade>

	<expression-builder>
		<name>findByUniqueID</name>
		<data-type-name>Configuration</data-type-name>
		<expression-template>/Configuration[ConfigurationIdentifier[(UniqueID='$uniqueId$')]]</expression-template>
		<param>
			<name>uniqueId</name>
			<value>com.ibm.commerce.foundation.availableIdentifiers</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findAll</name>
		<data-type-name>Configuration</data-type-name>
		<expression-template>/Configuration</expression-template>
	</expression-builder>
	
	<!-- External Rule noun services -->
	<data-type>
		<name>ExternalRule</name>
		<type>com.ibm.commerce.infrastructure.facade.datatypes.ExternalRuleType</type>
	</data-type>
	<client-facade>
		<data-type-name>ExternalRule</data-type-name>
		<class>com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient</class>
		<method>getExternalRule</method>
	</client-facade>
	<expression-builder>
		<name>getExternalPriceRuleByName</name>
		<data-type-name>ExternalRule</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/ExternalRule[(Purpose='Pricing' and RuleName='$ruleName$')]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_All</value>
		</param>
	</expression-builder>
	<!-- Service to get All the SEO Static Page URLKeyword -->
	<expression-builder>
		<name>findAllSEOStaticPageURLKeywordSummaryByStoreID</name>
		<data-type-name>OnlineStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_wcf.dataLanguageIds='$dataLanguageIds$'}/OnlineStore[StoreIdentifier[UniqueID='$storeId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_SEO_Static_Page_Summary</value>
		</param>
		<param>
			<name>dataLanguageIds</name>
			<value>-1</value>
		</param>
	</expression-builder>
	<!-- Service to get the SEO content URLKeyword Details -->
	<expression-builder>
		<name>findSEOContentURLKeywordDetailsByURLKeywordID</name>
		<data-type-name>OnlineStore</data-type-name>
		<class>com.ibm.commerce.foundation.internal.client.taglib.util.UniqueIDsExpressionBuilder</class>
		<method>formatExpression</method>
		<param>
			<name>template</name>
			<value>/OnlineStore[SEOContentURL[URLKeyword[(URLKeywordID=)]]]</value>
		</param>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_SEO_Static_Page_Details</value>
		</param>
		<param>
			<name>dataLanguageIds</name>
			<value>-1</value>
		</param>
	</expression-builder>
	
	<!-- PageLayout noun services -->
	<data-type>
		<name>PageLayout</name>
		<type>com.ibm.commerce.infrastructure.facade.datatypes.PageLayoutType</type>
	</data-type>
	<client-facade>
		<data-type-name>PageLayout</data-type-name>
		<class>com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient</class>
		<method>getPageLayout</method>
	</client-facade>
	<expression-builder>
		<name>findPageLayoutByID</name>
		<data-type-name>PageLayout</data-type-name>
		<class>com.ibm.commerce.foundation.internal.client.taglib.util.UniqueIDsExpressionBuilder</class>
		<method>formatExpression</method>
		<param>
			<name>template</name>
			<value>/PageLayout[PageLayoutIdentifier[(UniqueID=)]]</value>
		</param>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Summary</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPageLayoutByLayoutTypeID</name>
		<data-type-name>PageLayout</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/PageLayout[LayoutType='$pageLayoutTypeId$']</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Summary</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPageLayoutByNameOrDescription</name>
		<data-type-name>PageLayout</data-type-name>
		<class>com.ibm.commerce.foundation.internal.client.taglib.util.SearchExpressionBuilder</class>
		<method>formatExpression</method>
		<param>
			<name>template</name>
			<value>/PageLayout[(LayoutType='$pageLayoutTypeId$') and search(PageLayoutIdentifier/ExternalIdentifierType/Name='$searchText$' or Description/Description='$searchText$')]</value>
		</param>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Summary</value>
		</param>
	</expression-builder>
	
	<!-- StorePage noun services -->
	<data-type>
		<name>StorePage</name>
		<type>com.ibm.commerce.infrastructure.facade.datatypes.StorePageType</type>
	</data-type>
	<client-facade>
		<data-type-name>StorePage</data-type-name>
		<class>com.ibm.commerce.infrastructure.facade.client.InfrastructureFacadeClient</class>
		<method>getStorePage</method>
	</client-facade>
	<expression-builder>
		<name>findAllStorePages</name>
		<data-type-name>StorePage</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/StorePage</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Summary</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPageLayoutAssociationByPageType</name>
		<data-type-name>StorePage</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/StorePage[Default='$default$' and PageType='$pageType$']</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Summary</value>
		</param>
		<param>
			<name>default</name>
			<value>false</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPageLayoutAssociationByPageTypeAndObjectId</name>
		<data-type-name>StorePage</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/StorePage[Default='$default$' and PageType='$pageType$' and ObjectIdentifier='$objectIdentifier$']</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Summary</value>
		</param>
		<param>
			<name>default</name>
			<value>false</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStorePageSubAssociations</name>
		<data-type-name>StorePage</data-type-name>
		<class>com.ibm.commerce.infrastructure.client.taglib.util.StorePageExpressionBuilder</class>
		<method>buildSubPageAssociationsExpression</method>
		<param>
			<name>template</name>
			<value>/StorePage[PageType='$pageType$' and ObjectIdentifier='$objectIdentifier$' and (SubPageType=)]</value>
		</param>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_SubPageAssociations</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStaticStorePageByType</name>
		<data-type-name>StorePage</data-type-name>
		<class>com.ibm.commerce.foundation.internal.client.taglib.util.SearchExpressionBuilder</class>
		<method>formatExpression</method>
		<param>
			<name>template</name>
			<value>/StorePage[search(PageType='$searchText$')]</value>
		</param>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Summary</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>getTopFolders</name>
		<data-type-name>Folder</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/Folder[(FolderUsage='$folderType$')]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Details</value>
		</param>
		<param>
			<name>folderType</name>
		</param>
	</expression-builder>
	<expression-builder>
		<name>getChildFolders</name>
		<data-type-name>Folder</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/Folder[ParentFolderIdentifier[(UniqueID=$uniqueID$)]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Details</value>
		</param>
		<param>
			<name>uniqueID</name>
		</param>
	</expression-builder>
	<expression-builder>
		<name>getFolderItemsByFolderId</name>
		<data-type-name>Folder</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/Folder[FolderIdentifier[(UniqueID=$uniqueID$)]]/FolderItem</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_ChildFolderItems</value>
		</param>	
		<param>
			<name>uniqueID</name>
		</param>	
	</expression-builder>
		<expression-builder>
		<name>findFoldersByReferenceID</name>
		<data-type-name>Folder</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/Folder[FolderItem[FolderItemType='$FolderItemType$' and ReferenceID=$ReferenceID$]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Details</value>
		</param>	
		<param>
			<name>FolderItemType</name>
		</param>
		<param>
			<name>ReferenceID</name>
		</param>					
	</expression-builder>
	<expression-builder>
		<name>getFolderById</name>
		<data-type-name>Folder</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/Folder[FolderIdentifier[(UniqueID=$uniqueID$)]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Admin_Details</value>
		</param>	
		<param>
			<name>uniqueID</name>
		</param>					
	</expression-builder>		
</_config:get-data-config>
