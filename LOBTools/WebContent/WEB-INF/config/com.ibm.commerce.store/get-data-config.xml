<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2008, 2011 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<_config:get-data-config 
	xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/foundation/config" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.ibm.com/xmlns/prod/commerce/foundation/config ../../xsd/get-data-config.xsd ">

    <!-- ============================ PHYSICAL STORE ========================== -->
	<data-type>
		<name>PhysicalStore</name>
		<type>com.ibm.commerce.store.facade.datatypes.PhysicalStoreType</type>
	</data-type>
	<client-facade>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>getPhysicalStore</method>
	</client-facade>		
	<expression-builder>
		<name>findPhysicalStoresByUniqueIDs</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findPhysicalStoresByUniqueIDs</method>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresByExternalIdentifiers</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findPhysicalStoresByExternalIdentifiers</method>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresByExternalIdentifiers</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findStorePhysicalStoresByExternalIdentifiers</method>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresByExternalIdentifiersUniqueIDs</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findPhysicalStoresByExternalIdentifiersUniqueIDs</method>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresByExternalIdentifiersUniqueIDs</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findStorePhysicalStoresByExternalIdentifiersUniqueIDs</method>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresByGeoNodeUniqueID</name>
		<data-type-name>PhysicalStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/PhysicalStore[LocationInfo[GeoNodeIdentifier[UniqueID='$uniqueId$']]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_Details</value>
		</param>
		<param>
			<name>uniqueId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresByGeoNodeUniqueIDWithAttributes</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findPhysicalStoresByGeoNodeUniqueIDWithAttributes</method>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresFromGeoCode</name>
		<data-type-name>PhysicalStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_sto.radiusValue='$value$';_sto.radiusUom='$uom$';_sto.maxStores='$maxStores$'}/PhysicalStore[LocationInfo[GeoCode[Latitude='$latitude$' and Longitude='$longitude$']]]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_Details</value>
		</param>
		<param>
			<name>value</name>
			<value></value>
		</param>
		<param>
			<name>uom</name>
			<value></value>
		</param>
		<param>
			<name>maxStores</name>
			<value></value>
		</param>
		<param>
			<name>latitude</name>
			<value></value>
		</param>
		<param>
			<name>longitude</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresFromGeoCode</name>
		<data-type-name>PhysicalStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_sto.radiusValue='$value$';_sto.radiusUom='$uom$';_sto.maxStores='$maxStores$'}/PhysicalStore[LocationInfo[GeoCode[Latitude='$latitude$' and Longitude='$longitude$']] and StoreIdentifier[UniqueID='$storeId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_Details</value>
		</param>
		<param>
			<name>value</name>
			<value></value>
		</param>
		<param>
			<name>uom</name>
			<value></value>
		</param>
		<param>
			<name>maxStores</name>
			<value></value>
		</param>
		<param>
			<name>latitude</name>
			<value></value>
		</param>
		<param>
			<name>longitude</name>
			<value></value>
		</param>
		<param>
			<name>storeId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresFromGeoCodeWithAttributes</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findPhysicalStoresFromGeoCodeWithAttributes</method>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresFromGeoCodeWithAttributes</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findStorePhysicalStoresFromGeoCodeWithAttributes</method>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresFromLocationUniqueID</name>
		<data-type-name>PhysicalStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_sto.radiusValue='$value$';_sto.radiusUom='$uom$';_sto.maxStores='$maxStores$'}/PhysicalStore[PhysicalStoreIdentifier[UniqueID='$uniqueId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_Details</value>
		</param>
		<param>
			<name>value</name>
			<value></value>
		</param>
		<param>
			<name>uom</name>
			<value></value>
		</param>
		<param>
			<name>maxStores</name>
			<value></value>
		</param>
		<param>
			<name>uniqueId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresFromLocationUniqueID</name>
		<data-type-name>PhysicalStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_sto.radiusValue='$value$';_sto.radiusUom='$uom$';_sto.maxStores='$maxStores$'}/PhysicalStore[PhysicalStoreIdentifier[UniqueID='$uniqueId$'] and StoreIdentifier[UniqueID='$storeId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_Details</value>
		</param>
		<param>
			<name>value</name>
			<value></value>
		</param>
		<param>
			<name>uom</name>
			<value></value>
		</param>
		<param>
			<name>maxStores</name>
			<value></value>
		</param>
		<param>
			<name>uniqueId</name>
			<value></value>
		</param>
		<param>
			<name>storeId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresFromLocationUniqueIDWithAttributes</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findPhysicalStoresFromLocationUniqueIDWithAttributes</method>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresFromLocationUniqueIDWithAttributes</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findStorePhysicalStoresFromLocationUniqueIDWithAttributes</method>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresFromLocationExternalIdentifier</name>
		<data-type-name>PhysicalStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_sto.radiusValue='$value$';_sto.radiusUom='$uom$';_sto.maxStores='$maxStores$'}/PhysicalStore[PhysicalStoreIdentifier[ExternalIdentifier='$externalIdentifier$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_Details</value>
		</param>
		<param>
			<name>value</name>
			<value></value>
		</param>
		<param>
			<name>uom</name>
			<value></value>
		</param>
		<param>
			<name>maxStores</name>
			<value></value>
		</param>
		<param>
			<name>externalIdentifier</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresFromLocationExternalIdentifier</name>
		<data-type-name>PhysicalStore</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$;_sto.radiusValue='$value$';_sto.radiusUom='$uom$';_sto.maxStores='$maxStores$'}/PhysicalStore[PhysicalStoreIdentifier[ExternalIdentifier='$externalIdentifier$'] and StoreIdentifier[UniqueID='$storeId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_Details</value>
		</param>
		<param>
			<name>value</name>
			<value></value>
		</param>
		<param>
			<name>uom</name>
			<value></value>
		</param>
		<param>
			<name>maxStores</name>
			<value></value>
		</param>
		<param>
			<name>externalIdentifier</name>
			<value></value>
		</param>
		<param>
			<name>storeId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findPhysicalStoresFromLocationExternalIdentifierWithAttributes</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findPhysicalStoresFromLocationExternalIdentifierWithAttributes</method>
	</expression-builder>
	<expression-builder>
		<name>findStorePhysicalStoresFromLocationExternalIdentifierWithAttributes</name>
		<data-type-name>PhysicalStore</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>findStorePhysicalStoresFromLocationExternalIdentifierWithAttributes</method>
	</expression-builder>
	
    <!-- ============================ GEONODE ================================== -->
	<data-type>
		<name>GeoNode</name>
		<type>com.ibm.commerce.store.facade.datatypes.GeoNodeType</type>
	</data-type>
	<client-facade>
		<data-type-name>GeoNode</data-type-name>
		<class>com.ibm.commerce.store.facade.client.StoreFacadeClient</class>
		<method>getGeoNode</method>
	</client-facade>		
	<expression-builder>
		<name>findTopGeoNodes</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[@topGeoNode='true']</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStoreTopGeoNodes</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[@topGeoNode='true' and StoreIdentifier[UniqueID='$storeId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
		<param>
			<name>storeId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findGeoNodeByUniqueID</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[GeoNodeIdentifier[UniqueID='$uniqueId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
		<param>
			<name>uniqueId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findChildGeoNodesByGeoNodeUniqueID</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[ParentGeoNodeIdentifier[UniqueID='$parentUniqueId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
		<param>
			<name>parentUniqueId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findChildGeoNodesByGeoNodeExternalIdentifier</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[ParentGeoNodeIdentifier[ExternalIdentifier='$parentExtIdentifier$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
		<param>
			<name>parentExtIdentifier</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStoreChildGeoNodesByGeoNodeExternalIdentifier</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[ParentGeoNodeIdentifier[ExternalIdentifier='$parentExtIdentifier$'] and StoreIdentifier[UniqueID='$storeId$']]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
		<param>
			<name>parentExtIdentifier</name>
			<value></value>
		</param>
		<param>
			<name>storeId</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findGeoNodesByGeoNodeTypeAndName</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[@type='$type$' and search(contains(Description/Name,'$name$'))]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
		<param>
			<name>type</name>
			<value>CITY</value>
		</param>
		<param>
			<name>name</name>
			<value></value>
		</param>
	</expression-builder>
	<expression-builder>
		<name>findStoreGeoNodesByGeoNodeTypeAndName</name>
		<data-type-name>GeoNode</data-type-name>
		<expression-template>{_wcf.ap=$accessProfile$}/GeoNode[@type='$type$' and StoreIdentifier[UniqueID='$storeId$'] and search(contains(Description/Name,'$name$'))]</expression-template>
		<param>
			<name>accessProfile</name>
			<value>IBM_Store_All</value>
		</param>
		<param>
			<name>type</name>
			<value>CITY</value>
		</param>
		<param>
			<name>storeId</name>
			<value></value>
		</param>
		<param>
			<name>name</name>
			<value></value>
		</param>
	</expression-builder>

</_config:get-data-config>
