<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2007, 2011 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<xsd:schema 
	targetNamespace="http://www.ibm.com/xmlns/prod/commerce/foundation/config"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/foundation/config"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified">
	
	<xsd:element name="URLtoOAGIS">
        <xsd:annotation>
        	<xsd:documentation>This configuration describes how URL requests are transformed into OAGIS requests and vice versa. 
To mediate an URL request to a Change or Process business object document (BOD) request, the
Nouns must be described to build the appropriate action expressions and the URL parameters must be defined as elements and attributes in the Noun.  To mediate the Respond or Acknowledge response
to something that an URL request can use, the Noun element to URL parameter name mapping is required, in addition to error mapping that tailors errors to the purpose of the web application.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="_config:NounDefinitions" minOccurs="0"
					maxOccurs="1" >
					<xsd:annotation>
						<xsd:documentation>The Noun definition describes the Nouns and Noun elements that are defined in this configuration.
When you define the Nouns and Noun elements, the identified changeable parts of a Noun are registered when building the change request, as well as the Factory class that is used to create
the object when an Overlay is used.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="_config:URLDefinitions" minOccurs="0"
					maxOccurs="1" >
					<xsd:annotation>
						<xsd:documentation>The URL definition defines parameter groups that contain the URL parameter name to Noun element 
and attribute mapping.  URL parameters are defined in a group as a commented set of URL parameter
names that correspond to a specific Noun or section of a Noun.  These URL parameter groups are
used to ensure that common URL parameter names are used to represent the elements of the Noun.
</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="_config:ErrorDefinitions" minOccurs="0"
					maxOccurs="1" >
					<xsd:annotation>
						<xsd:documentation>The error definition contains the configuration that associates a particular error code from a failed 
service request with a particular URL parameter name.  Error codes can then be associated with the URL parameter name that caused the error.

In addition, the error definition includes two properties files that contain message overrides so that the message defined in the property file is used instead of the message that is returned by the service request.
The alternate resource bundle declares the resource bundle that contains the customized version of existing error messages while the primary resource bundle
contains the default error message override.   If the message is not declared in the resource bundle, then the message returned by the
service is used.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- ======================================================================= -->
	<!--  noun definitions -->
	<xsd:element name="NounDefinitions">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element maxOccurs="unbounded" ref="_config:Noun"
					minOccurs="0" >
					<xsd:annotation>
						<xsd:documentation>The Noun configuration contains the name of the Noun, as well as the Factory and method to use to create
the object.  If no Factory is specified, then the default Factory is used.  

The Noun configuration also includes Noun elements to declare the changeable
parts of the Noun and the supporting Overlays on the elements of the Noun.  If no Noun elements are declared,
the default objects are used and the Noun is considered to not have any identified changeable
parts.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="Noun">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element maxOccurs="unbounded" ref="_config:NounElement" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The Noun element configuration determines if the element is considered a changeable part and 
optionally declares the Factory class and method that are used to create the object when an Overlay
is used.  By default, if the Noun element is not configured,  then it is not considered a changeable
part and the default object is used.  The Noun element configuration is only required when
identifying the changeable parts or declaring a new Factory class and method used to create the 
object.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="name" type="xsd:string" />
			<xsd:attribute name="factory" type="xsd:string" />
			<xsd:attribute name="method" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="NounElement">
		<xsd:complexType>
			<xsd:attribute name="part" type="xsd:boolean" />
			<xsd:attribute name="name" type="xsd:string" />
			<xsd:attribute name="factory" type="xsd:string" />
			<xsd:attribute name="method" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	
	<!-- ============================================================================ -->
	<!-- URL definitions -->
	<xsd:element name="URLDefinitions">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element maxOccurs="unbounded"
					ref="_config:URLParameterGroup" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>An URL parameter group declares the set of URL parameters that corresponds to the
specific elements and attributes of a particular Noun.  An URL parameter group ensures that consistent URL parameter names are used to represent the object.  

Not only does an URL parameter group declare the URL parameter name to Noun element or attribute
definition, it can also include other URL parameter groups.  Since some groups might be re-used when
the business objects are represented differently in the web application but have some common
grouping, you can use the included parameter groups to re-use the mapping.  For example, the Noun
represents an abstract business object while the URL might want to declare specific instances of that
business object.  Even though the lower level elements might be the same and should reuse the same
URL parameter names, the top level might use a different set of URL parameter names to better represent
how the web application models the business object.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="URLParameterGroup">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element maxOccurs="unbounded" minOccurs="0"
					ref="_config:URLParameter" >
					<xsd:annotation>
						<xsd:documentation>The URL parameter configuration for a specific URL parameter name defines the values that correspond to a particular element or
attribute of the declared Noun that is specified by the URL parameter group.  You can declare any of the following as part of the URL parameter configuration:

- name (required): The URL parameter name
- nounElement (required): The element or attribute of the Noun with which the value should be associated.
- key (optional): The unique identifier of the Noun or complex type of the Noun.  The default value is false.
- return (optional): Indicates if this Noun element should be included in the response when building the response object. The default value is false unless
the key attribute has a value of true.
- actionExpression (optional): When set, this value indicates that the action expression should be created in the change Verb to indicate 
that this Noun or changeable part of the Noun has been modified.  The default value is true unless the key attribute has a value of true.
- allowEmpty (optional): Specifies if the value of this parameter can be empty. If it cannot be empty, an application error is created so that the service
does not execute.  The default value is true.
- type (optional): The data type of the Noun element or attribute.  If a value of &quot;UserData&quot; is specified, then the URL parameter mapping has special
meaning and the URL parameter name begins with the specified name attribute.  There is special parsing behavior for an URL parameter of type
&quot;UserData&quot; where the name of the element is part of the URL parameter name.  In this case, the name and value are mapped to a new
object, as indicated by the nounElement attribute.  Optionally, you can specify the UserDataAssociation element for a more complex object
mapping.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element maxOccurs="unbounded" minOccurs="0"
					ref="_config:IncludeURLParameterGroup" >
					<xsd:annotation>
						<xsd:documentation>A pointer to another declared URL parameter group to include it as part of the current URL parameter group.  At runtime, the
URL parameter names of the included URL parameter groups are merged to describe a complete URL parameter name to
Noun element or attribute mapping.  </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="name" type="xsd:string" />
			<xsd:attribute name="noun" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="URLParameter">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element minOccurs="0" ref="_config:UserDataAssociation" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>The UserData association configuration further specifies the element in which the derived name and
URL parameter value should be set within the declared nounElement.  Specify this when the default nounElement does not have a 
name attribute and the value cannot be explicitly set, but is part of an element that is a child of the declared Noun element.

In most cases, this association is not required.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element minOccurs="0" ref="_config:ParameterAssociation" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>The parameter association configuration allows additional data to be associated 
						with a UserData name value pair. The parameter association name is a prefix of the associated parameter in the request which
						contains the additional data. The parameter association value is the location in the Noun in which to
						set the additional data. In most cases, this association is not required.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>			
			<xsd:attribute name="key" type="xsd:boolean" />
			<xsd:attribute name="actionExpression" type="xsd:boolean" />
			<xsd:attribute name="type" type="xsd:string" />
			<xsd:attribute name="return" type="xsd:boolean" />
			<xsd:attribute name="name" type="xsd:string" />
			<xsd:attribute name="nounElement" type="xsd:string" />
			<xsd:attribute name="allowEmpty" type="xsd:boolean" />
			<xsd:attribute name="nillable" type="xsd:boolean" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="UserDataAssociation">
		<xsd:complexType>
			<xsd:attribute name="value" type="xsd:string" />
			<xsd:attribute name="name" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="ParameterAssociation">
		<xsd:complexType>
			<xsd:attribute name="value" type="xsd:string" />
			<xsd:attribute name="name" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>	
	
	<xsd:element name="IncludeURLParameterGroup">
		<xsd:complexType>
			<xsd:attribute name="urlParameterGroup" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	
	<!-- ========================================================================== -->
	<!-- error definitions -->
	
	<xsd:element name="ErrorDefinitions">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element maxOccurs="unbounded" ref="_config:ErrorGroup" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The error group corresponds to an URL parameter group that illustrates how the web application represents the
business object.  </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="alternateResourceBundle"
				type="xsd:string" />
			<xsd:attribute name="primaryResourceBundle"
				type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="ErrorGroup">		<xsd:complexType>
			<xsd:sequence>
				<xsd:element minOccurs="0" ref="_config:ReasonCodeParameterAssociation" 
					maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>For each error reason code that results as part of the service request, the reason code parameter association defines the associated URL parameter name that caused the error.
The web application can use this information to identify the specific values that caused the error.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="name" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="ReasonCodeParameterAssociation">
		<xsd:complexType>
			<xsd:attribute name="reasonCode" type="xsd:string" />
			<xsd:attribute name="parameterName" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	
</xsd:schema>
