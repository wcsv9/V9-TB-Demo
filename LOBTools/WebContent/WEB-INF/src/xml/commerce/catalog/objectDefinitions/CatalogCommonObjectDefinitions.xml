<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015, 2017 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<Definitions>
	<!---
		The base definition of the attachment reference. An attachment reference is a reference object that points to an attachment primary object.
		There are several kinds of attachment references: {@link cmc/catalog/BaseCatalogAttachmentReference}, {@link cmc/catalog/BaseCatalogGroupAttachmentReference} and {@link cmc/catalog/BaseCatalogEntryAttachmentReference}.
		This definition only defines the PropertyDefinitions that all kinds of attachment references can inherit.
		Definitions that are based on cmc/catalog/BaseAttachmentReference need to specify {@link cmc/foundation/CreateService CreateService},{@link cmc/foundation/UpdateService UpdateService},{@link cmc/foundation/DeleteService DeleteService},objectType and referencedType.
	-->
	<ReferenceObjectDefinition copyProtected="false" definitionName="cmc/catalog/BaseAttachmentReference" displayName="${catalogResources.catalogAttachmentReference_DisplayName}" idProperty="attachmentRefId" isBaseDefinition="true">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			How this attachment is used for the current business object.
			Expected values are: "No Usage", "Images", "Other", "Media", "Documents", "Thumbnail Images", "User Manual", "Warranty", "Color Swatch".
		-->
		<PropertyDefinition displayName="${catalogResources.catalogAttachmentReferenceUsage_DisplayName}" propertyName="usage" required="true" type="string">
			<PropertyValueService url="/cmc/GetAvailableAttachmentReferenceUsages">
				<ServiceParam name="storeId"/>
			</PropertyValueService>
		</PropertyDefinition>
		<!---
			The display sequence of the attachments.
		-->
		<PropertyDefinition displayName="${catalogResources.displaySequence}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<Xml name="template">
			<sequence>0</sequence>
		</Xml>
	</ReferenceObjectDefinition>

	<!---
		The base definition of the catalog attachment reference. A catalog attachment reference is an association between a catalog and an attachment.
		There are two kinds of catalog attachment references: {@link cmc/catalog/CatalogAttachmentReference} and {@link cmc/catalog/InheritedCatalogAttachmentReference}. This definition includes the common services and children of both kinds.
		Definitions that are based on cmc/catalog/BaseCatalogAttachmentReference need to specify objectType and referencedType.
	-->
	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseAttachmentReference" definitionName="cmc/catalog/BaseCatalogAttachmentReference" isBaseDefinition="true">
		<CreateService url="/cmc/CreateCatalogAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</CreateService>
		<UpdateService url="/cmc/UpdateCatalogAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true"/>
			<ServiceParam name="attachmentRefId" propertyName="attachmentRefId"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</UpdateService>
		<DeleteService url="/cmc/DeleteCatalogAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true"/>
			<ServiceParam name="attachmentRefId" propertyName="attachmentRefId"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</DeleteService>
		<ChildObjectDefinition baseDefinition="cmc/catalog/CatalogAttachmentReferenceDescription"/>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogAttachmentReference" definitionName="cmc/catalog/CatalogAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="AttachmentReference" referencedType="Attachment"/>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogAttachmentReference" definitionName="cmc/catalog/CatalogInheritedAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="BusinessObjectToInheritedAttachment" referencedType="InheritedAttachment"/>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogAttachmentReference" compatibleObjectTypes="BusinessObjectToInheritedAttachment" definitionName="cmc/catalog/InheritedCatalogInheritedAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="InheritedBusinessObjectToInheritedAttachment" referencedType="InheritedAttachment"/>

	<!---
		The base definition of the catalog entry attachment reference. A catalog entry attachment reference is an association between a catalog entry and an attachment.
		There are two kinds of catalog entry attachment references: {@link cmc/catalog/CatalogEntryAttachmentReference} and {@link cmc/catalog/InheritedCatalogEntryAttachmentReference}. This definition includes the common services and children of both kinds.
		Definitions that are based on cmc/catalog/BaseCatalogEntryAttachmentReference need to specify objectType and referencedType.
	-->
	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseAttachmentReference" definitionName="cmc/catalog/BaseCatalogEntryAttachmentReference" isBaseDefinition="true">
		<CreateService url="/cmc/CreateCatalogEntryAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</CreateService>
		<UpdateService url="/cmc/UpdateCatalogEntryAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="attachmentRefId" propertyName="attachmentRefId"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</UpdateService>
		<DeleteService url="/cmc/DeleteCatalogEntryAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="attachmentRefId" propertyName="attachmentRefId"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</DeleteService>
		<ChildObjectDefinition baseDefinition="cmc/catalog/CatalogEntryAttachmentReferenceDescription"/>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryAttachmentReference" definitionName="cmc/catalog/CatalogEntryAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="AttachmentReference" referencedType="Attachment"/>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryAttachmentReference" definitionName="cmc/catalog/CatalogEntryInheritedAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="BusinessObjectToInheritedAttachment" referencedType="InheritedAttachment"/>

	<ReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseCatalogEntryAttachmentReference" compatibleObjectTypes="BusinessObjectToInheritedAttachment" definitionName="cmc/catalog/InheritedCatalogEntryInheritedAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="InheritedBusinessObjectToInheritedAttachment" referencedType="InheritedAttachment">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ReferenceObjectDefinition>

	<!---
		The base definition of the category attachment reference. A category attachment reference is an association between a category and an attachment.
		There are two kinds of category attachment references: {@link cmc/catalog/CatalogGroupAttachmentReference} and {@link cmc/catalog/InheritedCatalogGroupAttachmentReference}. This definition includes the common services and children of both kinds.
		Definitions that are based on cmc/catalog/BaseAttachmentCatalogGroupReference need to specify objectType and referencedType.
	-->
	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseAttachmentReference" definitionName="cmc/catalog/BaseCatalogGroupAttachmentReference" isBaseDefinition="true">
		<CreateService url="/cmc/CreateCatalogGroupAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</CreateService>
		<UpdateService url="/cmc/UpdateCatalogGroupAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="attachmentRefId" propertyName="attachmentRefId"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</UpdateService>
		<DeleteService url="/cmc/DeleteCatalogGroupAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="attachmentRefId" propertyName="attachmentRefId"/>
			<ServiceParam name="attachmentId" objectPath="AttachmentGroup" propertyName="attachmentId"/>
		</DeleteService>
		<ChildObjectDefinition baseDefinition="cmc/catalog/CatalogGroupAttachmentReferenceDescription"/>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogGroupAttachmentReference" definitionName="cmc/catalog/CatalogGroupAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="AttachmentReference" referencedType="Attachment"/>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogGroupAttachmentReference" definitionName="cmc/catalog/CatalogGroupInheritedAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="BusinessObjectToInheritedAttachment" referencedType="InheritedAttachment"/>

	<ReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseCatalogGroupAttachmentReference" compatibleObjectTypes="BusinessObjectToInheritedAttachment" definitionName="cmc/catalog/InheritedCatalogGroupInheritedAttachmentReference" objectGroups="AttachmentReferenceGroup" objectType="InheritedBusinessObjectToInheritedAttachment" referencedType="InheritedAttachment">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ReferenceObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/AttachmentReferenceDescription" idProperty="languageId" languageSensitive="true">
		<dependency localName="attachmentResources" moduleName="cmc/attachment/AttachmentResources"/>
		<PropertyDefinition displayName="${attachmentResources.attachmentShortDescription}" maximumSize="254" propertyName="sdesc" type="string"/>
		<PropertyDefinition displayName="${attachmentResources.attachmentLongDescription}" maximumSize="4000" propertyName="ldesc" type="string"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/AttachmentReferenceDescription" definitionName="cmc/catalog/CatalogAttachmentReferenceDescription" objectType="AttachmentReferenceDescription">
		<CreateService url="/cmc/UpdateCatalogAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="attachmentRefId" objectPath="AttachmentReferenceGroup" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
			<ServiceParam name="catalogId" parentProperty="true" propertyName="catalogId"/>
		</CreateService>
		<UpdateService url="/cmc/UpdateCatalogAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="attachmentRefId" objectPath="AttachmentReferenceGroup" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
			<ServiceParam name="catalogId" parentProperty="true" propertyName="catalogId"/>
		</UpdateService>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/AttachmentReferenceDescription" definitionName="cmc/catalog/CatalogEntryAttachmentReferenceDescription" objectType="AttachmentReferenceDescription">
		<CreateService url="/cmc/UpdateCatalogEntryAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="attachmentRefId" objectPath="AttachmentReferenceGroup" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
			<ServiceParam name="catentryId" parentProperty="true" propertyName="catentryId"/>
		</CreateService>
		<UpdateService url="/cmc/UpdateCatalogEntryAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="attachmentRefId" objectPath="AttachmentReferenceGroup" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
			<ServiceParam name="catentryId" parentProperty="true" propertyName="catentryId"/>
		</UpdateService>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/AttachmentReferenceDescription" definitionName="cmc/catalog/CatalogGroupAttachmentReferenceDescription" objectType="AttachmentReferenceDescription">
		<CreateService url="/cmc/UpdateCatalogGroupAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="attachmentRefId" objectPath="AttachmentReferenceGroup" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
			<ServiceParam name="catgroupId" parentProperty="true" propertyName="catgroupId"/>
		</CreateService>
		<UpdateService url="/cmc/UpdateCatalogGroupAttachmentReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="attachmentRefId" objectPath="AttachmentReferenceGroup" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
			<ServiceParam name="catgroupId" parentProperty="true" propertyName="catgroupId"/>
		</UpdateService>
	</ChildObjectDefinition>

	<!---
		This child object represents a catalog entry description.
		The object uses the 'xdesc_' prefix for all user data values.
	-->
	<ChildObjectDefinition definitionName="cmc/catalog/CatalogEntryDescription" displayName="${catalogResources.catalogEntry_Description}" idProperty="languageId" languageSensitive="true" objectType="CatalogEntryDescription" releaseWhenClosed="false">
		<dependency localName="attachmentResources" moduleName="cmc/attachment/AttachmentResources"/>
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service for the description fields of a catalog entry.   -->
		<CreateService url="/cmc/CreateCatalogEntryDescription">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="descriptionLanguageId" propertyName="languageId"/>
		</CreateService>
		<!--- Update service for the description fields of a catalog entry.   -->
		<UpdateService url="/cmc/UpdateCatalogEntryDescription">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="descriptionLanguageId" propertyName="languageId"/>
		</UpdateService>
		<!--- Name of the catalog entry  -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionName_DisplayName}" maximumSize="128" propertyName="name" type="string"/>
		<!--- This property definition represents the Short description of the catalog entry -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionShortDescription_DisplayName}" maximumSize="254" propertyName="sDesc" type="string"/>
		<!--- This property definition represents the long description of the catalog entry -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionLongDescription_DisplayName}" maximumSize="4000" propertyName="lDesc" type="string"/>
		<!--- Keyword of the catalog entry -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionKeywords_DisplayName}" maximumSize="254" propertyName="keyword" type="string"/>
		<!--- This property definition represents the Thumbnail image path of the catalog entry  -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionThumbnailImage_DisplayName}" maximumSize="254" propertyName="tImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="tImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetCatalogEntryThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="tImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetCatalogEntryThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="tImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="tImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
		<!--- This property definition represents the Full image path of the catalog entry. -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionFullImage_DisplayName}" maximumSize="254" propertyName="fImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="fImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetCatalogEntryFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="fImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetCatalogEntryFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="fImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="fImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
		<!--- This property definition represents the Additional description 1 for the catalog entry. -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionAlternateDescription1_DisplayName}" maximumSize="4000" propertyName="xdesc_auxDescription1" type="string"/>
		<!--- This property definition represents the Additional description 2 for the catalog entry. -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionAlternateDescription2_DisplayName}" maximumSize="4000" propertyName="xdesc_auxDescription2" type="string"/>
		<!--- By default, the published flag is set to 1 (true)  -->
		<PropertyDefinition displayName="${catalogResources.displayToCustomerPrompt}" propertyName="xdesc_published" required="true">
			<PropertyValue displayName="${catalogResources.yesPrompt}" value="1"/>
			<PropertyValue displayName="${catalogResources.noPrompt}" value="0"/>
		</PropertyDefinition>
		<!--- Set the default value for the published flag to 1 (true)  -->
		<Xml name="template">
			<xdesc_published>1</xdesc_published>
		</Xml>
	</ChildObjectDefinition>

	<!---
		This child object represents the override of a catalog entry description.
		The object uses the 'xdescovr_' prefix for all user data values.
	-->
	<ChildObjectDefinition definitionName="cmc/catalog/CatalogEntryDescriptionOverride" displayName="${catalogResources.catalogEntry_Description}" idProperty="languageId" initializeObjectStoreId="true" languageSensitive="true" objectType="CatalogEntryDescriptionOverride" releaseWhenClosed="false">
		<dependency localName="attachmentResources" moduleName="cmc/attachment/AttachmentResources"/>
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service for the description override fields of a catalog entry.   -->
		<CreateService url="/cmc/UpdateCatalogEntryDescriptionOverride">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="overrideLanguageId" propertyName="languageId"/>
		</CreateService>
		<!--- Update service for the description override fields of a catalog entry.   -->
		<UpdateService url="/cmc/UpdateCatalogEntryDescriptionOverride">
			<ServiceParam name="storeId"/>
			<ServiceParam name="overrideId" optional="true" propertyName="overrideId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="overrideLanguageId" propertyName="languageId"/>
		</UpdateService>
		<!--- Name of the catalog entry override -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionName_DisplayName}" maximumSize="128" propertyName="overrideName" type="string"/>
		<!--- This property definition represents the Short description override of the catalog entry -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionShortDescription_DisplayName}" maximumSize="254" propertyName="overrideSDesc" type="string"/>
		<!--- This property definition represents the long description override of the catalog entry -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionLongDescription_DisplayName}" maximumSize="4000" propertyName="overrideLDesc" type="string"/>
		<!--- Keyword of the catalog entry -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionKeywords_DisplayName}" maximumSize="254" propertyName="overrideKeyword" type="string"/>
		<!--- This property definition represents the Thumbnail image path override of the catalog entry  -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionThumbnailImage_DisplayName}" maximumSize="254" propertyName="overrideTImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="overrideTImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetCatalogEntryOverrideThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="overrideTImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetCatalogEntryOverrideThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="overrideTImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="overrideTImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
		<!--- This property definition represents the Full image path override of the catalog entry. -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionFullImage_DisplayName}" maximumSize="254" propertyName="overrideFImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="overrideFImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetCatalogEntryOverrideFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="overrideFImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetCatalogEntryOverrideFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="overrideFImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="overrideFImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
		<!--- This property definition represents the Additional description 1 override for the catalog entry. -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionAlternateDescription1_DisplayName}" maximumSize="4000" propertyName="xdescovr_auxDescription1" type="string"/>
		<!--- This property definition represents the Additional description 2 override for the catalog entry. -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryDescriptionAlternateDescription2_DisplayName}" maximumSize="4000" propertyName="xdescovr_auxDescription2" type="string"/>
		<!--- By default, the published flag is set to empty to represent that the value is taken from the asset store value.  -->
		<PropertyDefinition displayName="${catalogResources.displayToCustomerPrompt}" propertyName="xdescovr_published" required="false">
			<PropertyValue displayName="${catalogResources.useAssetStoreValue}" value=""/>
			<PropertyValue displayName="${catalogResources.yesPrompt}" value="1"/>
			<PropertyValue displayName="${catalogResources.noPrompt}" value="0"/>
		</PropertyDefinition>
		<!--- Set the published flag default to empty to represent that the value is taken from the asset store value.  -->
		<Xml name="template">
			<xdescovr_published/>
		</Xml>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogEntryExtraProperties" displayName="${catalogResources.catalogEntryExtraProperties_DisplayName}" idProperty="extraPropertiesId" objectType="CatalogEntryExtraProperties" releaseWhenClosed="false" singleInstance="true">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service for the user data fields of the catalog entry. -->
		<CreateService url="/cmc/CreateCatalogEntryExtraProperties">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
		</CreateService>
		<!--- Update service for the user data fields of the catalog entry. -->
		<UpdateService url="/cmc/UpdateCatalogEntryExtraProperties">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
		</UpdateService>
		<!--- Manufacturer name -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesManufacturerName_DisplayName}" maximumSize="64" propertyName="xprop_manufacturer" type="string"/>
		<!--- Manufacturer Partnumber-->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesManufacturerPartnumber_DisplayName}" maximumSize="64" propertyName="xprop_manufacturerPartNumber" type="string"/>
		<!--- URL -->
		<PropertyDefinition displayName="${catalogResources.urlPrompt}" maximumSize="254" propertyName="xprop_url" type="string"/>
		<!--- Announcement Date -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesAnnouncementDate_DisplayName}" propertyName="xprop_startDate" type="date"/>
		<!--- Withdrawal Date  -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesWithdrawalDate_DisplayName}" propertyName="xprop_endDate" type="date"/>
		<!--- Availability Date -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesAvailabilityDate_DisplayName}" propertyName="xprop_availabilityDate" type="date"/>
		<!--- Last Date To Order -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesLastDateToOrder_DisplayName}" propertyName="xprop_lastOrderDate" type="date"/>
		<!--- End Of Service Date -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesEndOfServiceDate_DisplayName}" propertyName="xprop_endOfServiceDate" type="date"/>
		<!--- Discontinued Date  -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesDiscontinuedDate_DisplayName}" propertyName="xprop_discontinueDate" type="date"/>
		<!--- Field 1 -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesField1_DisplayName}" maxValue="2147483647" minValue="-2147483648" propertyName="xprop_field1" type="integer"/>
		<!--- Field 2 -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesField2_DisplayName}" maxValue="2147483647" minValue="-2147483648" propertyName="xprop_field2" type="integer"/>
		<!--- Field 3 -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesField3_DisplayName}" maxValue="9999999999999.99999" maximumDecimalPlaces="5" minValue="-9999999999999.99999" propertyName="xprop_field3" type="number"/>
		<!--- Field 4 -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesField4_DisplayName}" maximumSize="254" propertyName="xprop_field4" type="string"/>
		<!--- Field 5 -->
		<PropertyDefinition displayName="${catalogResources.catalogEntryExtraPropertiesField5_DisplayName}" maximumSize="254" propertyName="xprop_field5" type="string"/>
		<!--- Disallow Recurring Order -->
		<PropertyDefinition propertyName="xprop_disallowRecurringOrder">
			<PropertyValue displayName="${catalogResources.catalogEntryRecurringOrderTrue}" isDefault="true" value="0"/>
			<PropertyValue displayName="${catalogResources.catalogEntryRecurringOrderFalse}" value="1"/>
		</PropertyDefinition>
		<!--- Subscription Type Id -->
		<PropertyDefinition propertyName="xprop_subscriptionTypeId">
			<PropertyValue displayName="${catalogResources.catalogEntrySubscriptionTrue}" value="TIME-BASED"/>
			<PropertyValue displayName="${catalogResources.catalogEntrySubscriptionFalse}" isDefault="true" value="NONE"/>
		</PropertyDefinition>
		<!---
			By default, the buyable flag on a catalog entry is set to 1 (true)
			and the on-special flag on a catalog entry is set to 0 (false).
		-->
		<Xml name="template">
			<xprop_buyable>1</xprop_buyable>
			<xprop_onSpecial>0</xprop_onSpecial>
			<xprop_dynamicKitConfigurable>1</xprop_dynamicKitConfigurable>
		</Xml>
		<!---
			Property definition for item specified id.
			This property is set to copyProtected to prevent a copies of this object inheriting this item specified id.
		-->
		<PropertyDefinition copyProtected="true" propertyName="xprop_itemSpecifiedId"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogEntryInventory" displayName="${catalogResources.catalogEntryInventory_Description}" idProperty="catalogEntryInventoryId" objectType="CatalogEntryInventory" singleInstance="true">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service for the fulfillment properties of a catalog entry. -->
		<CreateService abortEmptyTransactions="true" url="/cmc/CreateCatalogEntryInventory">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
		</CreateService>
		<!--- Update service for the fulfillment properties of a catalog entry. -->
		<UpdateService url="/cmc/UpdateCatalogEntryInventory">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
		</UpdateService>
		<!--- This property definition represents the  Track inventory options -->
		<PropertyDefinition propertyName="xful_trackInventory">
			<PropertyValue displayName="${catalogResources.catalogEntryTrackInventory_Not_Track}" value="N"/>
			<PropertyValue displayName="${catalogResources.catalogEntryTrackInventory_Track_Internally}" value="Y"/>
			<PropertyValue displayName="${catalogResources.catalogEntryTrackInventory_Track_Externally}" value="E"/>
		</PropertyDefinition>
		<!--- This property definition represents the  Back orderable options -->
		<PropertyDefinition propertyName="xful_backOrderable">
			<PropertyValue displayName="${catalogResources.yesPrompt}" value="Y"/>
			<PropertyValue displayName="${catalogResources.noPrompt}" value="N"/>
		</PropertyDefinition>
		<!--- This property definition represents the  Force back order options -->
		<PropertyDefinition propertyName="xful_forceBackOrder">
			<PropertyValue displayName="${catalogResources.yesPrompt}" value="Y"/>
			<PropertyValue displayName="${catalogResources.noPrompt}" value="N"/>
		</PropertyDefinition>
		<!--- This property definition represents the  Return not desired options -->
		<PropertyDefinition propertyName="xful_returnNotDesired">
			<PropertyValue displayName="${catalogResources.yesPrompt}" value="Y"/>
			<PropertyValue displayName="${catalogResources.noPrompt}" value="N"/>
		</PropertyDefinition>
		<!--- This property definition represents the  Creditable options -->
		<PropertyDefinition propertyName="xful_creditable">
			<PropertyValue displayName="${catalogResources.yesPrompt}" value="Y"/>
			<PropertyValue displayName="${catalogResources.noPrompt}" value="N"/>
		</PropertyDefinition>
		<!--- This property definition represents the  Release separately options -->
		<PropertyDefinition propertyName="xful_releaseSeparately">
			<PropertyValue displayName="${catalogResources.yesPrompt}" value="Y"/>
			<PropertyValue displayName="${catalogResources.noPrompt}" value="N"/>
		</PropertyDefinition>
		<!--- This property definition represents the Unit of measures options.  This can be customized based on your goods available in your catalog. -->
		<PropertyDefinition propertyName="xful_uom">
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_Day}" value="DAY"/>
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_Hour}" value="HUR"/>
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_Kilogram}" value="KGM"/>
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_milligram}" value="MGM"/>
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_Month}" value="MON"/>
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_1_Unit}" value="C62"/>
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_Week}" value="WEE"/>
			<PropertyValue displayName="${catalogResources.catalogEntryWeightMeasure_Year}" value="ANN"/>
		</PropertyDefinition>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogEntryListPrice" displayName="${catalogResources.catalogEntryListPrice_Description}" idProperty="listpriceId" objectType="CatalogEntryListPrice" releaseWhenClosed="false" singleInstance="true">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			Create service for creating the list price for a catalog entry.
			Prices in different currencies can be created in the same service call.
			Their service parameter names are the currency codes (for example 'USD', 'CAD').
			Service parameters 'defaultCurrencyCode' and 'currencyCodes' are needed by the
			struts action implementation to build the service request message.
		-->
		<CreateService url="/cmc/CreateCatalogEntryListPrice">
			<ServiceParam name="storeId"/>
			<ServiceParam name="defaultCurrencyCode"/>
			<ServiceParam name="currencyCodes"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
		</CreateService>
		<!---
			Update service for updating the list price for a catalog entry.
			Prices in different currencies can be created/updated/deleted in the same service call.
			Their service parameter names are the currency codes (for example 'USD', 'CAD').
			Service parameters 'defaultCurrencyCode' and 'currencyCodes' are needed by the struts action
			implementation to build the service request message.
		-->
		<UpdateService url="/cmc/UpdateCatalogEntryListPrice">
			<ServiceParam name="storeId"/>
			<ServiceParam name="defaultCurrencyCode"/>
			<ServiceParam name="currencyCodes"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
		</UpdateService>
		<!---
			The property definition for the list price in the default currency.
			Its property name is currency code of the default currency for the current store (like 'USD').
			It is dynamically retrieved from store configuration service. So the property name should not be declared here.
		-->
		<DefaultCurrencyPropertyDefinition displayName="${catalogResources.listPricePrompt}" minValue="0" propertyName="defaultCurrencyId" type="currency"/>
		<!---
			The property definition for the list prices in all alternative currencies.
			This property definition will dynamically retrieve all alternative currency codes from store configuration service
			and create property definitions for each of currencies with property name as the currency code.
			So the property name should not be declared here.
		-->
		<AlternativeCurrencyPropertyDefinition displayName="${catalogResources.listPricePrompt}" minValue="0" propertyName="alternativeCurrencyId" type="currency"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntrySeoAttributes" definitionName="cmc/catalog/CatalogEntryBaseSeoAttributes" objectType="CatalogEntryBaseSeoAttributes">
		<TrueEnablementCondition/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntrySeoAttributes" definitionName="cmc/catalog/InheritedCatalogEntryBaseSeoAttributes" objectType="InheritedCatalogEntryBaseSeoAttributes">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/BaseCatalogEntrySeoAttributes" isBaseDefinition="true" releaseWhenClosed="false" singleInstance="true">
		<ChildObjectDefinition baseDefinition="cmc/catalog/CatalogEntrySeoAttributes"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogEntrySeoAttributes" idProperty="languageId" languageSensitive="true" objectType="CatalogEntrySeoAttributes" releaseWhenClosed="false">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			Create service for creating the Search Engine Optimization (SEO) properties for a catalog entry.
		-->
		<CreateService url="/cmc/CreateCatalogEntrySeoAttributes">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogEntryBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</CreateService>
		<!---
			Update service for updating the Search Engine Optimization (SEO) properties for a catalog entry.
			SEO properties can be updated/deleted in the same service call.
		-->
		<UpdateService url="/cmc/UpdateCatalogEntrySeoAttributes">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogEntryBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</UpdateService>
		<!--- This property definition represents the custom title of the catalog entry page. -->
		<PropertyDefinition displayName="${catalogResources.seoTitlePrompt}" maximumSize="254" propertyName="seo_title" type="string"/>
		<!--- This property definition represents the custom meta description of the catalog entry page. -->
		<PropertyDefinition displayName="${catalogResources.seoMetaDescPrompt}" maximumSize="1024" propertyName="seo_metadesc" type="string"/>
		<!--- This property definition represents the custom image alt description of the catalog entry page. -->
		<PropertyDefinition displayName="${catalogResources.seoImageDescPrompt}" maximumSize="254" propertyName="seo_imagealtdesc" type="string"/>
		<!--- Default Values -->
		<Xml name="template">
			<seo_useTitleDefault>0</seo_useTitleDefault>
			<seo_useMetaDescDefault>0</seo_useMetaDescDefault>
			<seo_useImageAltDescDefault>0</seo_useImageAltDescDefault>
		</Xml>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogEntrySeoURL" idProperty="languageId" languageSensitive="true" objectType="CatalogEntrySeoURL" releaseWhenClosed="false">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			Create service for Search Engine Optimization (SEO) URL keyword for a catalog entry.
		-->
		<CreateService url="/cmc/CreateCatalogEntrySeoURL">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogEntryBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</CreateService>
		<!---
			Update service for updating the Search Engine Optimization (SEO) URL keyword for a catalog entry.
		-->
		<UpdateService url="/cmc/UpdateCatalogEntrySeoURL">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogEntryBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</UpdateService>
		<!--- This property definition represents the desktop URL keyword for the catalog entry page. -->
		<PropertyDefinition displayName="${catalogResources.seoDesktopUrlPrompt}" maximumSize="254" propertyName="seo_urlkeyword" type="string">
			<PropertyStringValidator invalidCharacters="&amp;?=#/_ ~+%,.'&quot;" validatorId="seoDesktopUrlStringValidator"/>
		</PropertyDefinition>
		<Xml name="template">
			<seo_useUrlKeywordDefault>0</seo_useUrlKeywordDefault>
		</Xml>
	</ChildObjectDefinition>

	<ChildObjectDefinition copyProtected="true" definitionName="cmc/catalog/BaseCatalogEntrySeoURL" isBaseDefinition="true" releaseWhenClosed="false" singleInstance="true">
		<ChildObjectDefinition baseDefinition="cmc/catalog/CatalogEntrySeoURL"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntrySeoURL" definitionName="cmc/catalog/CatalogEntryBaseSeoURL" objectType="CatalogEntryBaseSeoURL">
		<TrueEnablementCondition/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntrySeoURL" definitionName="cmc/catalog/InheritedCatalogEntryBaseSeoURL" objectType="InheritedCatalogEntryBaseSeoURL">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogGroupSeoAttributes" definitionName="cmc/catalog/CatalogGroupBaseSeoAttributes" objectType="CatalogGroupBaseSeoAttributes">
		<TrueEnablementCondition/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogGroupSeoAttributes" definitionName="cmc/catalog/InheritedCatalogGroupBaseSeoAttributes" objectType="InheritedCatalogGroupBaseSeoAttributes">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/BaseCatalogGroupSeoAttributes" isBaseDefinition="true" releaseWhenClosed="false" singleInstance="true">
		<ChildObjectDefinition baseDefinition="cmc/catalog/CatalogGroupSeoAttributes"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogGroupSeoAttributes" idProperty="languageId" languageSensitive="true" objectType="CatalogGroupSeoAttributes" releaseWhenClosed="false">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			Create service for creating the Search Engine Optimization (SEO) properties for a catalog group.
		-->
		<CreateService url="/cmc/CreateCatalogGroupSeoAttributes">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogGroupBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogGroupBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</CreateService>
		<!---
			Update service for updating the Search Engine Optimization (SEO) properties for a catalog group.
			SEO properties can be updated/deleted in the same service call.
		-->
		<UpdateService url="/cmc/UpdateCatalogGroupSeoAttributes">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogGroupBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogGroupBaseSeoAttributes" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</UpdateService>
		<!--- This property definition represents the custom title of the catalog group page. -->
		<PropertyDefinition displayName="${catalogResources.seoTitlePrompt}" maximumSize="254" propertyName="seo_title" type="string"/>
		<!--- This property definition represents the custom meta description of the catalog group page. -->
		<PropertyDefinition displayName="${catalogResources.seoMetaDescPrompt}" maximumSize="1024" propertyName="seo_metadesc" type="string"/>
		<!--- This property definition represents the custom image alt description of the catalog entry page. -->
		<PropertyDefinition displayName="${catalogResources.seoImageDescPrompt}" maximumSize="254" propertyName="seo_imagealtdesc" type="string"/>
		<!--- Default Values -->
		<Xml name="template">
			<seo_useTitleDefault>0</seo_useTitleDefault>
			<seo_useMetaDescDefault>0</seo_useMetaDescDefault>
			<seo_useImageAltDescDefault>0</seo_useImageAltDescDefault>
		</Xml>
	</ChildObjectDefinition>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogGroupSeoURL" idProperty="languageId" languageSensitive="true" objectType="CatalogGroupSeoURL" releaseWhenClosed="false">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			Create service for Search Engine Optimization (SEO) URL keyword for a catalog group.
		-->
		<CreateService url="/cmc/CreateCatalogGroupSeoURL">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogGroupBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogGroupBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</CreateService>
		<!---
			Update service for updating the Search Engine Optimization (SEO) URL keyword for a catalog group.
		-->
		<UpdateService url="/cmc/UpdateCatalogGroupSeoURL">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogGroupBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedCatalogGroupBaseSeoURL" parentProperty="true" propertyName="objectType" resolvePrimaryParent="false"/>
			</ServiceParam>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="languageId" parameterName="seoLanguageId" propertyName="languageId"/>
		</UpdateService>
		<!--- This property definition represents the desktop URL keyword for the catalog entry page. -->
		<PropertyDefinition displayName="${catalogResources.seoDesktopUrlPrompt}" maximumSize="254" propertyName="seo_urlkeyword" type="string">
			<PropertyStringValidator invalidCharacters="&amp;?=#/_ ~+%,.'&quot;" validatorId="seoDesktopUrlStringValidator"/>
		</PropertyDefinition>
		<Xml name="template">
			<seo_useUrlKeywordDefault>0</seo_useUrlKeywordDefault>
		</Xml>
	</ChildObjectDefinition>

	<ChildObjectDefinition copyProtected="true" definitionName="cmc/catalog/BaseCatalogGroupSeoURL" isBaseDefinition="true" releaseWhenClosed="false" singleInstance="true">
		<ChildObjectDefinition baseDefinition="cmc/catalog/CatalogGroupSeoURL"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogGroupSeoURL" definitionName="cmc/catalog/CatalogGroupBaseSeoURL" objectType="CatalogGroupBaseSeoURL">
		<TrueEnablementCondition/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogGroupSeoURL" definitionName="cmc/catalog/InheritedCatalogGroupBaseSeoURL" objectType="InheritedCatalogGroupBaseSeoURL">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ChildObjectDefinition>

	<ChildObjectDefinition copyProtected="true" definitionName="cmc/catalog/BaseCatalogEntryOffer" displayName="${catalogResources.catalogEntryOfferPrice_DisplayName}" idProperty="offerPriceId" isBaseDefinition="true" objectGroups="CatalogEntryOfferGroup" releaseWhenClosed="false">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			Create service for creating an offer for a catalog entry.
			Offer prices in different currencies can be created in the same service call.
			Their service parameter names are the currency codes (for example 'USD', 'CAD').
			Service parameters 'defaultCurrencyCode' and 'currencyCodes' are needed by the
			struts action implementation to build the service request message.
		-->
		<CreateService sendSiblingRequestsInParallel="false" url="/cmc/CreateCatalogEntryOfferPrice">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryOffer" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryOffer" negate="true" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="defaultCurrencyCode"/>
			<ServiceParam name="currencyCodes"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
		</CreateService>
		<!---
			Update service for updating an offer for a catalog entry.
			Offer prices in different currencies can be created/updated/deleted in the same service call.
			Their service parameter names are the currency codes (for example 'USD', 'CAD').
			Service parameters 'defaultCurrencyCode' and 'currencyCodes' are needed by the
			struts action implementation to build the service request message.
		-->
		<UpdateService sendSiblingRequestsInParallel="false" url="/cmc/UpdateCatalogEntryOfferPrice">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryOffer" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryOffer" negate="true" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="defaultCurrencyCode"/>
			<ServiceParam name="currencyCodes"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="priceListId" propertyName="priceListId"/>
			<ServiceParam name="qualifier" propertyName="qualifier"/>
			<ServiceParam name="minimumQuantity" optional="true" propertyName="minimumQuantity"/>
			<ServiceParam name="maximumQuantity" optional="true" propertyName="maximumQuantity"/>
			<ServiceParam name="startDate" optional="true" propertyName="startDate"/>
			<ServiceParam name="endDate" optional="true" propertyName="endDate"/>
			<ServiceParam name="precedence" optional="true" propertyName="precedence"/>
		</UpdateService>
		<!---
			Delete service for deleting an offer for a catalog entry.
			All offer prices in this offer will be deleted.
		-->
		<DeleteService sendSiblingRequestsInParallel="false" url="/cmc/DeleteCatalogEntryOfferPrice">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryOffer" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogEntryOffer" negate="true" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="priceListId" propertyName="priceListId"/>
			<ServiceParam name="qualifier" propertyName="qualifier"/>
		</DeleteService>
		<!---
			This property definition is managed by the server and returned in the response of the create service.
		-->
		<PropertyDefinition copyProtected="true" propertyName="priceListId" serverManaged="true"/>
		<!---
			This property definition is managed by the server and returned in the response of the create service.
		-->
		<PropertyDefinition copyProtected="true" propertyName="qualifier" send="false" serverManaged="true"/>
		<!---
			Property definition for the minimum quantity of the offer. It is the minimum quantity
			that can be purchased in a single order under this Offer.
		-->
		<PropertyDefinition displayName="${catalogResources.catalogEntryOfferPriceMinimumQuantity_DisplayName}" propertyName="minimumQuantity" type="number"/>
		<!---
			Property definition for the maximum quantity of the offer. It is the maximum quantity
			that can be purchased in a single order under this Offer.
		-->
		<PropertyDefinition displayName="${catalogResources.catalogEntryOfferPriceMaximumQuantity_DisplayName}" propertyName="maximumQuantity" type="number"/>
		<!---
			Property definition for the start date of the offer.
		-->
		<PropertyDefinition displayName="${catalogResources.catalogEntryOfferPriceStartDate_DisplayName}" propertyName="startDate" type="datetime"/>
		<!---
			Property definition for the end date of the offer.
		-->
		<PropertyDefinition displayName="${catalogResources.catalogEntryOfferPriceEndDate_DisplayName}" propertyName="endDate" type="datetime"/>
		<!---
			Property definition for the precedence of the offer.
		-->
		<PropertyDefinition displayName="${catalogResources.catalogEntryOfferPricePrecedence_DisplayName}" propertyName="precedence" type="number"/>
		<!---
			The property definition for the offer price in the default currency.
			Its property name is currency code of the default currency for the current store (like 'USD').
			It is dynamically retrieved from store configuration service. So the property name should not be declared here.
		-->
		<DefaultCurrencyPropertyDefinition displayName="${catalogResources.offerPricePrompt}" minValue="0" propertyName="defaultCurrencyId" required="true" type="currency"/>
		<!---
			The property definition for the offer prices in all alternative currencies.
			This property definition will dynamically retrieve all alternative currency codes from store configuration service
			and create property definitions for each of currencies with property name as the currency code.
			So the property name should not be declared here.
		-->
		<AlternativeCurrencyPropertyDefinition displayName="${catalogResources.offerPricePrompt}" minValue="0" propertyName="alternativeCurrencyId" type="currency"/>
		<NumberRangeValidator baseDefinition="cmc/catalog/OfferPriceQuantityRangeValidator"/>
		<StartDateEndDateValidator endDatePropertyName="endDate" startDatePropertyName="startDate"/>
		<TrueEnablementCondition/>
	</ChildObjectDefinition>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryOffer" definitionName="cmc/catalog/CatalogEntryOffer" initializeObjectStoreId="true" objectType="CatalogEntryOffer"/>

	<ChildObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryOffer" definitionName="cmc/catalog/InheritedCatalogEntryOffer" objectType="InheritedCatalogEntryOffer">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ChildObjectDefinition>

	<ReferenceObjectDefinition copyProtected="true" deferLoad="true" definitionName="cmc/catalog/BaseMerchandisingAssociation" displayName="${catalogResources.merchandisingAssociation_DisplayName}" idProperty="associationId" isBaseDefinition="true" newDisplayName="${catalogResources.merchandisingAssociation_NewDisplayName}" objectType="BaseMerchandisingAssociation">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service for a merchandising association relationship between two catalog entries. -->
		<CreateService abortOnError="false" sendAll="false" url="/cmc/CreateMerchandisingAssociation">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" negate="true" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="assocCatentryId" objectPath="CatalogEntry" propertyName="catentryId"/>
			<ServiceParam name="assocPartNumber" objectPath="CatalogEntry" optional="true" propertyName="partnumber"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="quantity" optional="true" propertyName="quantity" sendEmpty="false"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence" sendEmpty="false"/>
			<ServiceParam name="semantic" propertyName="semantic" sendEmpty="false"/>
			<ServiceParam name="associationName" parameterName="name" propertyName="name" sendEmpty="false"/>
		</CreateService>
		<!--- Update service for a merchandising association relationship between two catalog entries. -->
		<UpdateService url="/cmc/UpdateMerchandisingAssociation">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" negate="true" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="quantity" optional="true" propertyName="quantity"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="associationId" propertyName="associationId"/>
			<ServiceParam name="assocCatentryId" objectPath="CatalogEntry" propertyName="catentryId"/>
			<ServiceParam name="assocPartNumber" objectPath="CatalogEntry" optional="true" propertyName="partnumber"/>
			<ServiceParam name="semantic" propertyName="semantic" sendEmpty="false"/>
			<ServiceParam name="associationName" parameterName="name" propertyName="name" sendEmpty="false"/>
		</UpdateService>
		<!--- Delete service to remove  a merchandising association relationship between two catalog entries. -->
		<DeleteService url="/cmc/DeleteMerchandisingAssociation">
			<ServiceParam name="storeId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" negate="true" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="objectStoreId" parameterName="storeId" parentProperty="true" propertyName="objectStoreId">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" propertyName="objectType"/>
			</ServiceParam>
			<ServiceParam name="quantity" optional="true" propertyName="quantity"/>
			<ServiceParam name="catentryId" parentProperty="true"/>
			<ServiceParam name="associationId" propertyName="associationId"/>
			<ServiceParam name="assocCatentryId" objectPath="CatalogEntry" propertyName="catentryId"/>
			<ServiceParam name="assocPartNumber" objectPath="CatalogEntry" optional="true" propertyName="partnumber"/>
		</DeleteService>
		<!--- This property definition represents the options for the type of merchandising associations available between two catalog entries. -->
		<PropertyDefinition displayName="${catalogResources.merchandisingAssociationAssocType}" propertyName="name" required="true">
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_REPLACEMENT}" value="REPLACEMENT"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_ACCESSORY}" value="ACCESSORY"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_UPSELL}" value="UPSELL"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_XSELL}" value="X-SELL"/>
			<MerchandisingAssociationReplacementTypeValidator package="cmc/catalog"/>
		</PropertyDefinition>
		<!--- This property definition represents the options for the semantic of merchandising associations available between two catalog entries. -->
		<PropertyDefinition displayName="${catalogResources.merchandisingAssociationAssocSemantic}" propertyName="semantic" required="true">
			<PropertyValue displayName="${catalogResources.merchandisingAssociationSemantic_NONE}" value="NONE"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationSemantic_TEMP}" value="TEMP"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationSemantic_REQUIRES}" value="REQUIRES"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationSemantic_COMES_WITH}" value="COMES_WITH"/>
		</PropertyDefinition>
		<!--- Quantity -->
		<PropertyDefinition displayName="${catalogResources.merchandisingAssociationQuantity_ColumnHeader}" maxValue="9999999999" minValue="1" propertyName="quantity" type="number"/>
		<!--- Sequence -->
		<PropertyDefinition displayName="${catalogResources.displaySequence}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<!--- This property definition represents date1. -->
		<PropertyDefinition displayName="${catalogResources.merchandisingAssociationAssocDate1}" propertyName="xasso_date1" type="date"/>
		<!--- Default Values -->
		<Xml name="template">
			<quantity>1</quantity>
			<sequence>0</sequence>
			<semantic>NONE</semantic>
		</Xml>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseMerchandisingAssociation" definitionName="cmc/catalog/MerchandisingAssociationReferencedCatalogEntries" initializeObjectStoreId="true" objectType="MerchandisingAssociationReferencedCatalogEntries" referencedTypes="Product,Kit,Bundle,ProductSKU,CatalogGroupSKU,PredefinedDKit">
		<TrueEnablementCondition/>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseMerchandisingAssociation" compatibleObjectTypes="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" definitionName="cmc/catalog/MerchandisingAssociationReferencedInheritedCatalogEntries" initializeObjectStoreId="true" objectType="MerchandisingAssociationReferencedInheritedCatalogEntries" referencedTypes="InheritedProduct,InheritedKit,InheritedBundle,InheritedProductSKU,InheritedCatalogGroupSKU,InheritedPredefinedDKit">
		<TrueEnablementCondition/>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseMerchandisingAssociation" compatibleObjectTypes="MerchandisingAssociationReferencedInheritedCatalogEntries" definitionName="cmc/catalog/InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" objectType="InheritedMerchandisingAssociationReferencedInheritedCatalogEntries" referencedTypes="InheritedProduct,InheritedKit,InheritedBundle,InheritedProductSKU,InheritedCatalogGroupSKU">
		<EnablementCondition checkHasAccessRight="true" conditionId="accessRightCondition" enablementValue="true"/>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition definitionName="cmc/catalog/MerchandisingAssociationReferencedManytoManyCatalogSourceEntries" objectType="MerchandisingAssociationReferencedManytoManyCatalogSourceEntries" referencedTypes="Product,Kit,Bundle,ProductSKU,CatalogGroupSKU,InheritedProduct,InheritedKit,InheritedBundle,InheritedProductSKU,InheritedCatalogGroupSKU"/>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseMerchandisingAssociation" definitionName="cmc/catalog/MerchandisingAssociationReferencedManytoManyCatalogTargetEntries" objectType="MerchandisingAssociationReferencedManytoManyCatalogEntries" referencedTypes="Product,Kit,Bundle,ProductSKU,CatalogGroupSKU,InheritedProduct,InheritedKit,InheritedBundle,InheritedProductSKU,InheritedCatalogGroupSKU">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- This property definition represents the options for the type of merchandising associations available between two catalog entries. -->
		<PropertyDefinition displayName="${catalogResources.merchandisingAssociationAssocType}" forceParentValidation="true" propertyName="name" required="true">
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_REPLACEMENT}" value="REPLACEMENT"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_ACCESSORY}" value="ACCESSORY"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_UPSELL}" value="UPSELL"/>
			<PropertyValue displayName="${catalogResources.merchandisingAssociationName_XSELL}" value="X-SELL"/>
		</PropertyDefinition>
	</ReferenceObjectDefinition>

	<!---
		This is the base definition for a component reference.
		A component reference object represents the relationship between a primary catalog entry object,
		such as a Bundle or Kit, and its components.
		This definition is abstract and needs to be used as base definition for each component relationship that a
		primary catalog entry object may have.
		Definitions that are based on cmc/catalog/BaseComponent need to specify the objectType and
		a list of objects that are allowed to be components in the referencedTypes.
	-->
	<ReferenceObjectDefinition definitionName="cmc/catalog/BaseComponent" displayName="${catalogResources.bundleComponent_DisplayName}" idProperty="catentrelId" isBaseDefinition="true" newDisplayName="${catalogResources.bundleComponent_NewDisplayName}" objectType="BaseComponent">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service for the relationship between the bundle or kit and its component ( product or SKU). -->
		<CreateService url="/cmc/CreateComponent">
			<ServiceParam name="storeId"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" propertyName="catentryId"/>
			<ServiceParam name="childCatentryId" objectPath="CatalogEntry" parameterName="componentId" propertyName="catentryId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="quantity" optional="true" propertyName="quantity"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence"/>
		</CreateService>
		<!--- Update service for the relationship between the bundle or kit and its component ( product or SKU). -->
		<UpdateService url="/cmc/UpdateComponent">
			<ServiceParam name="storeId"/>
			<ServiceParam name="quantity" optional="true" propertyName="quantity"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" propertyName="catentryId"/>
			<ServiceParam name="childCatentryId" objectPath="CatalogEntry" parameterName="componentId" propertyName="catentryId"/>
		</UpdateService>
		<!---
			Delete service to remove a relationship between the bundle or kit and its component (product or SKU).
			The quantity parameter is specified to insure the correct xpath is generated.
		-->
		<DeleteService url="/cmc/DeleteComponent">
			<ServiceParam name="storeId"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" propertyName="catentryId"/>
			<ServiceParam name="childCatentryId" objectPath="CatalogEntry" parameterName="componentId" propertyName="catentryId"/>
			<ServiceParam name="quantity" optional="true" propertyName="quantity"/>
		</DeleteService>
		<!--- Quantity -->
		<PropertyDefinition displayName="${catalogResources.bundleComponentQuantity_DisplayName}" maxValue="9999999999" maximumSize="10" minValue="1" propertyName="quantity" required="true" type="number"/>
		<!--- Sequence -->
		<PropertyDefinition displayName="${catalogResources.bundleComponentSequence_DisplayName}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<!--- Default values -->
		<Xml name="template">
			<quantity>1</quantity>
			<sequence>0</sequence>
		</Xml>
	</ReferenceObjectDefinition>

	<!---
		This is the base definition for a component reference for a DynamicKit when Sterling Configuration is enabled.
	-->
	<ReferenceObjectDefinition definitionName="cmc/catalog/BaseSterlingDynamicKitComponent" displayName="${catalogResources.bundleComponent_DisplayName}" idProperty="catentrelId" isBaseDefinition="true" objectGroups="SterlingDynamicKitComponentGroup" objectType="BaseSterlingDynamicKitComponent">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
	</ReferenceObjectDefinition>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseComponent" definitionName="cmc/catalog/BundleComponent" objectType="BundleComponent" referencedTypes="Product,ProductSKU,CatalogGroupSKU,InheritedProduct,InheritedProductSKU,InheritedCatalogGroupSKU"/>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseComponent" definitionName="cmc/catalog/KitComponent" objectGroups="KitComponentGroup" objectType="KitComponent" referencedTypes="ProductSKU,CatalogGroupSKU,InheritedProductSKU,InheritedCatalogGroupSKU"/>

	<ReferenceObjectDefinition baseDefinition="cmc/catalog/BaseSterlingDynamicKitComponent" definitionName="cmc/catalog/SterlingDynamicKitComponent" objectType="SterlingDynamicKitComponent" referencedTypes="ProductSKU,CatalogGroupSKU,InheritedProductSKU,InheritedCatalogGroupSKU"/>

	<ReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseComponent" definitionName="cmc/catalog/InheritedBundleComponent" objectType="InheritedBundleComponent" referencedTypes="InheritedProduct,InheritedProductSKU,InheritedCatalogGroupSKU"/>

	<ReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseComponent" definitionName="cmc/catalog/InheritedKitComponent" objectGroups="KitComponentGroup" objectType="InheritedKitComponent" referencedTypes="InheritedProductSKU,InheritedCatalogGroupSKU"/>

	<ReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseSterlingDynamicKitComponent" definitionName="cmc/catalog/InheritedSterlingDynamicKitComponent" objectType="InheritedSterlingDynamicKitComponent" referencedTypes="InheritedProductSKU,InheritedCatalogGroupSKU"/>

	<ParentReferenceObjectDefinition cascadeDelete="true" definitionName="cmc/catalog/BaseProductChildSKU" idProperty="childCatalogEntryId" isBaseDefinition="true" objectType="BaseProductChildSKU" referencedType="ProductSKU">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Sequence -->
		<PropertyDefinition displayName="${catalogResources.productChildSequence_DisplayName}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<!--- Create service between the product and its SKUs. -->
		<CreateService url="/cmc/CreateProductSKU">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" objectPath="ProductSKUs" propertyName="catentryId"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" parentType="Products" propertyName="catentryId"/>
		</CreateService>
		<!--- Update service between the product and its SKUs. -->
		<UpdateService url="/cmc/UpdateProductSKU">
			<ServiceParam name="storeId"/>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="nav_catentryId" objectPath="ProductSKUs" propertyName="catentryId"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence"/>
			<ServiceParam name="catentryId" parentProperty="true" propertyName="catentryId"/>
		</UpdateService>
		<!--- Delete service between the product and its SKUs.
			This service does not actually delete the references. It is used to block the removal of an
			existing parentCatentryId by making it a mandatory parameter on the service.
		-->
		<DeleteService url="/cmc/CreateProductSKU">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" objectPath="ProductSKUs" propertyName="catentryId"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" parentType="Products" propertyName="catentryId"/>
		</DeleteService>
		<!--- Default values -->
		<Xml name="template">
			<sequence>0</sequence>
		</Xml>
	</ParentReferenceObjectDefinition>

	<!---
		Parent Reference object definition between the product and its SKUs.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseProductChildSKU" definitionName="cmc/catalog/ChildProductSKU" objectType="ProductChildSKU" referencedType="ProductSKU"/>

	<!---
		Parent Reference object definition between the product and its inherited SKUs.
	-->
    <ParentReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseProductChildSKU" definitionName="cmc/catalog/ChildInheritedProductSKU" objectType="ProductChildInheritedSKU" referencedType="InheritedProductSKU"/>

	<ParentReferenceObjectDefinition cascadeDelete="true" definitionName="cmc/catalog/BaseProductChildVariant" idProperty="childCatalogEntryId" isBaseDefinition="true" objectType="BaseProductChildVariant" referencedType="Variant">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Sequence -->
		<PropertyDefinition displayName="${catalogResources.productChildSequence_DisplayName}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<!--- Create service between the product and its SKUs. -->
		<CreateService url="/cmc/CreateVariantParent">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" objectPath="Variants" propertyName="catentryId"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" parentType="Products" propertyName="catentryId"/>
		</CreateService>
		<!--- Update service between the product and its SKUs. -->
		<UpdateService url="/cmc/UpdateVariantParent">
			<ServiceParam name="storeId"/>
			<ServiceParam contextName="masterCatalogId" name="catalogId"/>
			<ServiceParam name="nav_catentryId" objectPath="Variants" propertyName="catentryId"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence"/>
			<ServiceParam name="catentryId" parentProperty="true" propertyName="catentryId"/>
		</UpdateService>
		<!--- Delete service between the product and its SKUs.
			This service does not actually delete the references. It is used to block the removal of an
			existing parentCatentryId by making it a mandatory parameter on the service.
		-->
		<DeleteService url="/cmc/CreateVariantParent">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" objectPath="Variants" propertyName="catentryId"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" parentType="Products" propertyName="catentryId"/>
		</DeleteService>
		<!--- Default values -->
		<Xml name="template">
			<sequence>0</sequence>
		</Xml>
	</ParentReferenceObjectDefinition>

	<!---
		Parent Reference object definition between the product and its Variants.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseProductChildVariant" definitionName="cmc/catalog/ChildProductVariant" objectType="ProductChildVariant" referencedType="Variant"/>
	<!---
		Parent Reference object definition between the product and its inherited SKUs.
	-->
	<ParentReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseProductChildVariant" definitionName="cmc/catalog/ChildInheritedProductVariant" objectType="ProductChildInheritedVariant" referencedType="InheritedVariant"/>

	<!---
		This is the base definition for a parent reference of a DynamicKit and its PDKs when Sterling Configuration is enabled.
	-->
	<ParentReferenceObjectDefinition cascadeDelete="true" definitionName="cmc/catalog/BaseDynamicKitChildPDK" idProperty="childCatalogEntryId" isBaseDefinition="true" objectType="BaseDynamicKitChildPDK" referencedType="PredefinedDKit">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!-- need add service to create/update/delete relationship between DK and PDKs by yan xia -->
		<!--- Sequence -->
		<PropertyDefinition displayName="${catalogResources.productChildSequence_DisplayName}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<!--- Create service between the dynamick kit and its PDKs. -->
		<CreateService url="/cmc/CreateDynamicKitPDK">
			<ServiceParam name="storeId"/>
			<ServiceParam name="masterCatalogId"/>
			<ServiceParam name="catentryId" objectPath="PDKs" propertyName="catentryId"/>
			<ServiceParam name="sequence" optional="true" propertyName="sequence"/>
			<ServiceParam name="parentCatentryId" parentProperty="true" parentType="Kits" propertyName="catentryId"/>
		</CreateService>
		<!--- Default values -->
		<Xml name="template">
			<sequence>0</sequence>
		</Xml>
	</ParentReferenceObjectDefinition>

	<!---
		Parent Reference object definition between the dynamic kit and its PDKs.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseDynamicKitChildPDK" definitionName="cmc/catalog/ChildDynamicKitPDK" objectType="DynamicKitChildPDK" referencedType="PredefinedDKit"/>

	<!---
		Parent Reference object definition between the DK and its inherited PDKs.
	-->
	<ParentReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseDynamicKitChildPDK" definitionName="cmc/catalog/ChildInheritedDynamicKitPDK" objectType="DynamicKitChildInheritedPDK" referencedType="InheritedPredefinedDKit"/>

	<ParentReferenceObjectDefinition definitionName="cmc/catalog/BaseChildCatalogGroup" idProperty="childCatalogGroupId" isBaseDefinition="true" objectType="BaseChildCatalogGroup" referencedType="CatalogGroup">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service to create the relationship between the parent category and a child category -->
		<CreateService sendAll="false" url="/cmc/CreateChildCatalogGroup">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true" parentType="CatalogAlias"/>
			<ServiceParam name="parentCategoryId" parentProperty="true" propertyName="catgroupId"/>
			<ServiceParam name="catgroupId" objectPath="CatalogGroupAlias" propertyName="catgroupId"/>
			<ServiceParam name="owningStoreId" objectPath="CatalogGroupAlias" propertyName="objectStoreId"/>
			<ServiceParam name="parentOwningStoreId" parentProperty="true" propertyName="objectStoreId"/>
		</CreateService>
		<!--- Update service to update the relationship between the parent category and a child category -->
		<UpdateService url="/cmc/UpdateTopCatalogGroup">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true" parentType="CatalogAlias"/>
			<ServiceParam name="parentCatalogGroupId" parentProperty="true" propertyName="catgroupId"/>
			<ServiceParam name="catgroupId" objectPath="CatalogGroupAlias"/>
			<ServiceParam name="childOwningStoreId" objectPath="CatalogGroupAlias" propertyName="objectStoreId"/>
			<ServiceParam name="owningStoreId" parentProperty="true" propertyName="objectStoreId"/>
			<ServiceParam name="isTopCategoryTrue" parameterName="isTopCategory" value="true">
				<EnablementCondition checkObjectDefinition="true" conditionId="objectTypeCondition" enablementValue="CatalogAlias" parentProperty="true" propertyName="objectGroups"/>
			</ServiceParam>
		</UpdateService>
		<!--- Sequence -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupChildSequence_DisplayName}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<!--- Enablement Condition to allow the parent catalog group identifier to be locked independantly of referenced object. -->
		<EnablementCondition checkHasAccessRight="true" conditionId="parentLockingCondition" conditionType="childObjectCondition" enablementValue="true"/>
		<!---  Default values -->
		<Xml name="template">
			<sequence>0</sequence>
		</Xml>
	</ParentReferenceObjectDefinition>

	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseChildCatalogGroup" definitionName="cmc/catalog/ChildCatalogGroup" objectType="ChildCatalogGroup" referencedType="CatalogGroup"/>

	<ParentReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseChildCatalogGroup" definitionName="cmc/catalog/ChildInheritedCatalogGroup" objectType="ChildInheritedCatalogGroup" referencedType="InheritedCatalogGroup"/>

	<!---
		Parent Reference object base definition between the category and a child catalog entry.
		This indicates that a category can be a parent of a catalog entry.
	-->
	<ParentReferenceObjectDefinition definitionName="cmc/catalog/BaseCatalogEntryReferencesCategory" idProperty="childCatalogEntryId" isBaseDefinition="true" objectType="BaseCatalogEntryReferencesCategory">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Create service to create the relationship between the parent category and a child catalog entry -->
		<CreateService sendAll="false" url="/cmc/CreateChildCatalogEntry">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true" parentType="CatalogAlias"/>
			<ServiceParam name="parentCategoryId" parentProperty="true" propertyName="catgroupId"/>
			<ServiceParam name="catentryId" objectPath="CatalogEntry" propertyName="catentryId"/>
		</CreateService>
		<!--- Update service to update the relationship between the parent category and a child catalog entry -->
		<UpdateService sendAll="true" url="/cmc/UpdateChildCatalogEntry">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true" parentType="CatalogAlias"/>
			<ServiceParam name="parentCategoryId" parentProperty="true" propertyName="catgroupId"/>
			<ServiceParam name="catentryId" objectPath="CatalogEntry"/>
		</UpdateService>
		<!--- Delete service to delete the relationship between the parent category and a child catalog entry.  This service will always fail. -->
		<DeleteService url="/cmc/DeleteChildCatalogEntry">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true" parentType="CatalogAlias"/>
			<ServiceParam name="parentCategoryId" optional="true" parentProperty="true" propertyName="catgroupId"/>
			<ServiceParam name="catentryId" objectPath="CatalogEntry" propertyName="catentryId"/>
		</DeleteService>
		<!--- Property Definition for the sequence property. This indicates the sequence of the child product with respect to the parent category -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupChildSequence_DisplayName}" maxValue="9999999999" maximumSize="14" minValue="-9999999999" propertyName="sequence" required="true" type="number"/>
		<!--- Enablement Condition to allow the parent catalog group identifier to be locked independantly of referenced object. -->
		<EnablementCondition checkHasAccessRight="true" conditionId="parentLockingCondition" conditionType="childObjectCondition" enablementValue="true"/>
		<!--- Default values -->
		<Xml name="template">
			<sequence>0</sequence>
		</Xml>
	</ParentReferenceObjectDefinition>

	<!---
		Parent Reference object definition between the category and a child product.
		This indicates that a category can be a parent of a product.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildProduct" objectType="ChildProduct" referencedType="Product"/>

	<!---
		Parent Reference object definition between the category and a child bundle.
		This indicates that a category can be a parent of a bundle.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildBundle" objectType="ChildBundle" referencedType="Bundle"/>

	<!---
		Parent Reference object definition between the category and a child kit.
		This indicates that a category can be a parent of a kit.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildKit" objectType="ChildKit" referencedType="Kit"/>

	<!---
		Parent Reference object definition between the category and a child catalog group SKU.
		This indicates that a category can be a parent of a child catalog group SKU.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildCatalogGroupSKU" objectType="ChildCatalogGroupSKU" referencedType="CatalogGroupSKU"/>

	<!---
		Parent Reference base object definition between the category and a child inherited catalog entry.
		This indicates that a category can be a parent of an inherited catalog entry.
	-->
	<ParentReferenceObjectDefinition allowCrossStoreReferences="false" baseDefinition="cmc/catalog/BaseCatalogEntryReferencesCategory" definitionName="cmc/catalog/BaseInheritedCatalogEntryReferencesCategory" isBaseDefinition="true" objectType="BaseInheritedCatalogEntryReferencesCategory"/>

	<!---
		Parent Reference object definition between the category and an inherited child product.
		This indicates that a category can be a parent of an inherited product.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseInheritedCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildInheritedProduct" objectType="ChildInheritedProduct" referencedType="InheritedProduct"/>

	<!---
		Parent Reference object definition between the category and a child inherited bundle.
		This indicates that a category can be a parent of an inherited bundle.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseInheritedCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildInheritedBundle" objectType="ChildInheritedBundle" referencedType="InheritedBundle"/>

	<!---
		Parent Reference object definition between the category and a child inherited kit.
		This indicates that a category can be a parent of an inherited kit.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseInheritedCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildInheritedKit" objectType="ChildInheritedKit" referencedType="InheritedKit"/>

	<!---
		Parent Reference object definition between the category and an inherited child catalog group SKU.
		This indicates that a category can be a parent of an inherited child catalog group SKU.
	-->
	<ParentReferenceObjectDefinition baseDefinition="cmc/catalog/BaseInheritedCatalogEntryReferencesCategory" definitionName="cmc/catalog/ChildInheritedCatalogGroupSKU" objectType="ChildInheritedCatalogGroupSKU" referencedType="InheritedCatalogGroupSKU"/>

	<ChildObjectDefinition definitionName="cmc/catalog/CatalogGroupDescription" displayName="${catalogResources.catalogEntry_Description}" idProperty="languageId" languageSensitive="true" objectGroups="Description" objectType="CatalogGroupDescription" releaseWhenClosed="false">
		<dependency localName="attachmentResources" moduleName="cmc/attachment/AttachmentResources"/>
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Note -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionNote_DisplayName}" maximumSize="4000" propertyName="xdesc_note" type="string"/>
		<!--- Name -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionName_DisplayName}" maximumSize="254" propertyName="name" required="true" type="string"/>
		<!--- This property definition represents the  Short description -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionShortDescription_DisplayName}" maximumSize="254" propertyName="sDesc" type="string"/>
		<!--- This property definition represents the  Long description -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionLongDescription_DisplayName}" maximumSize="4000" propertyName="lDesc" type="string"/>
		<!--- Keyword -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionKeywords_DisplayName}" maximumSize="254" propertyName="keyword" type="string"/>
		<!--- This property definition represents the Thumbnail image path -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionThumbnailImage_DisplayName}" maximumSize="254" propertyName="tImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="tImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetCatalogGroupThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="tImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetCatalogGroupThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="tImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="tImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
		<!--- This property definition represents the Full size image path -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionFullImage_DisplayName}" maximumSize="254" propertyName="fImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="fImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetCatalogGroupFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="fImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetCatalogGroupFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="fImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementOrCondition negate="true" baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="fImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
		<!--- Create service for the description properties of the catalg group. -->
		<CreateService url="/cmc/CreateCatalogGroupDescription">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
		</CreateService>
		<!--- Update service for the description properties of the catalg group. -->
		<UpdateService url="/cmc/UpdateCatalogGroupDescription">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catgroupId" parentProperty="true"/>
			<ServiceParam name="languageId" propertyName="languageId"/>
		</UpdateService>
		<!--- By default, the published flag is set to 1 (true). -->
		<Xml name="template">
			<xdesc_published>1</xdesc_published>
		</Xml>
	</ChildObjectDefinition>

	<!---
		This is a condition to check if the object is of the type 'Product'
		OR 'Bundle' OR 'Kit' OR 'CatalogGroup' OR 'CatalogGroupSKU' OR 'ProductSKU'.
	-->
	<EnablementOrCondition conditionId="localObjectTypesCondition" definitionName="cmc/catalog/CatalogEntryEnablement">
		<EnablementCondition checkObjectDefinition="true" conditionId="productCondition" enablementValue="Product" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="bundleCondition" enablementValue="Bundle" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="variantCondition" enablementValue="Variant" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="kitCondition" enablementValue="Kit" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="predefinedDkitCondition" enablementValue="PredefinedDKit" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="catalogGroupCondition" enablementValue="CatalogGroup" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="catalogGroupSKUCondition" enablementValue="CatalogGroupSKU" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="productSKUCondition" enablementValue="ProductSKU" propertyName="objectType"/>
	</EnablementOrCondition>

	<!---
		This condition is used to check if the object is of the type 'InheritedProduct'
		OR 'InheritedBundle' OR 'InheritedKit' OR 'InheritedCatalogGroup' OR 'InheritedCatalogGroupSKU'
		OR 'InheritedProductSKU'.
	-->
	<EnablementOrCondition conditionId="inheritedObjectTypesCondition" definitionName="cmc/catalog/InheritedCatalogEntryEnablement">
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedProductCondition" enablementValue="InheritedProduct" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedBundleCondition" enablementValue="InheritedBundle" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedVariantCondition" enablementValue="InheritedVariant" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedKitCondition" enablementValue="InheritedKit" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedPredefinedDkitCondition" enablementValue="InheritedPredefinedDKit" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedCatalogGroupCondition" enablementValue="InheritedCatalogGroup" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedCatalogGroupSKUCondition" enablementValue="InheritedCatalogGroupSKU" propertyName="objectType"/>
		<EnablementCondition checkObjectDefinition="true" conditionId="inheritedProductSKUCondition" enablementValue="InheritedProductSKU" propertyName="objectType"/>
	</EnablementOrCondition>

	<!---
		This condition will check that the catalog entry is inherited AND that the description
		override feature is enabled for the current store.
	-->
	<EnablementAndCondition conditionId="InheritedCatalogEntryAndOverrideEnabledConditions" definitionName="cmc/catalog/InheritedCatalogEntryAndOverrideEnabledConditions">
		<EnablementOrCondition baseDefinition="cmc/catalog/InheritedCatalogEntryEnablement" conditionId="inheritedCatalogEntryCondition"/>
		<EnablementCondition conditionId="descriptionOverrideEnablementCondition" contextName="descriptionOverrideEnabledForStore" enablementValue="true"/>
	</EnablementAndCondition>

	<!---
		This is a condition when store types are not the following types:
		- CHS (demand hub)
		- SCP (supplier hub)
		By adding or removing cmc/foundation/EnablementCondition for the contextName storeType, you can control in which store type
		you can create any type of catalog business objects.
	-->
	<EnablementOrCondition conditionId="storeTypeCondition1" definitionName="cmc/catalog/StoreTypeCatalogObjectCreationRestriction" negate="true">
		<EnablementCondition conditionId="chsCondition" contextName="storeType" enablementValue="CHS"/>
		<EnablementCondition conditionId="scpCondition" contextName="storeType" enablementValue="SCP"/>
	</EnablementOrCondition>

	<!---
		This is a condition when store types are the following types:
		- CHS (demand hub)
		- SCP (supplier hub)
		By adding or removing cmc/foundation/EnablementCondition for the contextName storeType, you can control in which store type
		you can create any type of catalog business objects.
	-->
	<EnablementOrCondition conditionId="storeTypeCondition4" definitionName="cmc/catalog/StoreTypeCatalogObjectCreationRestrictionExcluded" negate="false">
		<EnablementCondition conditionId="chsCondition" contextName="storeType" enablementValue="CHS"/>
		<EnablementCondition conditionId="scpCondition" contextName="storeType" enablementValue="SCP"/>
	</EnablementOrCondition>

	<!---
		This condition is true when store types are not one of the following store front asset stores:
		<ul>
		<LI>RPS (Consumer direct reseller store front asset store)
		<LI>BRP (B2B reseller store front asset store)
		<LI>MPS (Consumer direct hosted store front asset store)
		<LI>BMP (B2B hosted store front asset store)
		</ul>
	-->
	<EnablementOrCondition conditionId="storeTypeNotStorefrontAssetStore" definitionName="cmc/catalog/StoreTypeNotStorefrontAssetStore" negate="true">
		<EnablementCondition conditionId="rpsCondition" contextName="storeType" enablementValue="RPS"/>
		<EnablementCondition conditionId="brpCondition" contextName="storeType" enablementValue="BRP"/>
		<EnablementCondition conditionId="mpsCondition" contextName="storeType" enablementValue="MPS"/>
		<EnablementCondition conditionId="bmpCondition" contextName="storeType" enablementValue="BMP"/>
	</EnablementOrCondition>

	<!---
		This is a condition to remove the creation of sales catalog and sales categories object from store of type:<br/>
		<ul>
		<li>CHS (demand hub)
		<li>SCP (supplier hub)
		<LI>SHS (supplier hosted store)
		<LI>RPS (Consumer direct reseller store front asset store)
		<LI>BRP (B2B reseller store front asset store)
		<LI>DPS (Distributor asset store)
		<LI>DPX (Distributor proxy store)
		<LI>SCS (Supplier catalog asset store)
		<LI>SPS (Supplier asset store)
		<LI>HCP (Hosting hub)
		<LI>PBS (Store directory)
		<LI>MPS (Consumer direct hosted store front asset store)
		<LI>BMP (B2B hosted store front asset store)
		</ul>
		By adding or removing cmc/foundation/EnablementCondition for the contextName storeType, you can control in which store type
		it is possible to create sales catalog and sales categories.
	-->
	<EnablementOrCondition conditionId="storeTypeCondition2" definitionName="cmc/catalog/StoreTypeSalesCatalogObjectCreationRestriction" negate="true">
		<EnablementCondition conditionId="chsCondition" contextName="storeType" enablementValue="CHS"/>
		<EnablementCondition conditionId="scpCondition" contextName="storeType" enablementValue="SCP"/>
		<EnablementCondition conditionId="shsCondition" contextName="storeType" enablementValue="SHS"/>
		<EnablementCondition conditionId="rpsCondition" contextName="storeType" enablementValue="RPS"/>
		<EnablementCondition conditionId="brpCondition" contextName="storeType" enablementValue="BRP"/>
		<EnablementCondition conditionId="dpsCondition" contextName="storeType" enablementValue="DPS"/>
		<EnablementCondition conditionId="dpxCondition" contextName="storeType" enablementValue="DPX"/>
		<EnablementCondition conditionId="scsCondition" contextName="storeType" enablementValue="SCS"/>
		<EnablementCondition conditionId="spsCondition" contextName="storeType" enablementValue="SPS"/>
		<EnablementCondition conditionId="hcpCondition" contextName="storeType" enablementValue="HCP"/>
		<EnablementCondition conditionId="pbsCondition" contextName="storeType" enablementValue="PBS"/>
		<EnablementCondition conditionId="mpsCondition" contextName="storeType" enablementValue="MPS"/>
		<EnablementCondition conditionId="bmpCondition" contextName="storeType" enablementValue="BMP"/>
	</EnablementOrCondition>

	<!---
		This is a condition to remove the sales catalog option from the filter in the  explorer view for store of type:<br/>
		<ul>
		<LI>SHS (supplier hosted store)
		<LI>RPS (Consumer direct reseller store front asset store)
		<LI>BRP (B2B reseller store front asset store)
		<LI>DPS (Distributor asset store)
		<LI>DPX (Distributor proxy store)
		<LI>SCS (Supplier catalog asset store)
		<LI>SPS (Supplier asset store)
		<LI>HCP (Hosting hub)
		<LI>PBS (Store directory)
		<LI>MPS (Consumer direct hosted store front asset store)
		<LI>BMP (B2B hosted store front asset store)
		</ul>
		By adding or removing cmc/foundation/EnablementCondition for the contextName storeType, you can control in which store type
		the option of Sales Catalog Categories will appear in the explorer view.<br/>
	-->
	<EnablementOrCondition conditionId="storeTypeCondition3" definitionName="cmc/catalog/StoreTypeSalesCatalogObjectFilterRestriction" negate="true">
		<EnablementCondition conditionId="shsCondition" contextName="storeType" enablementValue="SHS"/>
		<EnablementCondition conditionId="rpsCondition" contextName="storeType" enablementValue="RPS"/>
		<EnablementCondition conditionId="brpCondition" contextName="storeType" enablementValue="BRP"/>
		<EnablementCondition conditionId="dpsCondition" contextName="storeType" enablementValue="DPS"/>
		<EnablementCondition conditionId="dpxCondition" contextName="storeType" enablementValue="DPX"/>
		<EnablementCondition conditionId="scsCondition" contextName="storeType" enablementValue="SCS"/>
		<EnablementCondition conditionId="spsCondition" contextName="storeType" enablementValue="SPS"/>
		<EnablementCondition conditionId="hcpCondition" contextName="storeType" enablementValue="HCP"/>
		<EnablementCondition conditionId="pbsCondition" contextName="storeType" enablementValue="PBS"/>
		<EnablementCondition conditionId="mpsCondition" contextName="storeType" enablementValue="MPS"/>
		<EnablementCondition conditionId="bmpCondition" contextName="storeType" enablementValue="BMP"/>
	</EnablementOrCondition>

	<!---
		This is a condition to remove the sales catalog option from the filter in the  explorer view for store of type:<br/>
		<ul>
		<LI>SHS (supplier hosted store)
		<LI>RPS (Consumer direct reseller store front asset store)
		<LI>BRP (B2B reseller store front asset store)
		<LI>DPS (Distributor asset store)
		<LI>DPX (Distributor proxy store)
		<LI>SCS (Supplier catalog asset store)
		<LI>SPS (Supplier asset store)
		<LI>HCP (Hosting hub)
		<LI>PBS (Store directory)
		</ul>
		Note that this condition allows the store types MPS and BMP which are for
		Consumer direct hosted store front asset store and
		B2B hosted store front asset store respectively.
		By adding or removing cmc/foundation/EnablementCondition for the contextName storeType, you can control in which store type
		the option of Sales Catalog Categories will appear in the explorer view.<br/>
	-->
	<EnablementOrCondition conditionId="storeTypeCondition4" definitionName="cmc/catalog/StoreTypeSalesCatalogObjectFilterRestrictionAllowStorefrontAssetStore" negate="true">
		<EnablementCondition conditionId="shsCondition" contextName="storeType" enablementValue="SHS"/>
		<EnablementCondition conditionId="rpsCondition" contextName="storeType" enablementValue="RPS"/>
		<EnablementCondition conditionId="brpCondition" contextName="storeType" enablementValue="BRP"/>
		<EnablementCondition conditionId="dpsCondition" contextName="storeType" enablementValue="DPS"/>
		<EnablementCondition conditionId="dpxCondition" contextName="storeType" enablementValue="DPX"/>
		<EnablementCondition conditionId="scsCondition" contextName="storeType" enablementValue="SCS"/>
		<EnablementCondition conditionId="spsCondition" contextName="storeType" enablementValue="SPS"/>
		<EnablementCondition conditionId="hcpCondition" contextName="storeType" enablementValue="HCP"/>
		<EnablementCondition conditionId="pbsCondition" contextName="storeType" enablementValue="PBS"/>
	</EnablementOrCondition>

	<!--
		This is a condition to check whether the sterling configurator is enabled and it is not a static kit.
	-->
	<EnablementAndCondition conditionId="parentRefPDKsCondition" definitionName="cmc/catalog/ParentRefPDKsCondition">
		<EnablementCondition conditionId="sterlingConfigTrueCondition" contextName="sterlingConfigEnabled" enablementValue="true"/>
		<EnablementCondition conditionId="sterlingCatenttypeIdStaticKitCondition" enablementValue="PackageBean" negate="true" propertyName="catenttypeId"/>
	</EnablementAndCondition>

	<!---
		This is a validator definition to validate if there is an offer with MinimumQuantity=1
	-->
	<RequiredSpecificValueForChildObjectPropertyValidator definitionName="cmc/catalog/CatalogEntryOfferValidator" errorMessage="${catalogResources.offerPriceMinimumQuantityWarning}" objectPath="CatalogEntryOfferGroup" propertyName="minimumQuantity" propertyValues="1.0,1" validatorId="offerPriceMinimumQuantityValidator" validatorType="offerPriceMinimumQuantityValidator">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
	</RequiredSpecificValueForChildObjectPropertyValidator>

	<!---
		This is a validator definition to validate that the minimum quantity values for offer prices are unique.
	-->
	<UniqueValueForChildObjectPropertyValidator definitionName="cmc/catalog/OfferPriceMinimumQuantityUniquenessValidator" errorMessage="${catalogResources.offerPriceMinimumQuantityUniquenessWarning}" objectPath="CatalogEntryOffer" propertyName="minimumQuantity" validatorId="offerPriceMinimumQuantityUniquenessValidator">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
	</UniqueValueForChildObjectPropertyValidator>

	<!---
		This is a validator definition to validate that the minimum quantity values for offer prices of inherited objects are unique.
	-->
	<UniqueValueForChildObjectPropertyValidator definitionName="cmc/catalog/InheritedOfferPriceMinimumQuantityUniquenessValidator" errorMessage="${catalogResources.offerPriceMinimumQuantityUniquenessWarning}" objectPath="InheritedCatalogEntryOffer" propertyName="minimumQuantity" validatorId="inheritedOfferPriceMinimumQuantityUniquenessValidator">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
	</UniqueValueForChildObjectPropertyValidator>

	<!---
		This is a validator definition to validate that the maximum quantity(if not empty) is not less than minimum quantity.
	-->
	<NumberRangeValidator definitionName="cmc/catalog/OfferPriceQuantityRangeValidator" endNumberPropertyName="maximumQuantity" errorMessage="${catalogResources.offerPriceMinMaxQuantityMismatchWarning}" startNumberPropertyName="minimumQuantity" validatorId="offerPriceQuantityRangeValidator">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
	</NumberRangeValidator>

	<!---
		Child object definition for the description related fields of a catalog (either master or sales).
		This object is language sensitive.
	-->
	<ChildObjectDefinition definitionName="cmc/catalog/CatalogDescription" idProperty="languageId" languageSensitive="true" objectType="SalesCatalogDescription" releaseWhenClosed="false">
		<dependency localName="attachmentResources" moduleName="cmc/attachment/AttachmentResources"/>
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!---
			Create service to create a sales catalog  description
		-->
		<CreateService sendAll="false" url="/cmc/CreateSalesCatalogDescription">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true"/>
			<ServiceParam name="languageId" objectPath="" propertyName="languageId"/>
		</CreateService>
		<!---
			Update service to update a sales catalog  description
		-->
		<UpdateService url="/cmc/UpdateSalesCatalogDescription">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogId" parentProperty="true"/>
			<ServiceParam name="languageId" objectPath="" propertyName="languageId"/>
		</UpdateService>
		<!--- Property Definition for the name of the sales catalog -->
		<PropertyDefinition displayName="${catalogResources.salesCatalogDescriptionName_DisplayName}" maximumSize="128" propertyName="name" required="true" type="string"/>
		<!--- Property Definition for the short description of the sales catalog -->
		<PropertyDefinition displayName="${catalogResources.salesCatalogDescriptionShortDescription_DisplayName}" maximumSize="254" propertyName="sDesc" type="string"/>
		<!--- Property Definition for the long description of the sales catalog -->
		<PropertyDefinition displayName="${catalogResources.catalogGroupDescriptionLongDescription_DisplayName}" maximumSize="4000" propertyName="lDesc" type="string"/>
		<!--- Property Definition for the thumbnail image of the sales catalog -->
		<PropertyDefinition displayName="${catalogResources.salesCatalogDescriptionThumbnailImage_DisplayName}" maximumSize="254" propertyName="tImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="tImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetSalesCatalogThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="tImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition" negate="true"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetSalesCatalogThumbnailPunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="tImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition" negate="true"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="tImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
		<!--- Property Definition for the full image of the sales catalog -->
		<PropertyDefinition displayName="${catalogResources.salesCatalogDescriptionFullImage_DisplayName}" maximumSize="254" propertyName="fImage" punchOutEditDialogQuestion="${attachmentResources.cmsPunchOutQuestion}" punchOutEditHelpText="${attachmentResources.cmsPunchOutTooltip}" type="url">
			<PathValidator package="cmc/catalog" propertyName="fImage"/>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutSelect}" punchOutEditServiceId="select" url="GetSalesCatalogFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="fImage"/>
				<ServiceParam name="punchOutType" value="select"/>
				<EnablementAndCondition conditionId="selectEnabled">
					<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition" negate="true"/>
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<PunchOutEditService displayName="${attachmentResources.cmsPunchOutEdit}" punchOutEditServiceId="edit" url="GetSalesCatalogFullImagePunchOutURL">
				<ServiceParam name="storeId"/>
				<ServiceParam name="content" propertyName="fImage"/>
				<ServiceParam name="punchOutType" value="edit"/>
				<EnablementAndCondition conditionId="editEnabled">
					<EnablementCondition conditionId="cmsPunchOutEnabled" contextName="cmsPunchOutEnabled" enablementValue="true"/>
					<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition" negate="true"/>
					<ContentURLEnablementCondition package="cmc/attachment" propertyName="fImage"/>
				</EnablementAndCondition>
			</PunchOutEditService>
			<ExternalAssetsPunchOutEditService dialogClass="cmc/foundation/WCHAssetsPickerDialog" url="GetCatalogExternalAssetPickerURL" punchOutEditServiceId="selectExternal">
				<ServiceParam name="storeId"/>
				<EnablementOrCondition baseDefinition="cmc/attachment/ExternalContentEnablementCondition"/>
			</ExternalAssetsPunchOutEditService>
			<ContentURLResolver package="cmc/attachment"/>
			<ImageContentURLValidator package="cmc/attachment"/>
		</PropertyDefinition>
	</ChildObjectDefinition>

	<!---
		Child object definition for the facet description information.
	-->
	<ChildObjectDefinition definitionName="cmc/catalog/ChildFacetDescription" idProperty="languageId" objectType="FacetDescription">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<EnablementCondition conditionId="searchEnabledContextValueCondition" contextName="searchEnabled" enablementValue="true"/>
		<!--
			Name
		-->
		<PropertyDefinition displayName="${catalogResources.searchFacet_Description_displayName}" maximumSize="254" propertyName="name" required="false" type="string">
			<EnablementCondition conditionId="searchEnabledContextValueCondition" contextName="searchEnabled" enablementValue="true"/>
		</PropertyDefinition>
		<!---
			Description
		-->
		<PropertyDefinition displayName="${catalogResources.searchFacet_Description_Description}" maximumSize="254" propertyName="description" required="false" type="string">
			<EnablementCondition conditionId="searchEnabledContextValueCondition" contextName="searchEnabled" enablementValue="true"/>
		</PropertyDefinition>
		<!---
			Values
		-->
		<PropertyDefinition displayName="${catalogResources.facetValues}" maximumSize="500" propertyName="valuesList" type="string">
			<EnablementCondition conditionId="searchEnabledContextValueCondition" contextName="searchEnabled" enablementValue="true"/>
		</PropertyDefinition>
	</ChildObjectDefinition>
</Definitions>