<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<Definitions>
	<!---
		This definition defines the object for a catalog import.
		This object allows user to select a local CSV or ZIP file, upload to server
		and submit for data load processing.
	-->
	<PrimaryObjectDefinition copyProtected="true" creatable="true" definitionName="cmc/catalog/CatalogImport" displayName="${catalogResources.catalogImport_displayName}" displayNameProperty="fileName" fileNamePropertyName="fileName" fileSizePropertyName="fileSize" headerIcon="catalogImportHeaderIcon" helpLink="concepts/cpncsvcatupload.htm" icon="catalogImportIcon" idProperty="catalogImportId" isFileObject="true" maximumFileSize="10485760" newDisplayName="${catalogResources.catalogImport_newDisplayName}" newObjectMenuItemText="${catalogResources.contextMenuNewCatalogUpload}" objectType="CatalogImport" propertiesDefinition="cmc/catalog/CatalogImportProperties" refreshInterval="15" writeUsage="IBM_ManageCatalog">
		<dependency localName="attachmentResources" moduleName="cmc/attachment/AttachmentResources"/>
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<!--- Condition to disable the object creation in certain store types. -->
		<EnablementOrCondition baseDefinition="cmc/catalog/StoreTypeCatalogObjectCreationRestriction"/>
		<EnablementCondition conditionId="refreshStatus" conditionType="refreshCondition" enablementValue="Processing" propertyName="status"/>
		<!--- The property of file name-->
		<PropertyDefinition displayName="${catalogResources.catalogImport_fileName}" maximumSize="254" propertyName="fileName" type="string"/>
		<Xml name="template">
			<fileSize readonly="true"/>
		</Xml>
		<!--- The encoding (character set) of the CSV file. -->
		<PropertyDefinition copyProtected="true" displayName="${catalogResources.catalogImport_fileEncoding}" propertyName="fileEncoding">
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_UTF8}" isDefault="true" value="UTF-8"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_UTF16}" value="UTF-16"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_GB2312}" value="GB2312"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_BIG5}" value="Big5"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_WINDOWLARTIN1}" value="Cp1252"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_ISO85951}" value="8859_1"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_ISO859515}" value="8859_15"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_KSC5601}" value="KSC5601"/>
			<PropertyValue displayName="${catalogResources.catalogImports_encoding_SHIFTJIS}" value="SJIS"/>
		</PropertyDefinition>
		<!---
			Property definition for the catalog to import. It uses a {@link cmc/foundation/PropertyValueService PropertyValueService} that calls the
			URL <code>/cmc/GetCatalogList</code> to get the list of catalogs for the store.
		-->
		<PropertyDefinition displayName="${catalogResources.catalogImport_targetCatalog}" propertyName="catalogId">
			<PropertyValueService url="/cmc/GetCatalogList">
				<ServiceParam name="storeId"/>
			</PropertyValueService>
		</PropertyDefinition>
		<!--- The status of the catalog import includes: "Processing", "Complete" or "Failed". -->
		<PropertyDefinition copyProtected="true" displayName="${catalogResources.catalogImport_status}" propertyName="status">
			<PropertyValue displayName="${catalogResources.catalogImports_status_Processing}" icon="processingIcon" value="Processing"/>
			<PropertyValue displayName="${catalogResources.catalogImports_status_Complete}" icon="completeIcon" value="Complete"/>
			<PropertyValue displayName="${catalogResources.catalogImports_status_Failed}" icon="failedIcon" value="Failed"/>
		</PropertyDefinition>
		<!-- Create service defined to upload CSV/ZIP file, store in database and trigger the data load process -->
		<CreateService url="/cmc/CreateCatalogImport">
			<ServiceParam name="storeId"/>
			<ServiceParam name="fileName" propertyName="fileName"/>
		</CreateService>
		<!---
			Delete service to delete a catalog import.
		-->
		<DeleteService url="/cmc/DeleteCatalogImport">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogImportId" propertyName="catalogImportId"/>
		</DeleteService>
		<!--- Refresh service to return an updated version of the catalog import object from the server. -->
		<RefreshService url="/cmc/GetCatalogImportJob">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogImportId" propertyName="catalogImportId"/>
		</RefreshService>
		<!--- Child service to return CatalogImportSummary object. -->
		<GetChildrenService objectTypes="CatalogImportSummary" url="/cmc/GetCatalogImportJobSummary">
			<ServiceParam name="storeId"/>
			<ServiceParam name="catalogImportId" propertyName="catalogImportId"/>
		</GetChildrenService>
		<!--- All file types -->
		<FileTypes description="${attachmentResources.fileTypesDescription_all}" extension="*.*" name="allFileTypesFilter"/>
		<!--- Supported CSV File -->
		<FileTypes description="${catalogResources.fileTypesDescription_csv}" extension="*.csv" name="csvTypesFilter"/>
		<!--- Supported XML File -->
		<FileTypes description="${catalogResources.fileTypesDescription_xml}" extension="*.xml" name="xmlTypesFilter"/>
		<!--- Supported ZIP File -->
		<FileTypes description="${catalogResources.fileTypesDescription_zip}" extension="*.zip" name="zipTypesFilter"/>
		<!---
			The catalog import summary child object.
			This information is only needed for the properties view and
			is contained in a child object to load on demand.
		-->
		<ChildObjectDefinition copyProtected="true" displayName="${catalogResources.catalogImport_summary}" idProperty="summaryId" objectType="CatalogImportSummary" singleInstance="true">
			<PropertyDefinition displayName="${catalogResources.catalogImport_summary}" propertyName="summary"/>
		</ChildObjectDefinition>
	</PrimaryObjectDefinition>
</Definitions>