<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<Definitions>

	<!---
		This class is an enablement condition will returns "true" if the product has
		{@link cmc/catalog/CatalogEntryDefiningAttribute} children.
	    
	    @keywords private
	-->
	<EnablementCondition classDefinition="true" definitionName="cmc/catalog/ProductHasClassicDefiningAttributesEnablementCondition">
	
		<!---  An unique identifier string for this condition within a node. -->
		<variable name="conditionId" type="string" value="catProductHasClassicDefiningAttributesEnablementCondition"/>
			
		<!--- 
			This method will returns "true" if the product has
			{@link cmc/catalog/CatalogEntryDefiningAttribute} children.
			
		    @keywords private
			@param cmc/foundation/ModelObject o the model object that is to be enabled/disabled.
		-->
		<method args="o" name="isEnabled">
			<![CDATA[
			var result = false;
			if (o) {
				o.loadChildren([o.objectDefinition.getChildDefinition("CatalogEntryDefiningAttribute")]);
				var classicDefiningAttributes = o.getObjects("CatalogEntryDefiningAttribute");
				if (classicDefiningAttributes != null && classicDefiningAttributes.length > 0) {
					result = true;
				}
			}
			if (this.negate) {
				result = !result;
			}
			return result;
			]]>
		</method>
		
	</EnablementCondition>
	
	<!---
		This class is an enablement condition will returns "true" if the product has
		{@link cmc/catalog/CatalogEntryDescriptiveAttribute} children.
	    
	    @keywords private
	-->
	<EnablementCondition classDefinition="true" definitionName="cmc/catalog/ProductHasClassicDescriptiveAttributesEnablementCondition">
	
		<!---  An unique identifier string for this condition within a node. -->
		<variable name="conditionId" type="string" value="catProductHasClassicDescriptiveAttributesEnablementCondition"/>
		<!---
			If this is set to "true", the result will be negated.
		-->
		<variable name="negate" type="boolean" value="false"/>
		
		<!---
			 Enablement condition type. This attribute should only be set if the parent accepts more than one type of enablement condition. For 
			 example, {@link cmc/foundation/ObjectDefinition} instances accept two possible enablement condition types: "parentObjectCondition" and 
			 "childObjectCondition"
		-->
		<variable name="conditionType" type="string" value="enablementCondition"/>
			
		<!--- 
			This method will returns "true" if the product has
			{@link cmc/catalog/CatalogEntryDescriptiveAttribute} children.
			
		    @keywords private
			@param cmc/foundation/ModelObject o the model object that is to be enabled/disabled.
		-->
		<method args="o" name="isEnabled">
			<![CDATA[
			var result = false;
			if (o) {
				o.loadChildren([o.objectDefinition.getChildDefinition("CatalogEntryDescriptiveAttribute")]);
				var classicDescriptiveAttributes = o.getObjects("CatalogEntryDescriptiveAttribute");
				if (classicDescriptiveAttributes != null && classicDescriptiveAttributes.length > 0) {
					result = true;
				}
			}
			if (this.negate) {
				result = !result;
			}
			return result;
			]]>
		</method>
		<!---
			Register a delegate to be executed when the resolved value changes
			for the specified model object.
			@param cmc/foundation/ModelObject o: the model object
			@param cmc/foundattion/EventHandler del: the delegate
		-->
		<method args="o, del" name="registerDelegate">
			<![CDATA[
			del.connect(o, "onchildObjects");
			]]>
		</method>		
	</EnablementCondition>
</Definitions>