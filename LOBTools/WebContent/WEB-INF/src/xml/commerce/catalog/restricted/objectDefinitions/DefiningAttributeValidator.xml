<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<Definitions>

	<!---
		<P>
		This validator will be run for every CMC Object of type <code>CatalogEntryDefiningAttribute</code>.<br/>
		It will determine if an attribute data type has been selected for a defining attribute.<br/>
		(The property <code>attrDataType</code> of the CMC Object <code>CatalogEntryDefiningAttribute</code>).<br/>
		</P>
		
		<P>
		This validator will also filter out attribute values that do not correspond
		to the attribute data type selected. 
		</P> 
		
		<P>
		If this behaviour is not wanted, this validator can be commented out.  
		The code for the validator is not customizable.	
		</P>	
		
		<P>
		This code is not customizable.
		</P>
	-->
	<Validator classDefinition="true" definitionName="cmc/catalog/CatalogEntryDefiningAttributeObjectValidator">
		<dependency localName="catalogResources" moduleName="cmc/catalog/CatalogResources"/>
		<dependency localName="ModelUtil" moduleName="cmc/foundation/ModelUtil"/>
		<dependency localName="Logger" moduleName="cmc/shell/Logger"/>
		
		<!--- 
			The error message associated with the validation error generated by this validator
		 -->
		<variable name="errorMessage" type="string" value="${catalogResources.Singleton.selectAttributeDataTypeWarning.string}"/>
		
		<!--- 
			<P>
			This method performs validation on the <code>CatalogEntryDefiningAttribute</code>.
			</P>
			
			<P>
			The <code>attrDataType</code> property of the CMC model object <code>CatalogEntryDefiningAttribute</code>
			will be checked to see if it has a value set. (Either 'String','Integer','Float').
			</P>
			
			<P>
			The method will also filter out bad data in the form of attribute allowed value objects.<br/>
			CMC objects:<br/>			
			<code>CatalogEntryStringDefiningAttributeAllowedValue</code><br/>
			<code>CatalogEntryIntegerDefiningAttributeAllowedValue</code><br/>
			<code>CatalogEntryFloatDefiningAttributeAllowedValue</code><br/>
			</P>
			
			<P>
			Allowed value objects that do not match the selected attribute data type will be
			removed from memory.
			</P>

			@param cmc/foundation/ModelObject o the model object that is to be validated.
		-->
		<method args="o, property" name="validate">
			<![CDATA[
			if (typeof(property) == "undefined") property = null;
			if (Logger.Singleton.enabled) {
				Logger.Singleton.entering("com.ibm.commerce.lobtools.catalog", "cmc/catalog/CatalogEntryDefiningAttributeObjectValidator", "validate");
			}
			if (!o) {
				return;
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.log("com.ibm.commerce.lobtools.catalog", "INFO", "cmc/catalog/CatalogEntryDefiningAttributeObjectValidator", "validate", "o=" + o.logString() + ".");
			}
			var definingAttributeDataType = o.getPropertyValue("attrDataType");
			if (Logger.Singleton.enabled) {
				Logger.Singleton.log("com.ibm.commerce.lobtools.catalog", "INFO", "cmc/catalog/CatalogEntryDefiningAttributeObjectValidator", "validate", "definingAttributeDataType=" + definingAttributeDataType + ".");
			}
			if (definingAttributeDataType == null || definingAttributeDataType.length == 0) {
				o.addValidationError(this, this.errorMessage);
			}
			else {
				o.clearValidationError(this);
			}
			var definingStringAttributeAllowedValues = o.getObjects("CatalogEntryStringDefiningAttributeAllowedValue");
			var definingIntegerAttributeAllowedValues = o.getObjects("CatalogEntryIntegerDefiningAttributeAllowedValue");
			var definingFloatAttributeAllowedValues = o.getObjects("CatalogEntryFloatDefiningAttributeAllowedValue");
			if (definingStringAttributeAllowedValues && definingStringAttributeAllowedValues.length > 0 && (definingAttributeDataType == "Integer" || definingAttributeDataType == "Float")) {
				for (var i = 0; i < definingStringAttributeAllowedValues.length; i++) {
					var allowedValue = definingStringAttributeAllowedValues[i];
					ModelUtil.Singleton.releaseModelObject(allowedValue);
					if (Logger.Singleton.enabled) {
						Logger.Singleton.log("com.ibm.commerce.lobtools.catalog", "INFO", "cmc/catalog/CatalogEntryDefiningAttributeObjectValidator", "validate", "Releasing string allowed value.");
					}
				}
			}
			if (definingIntegerAttributeAllowedValues && definingIntegerAttributeAllowedValues.length > 0 && (definingAttributeDataType == "String" || definingAttributeDataType == "Float")) {
				for (var i = 0; i < definingIntegerAttributeAllowedValues.length; i++) {
					var allowedValue = definingIntegerAttributeAllowedValues[i];
					ModelUtil.Singleton.releaseModelObject(allowedValue);
					if (Logger.Singleton.enabled) {
						Logger.Singleton.log("com.ibm.commerce.lobtools.catalog", "INFO", "cmc/catalog/CatalogEntryDefiningAttributeObjectValidator", "validate", "Releasing integer allowed value.");
					}
				}
			}
			if (definingFloatAttributeAllowedValues && definingFloatAttributeAllowedValues.length > 0 && (definingAttributeDataType == "Integer" || definingAttributeDataType == "String")) {
				for (var i = 0; i < definingFloatAttributeAllowedValues.length; i++) {
					var allowedValue = definingFloatAttributeAllowedValues[i];
					ModelUtil.Singleton.releaseModelObject(allowedValue);
					if (Logger.Singleton.enabled) {
						Logger.Singleton.log("com.ibm.commerce.lobtools.catalog", "INFO", "cmc/catalog/CatalogEntryDefiningAttributeObjectValidator", "validate", "Releasing float allowed value.");
					}
				}
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.exiting("com.ibm.commerce.lobtools.catalog", "cmc/catalog/CatalogEntryDefiningAttributeObjectValidator", "validate");
			}
			]]>
		</method>
	</Validator>
</Definitions>