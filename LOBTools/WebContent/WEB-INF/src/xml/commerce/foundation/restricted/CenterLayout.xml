<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>

	<!---
		@keywords private
		
		A layout that will center all of the children on the specified axis.
	-->
	<Layout classDefinition="true" definitionName="cmc/foundation/CenterLayout">
		<dependency localName="EventUtil" moduleName="cmc/foundation/EventUtil"/>
		<!---
			The axis on which the child views will be centered. This may be either
			"x" or "y". The default is "y".
		-->
		<variable name="axis" type="string" value="y"/>
		
		<!---
			Set the layout axis.
			@param string a: the layout axis
		-->
		<method args="a" name="setAxis">
			<![CDATA[
			if (this.axis == null || this.axis != a) {
				this.axis = a;
				this.sizeAxis = a == "x" ? "width" : "height";
				if (this.components.length) {
					this.update();
				}
				EventUtil.trigger(this, "onaxis", this.axis);
			}
			]]>
		</method>

		<!--- @keywords private -->
		<method args="v" name="addComponent">
			<![CDATA[
			this.updateHandler.connect(v, "on" + this.sizeAxis);
			this.updateHandler.connect(v, "onvisible");
			this.update();
			this.inherited(arguments);
			]]>
		</method>
		
		<!--- @keywords private -->
		<method args="e" name="update">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			if (!this.locked) {
				this.lock();
				var l = this.components.length;
				var maxSize = 0;
				for (var i = 0; i < l; i++) {
					var v = this.components[i];
					if (v.visible) {
						var size = v[this.sizeAxis];
						if (size > maxSize) {
							maxSize = size;
						}
					}
				}
				for (var i = 0; i < l; i++) {
					var v = this.components[i];
					if (v) {
						var size = v[this.sizeAxis];
						var p = 0;
						if (size < maxSize) {
							p = Math.round(maxSize / 2 - size / 2);
						}
						if (p != v[this.axis]) {
							v.setVariable(this.axis, p);
						}
					}
				}
				this.locked = false;
			}
			]]>
		</method>
		<method args="axis" name="set_axis">
			<![CDATA[
			this.setAxis(axis);
			]]>
		</method>
	</Layout>
</Definitions>