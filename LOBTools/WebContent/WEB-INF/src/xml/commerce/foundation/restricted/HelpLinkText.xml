<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>

	<!---
		@keywords private
		
		A class that defines a text that is a link to another document in the Information Center
	-->
	<TextComponent classDefinition="true" definitionName="cmc/foundation/HelpLinkText" fgcolor="#063bcd" focusable="true" multiline="true" text="${foundationResources.Singleton.helpDefaultLinkText.string}">
		<dependency localName="foundationResources" moduleName="cmc/foundation/FoundationResources"/>
		<dependency localName="FocusIndicator" moduleName="cmc/foundation/FocusIndicator"/>
	
		<!--- @keywords private -->
		<variable name="width" value="100"/>
		
		<!--- @keywords private -->
		<variable name="helpLink" type="string" value=""/>
		
		<!--- @keywords private -->
		<variable name="helpLinkTopicPath" type="string" value="${null}"/>
		
		<variable name="underlineOnMouseOver" type="boolean" value="false"/>
	
		<!--- @keywords private -->
		<handler name="onfocus">
			<![CDATA[
			if (!this.indicator) {
				new FocusIndicator.Class(this, {
					name: "indicator",
					focusableView: this,
					indicatorView: this
				});
			}
			]]>
		</handler>
		
		<!--- @keywords private -->
		<handler args="k" name="onkeydown">
			<![CDATA[
			if ((k == 13 || k == 32) && (this.helpLink != "")) {
				var caller = this;
				require(["cmc/shell/HelpManager"], function(HelpManager) {
					HelpManager.Singleton.openHelpLink(caller.helpLink, caller.helpLinkTopicPath);
				});
			}
			]]>
		</handler>
	
		<!--- @keywords private -->
		<handler name="onclick">
			<![CDATA[
			if (this.helpLink != "") {
				var caller = this;
				require(["cmc/shell/HelpManager"], function(HelpManager) {
					HelpManager.Singleton.openHelpLink(caller.helpLink, caller.helpLinkTopicPath);
				});
			}
			]]>
		</handler>
		
		
		
		<handler name="onmouseover">
			<![CDATA[
			if (this.underlineOnMouseOver) {
			}
			]]>
		</handler>
		
		<handler name="onmouseout">
			<![CDATA[
			if (this.underlineOnMouseOver) {
			}
			]]>
		</handler>
	
	</TextComponent>
	
</Definitions>