<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		@keywords private

         An icon view that has a maximum width, icon path and icon resource.

        Sample usage:
        @START_CODE
			<IconView name="previewIcon" iconPath="images\pagelayouts\widgetIcons\facebook.png" />
        @END_CODE
    -->
	<Component classDefinition="true" definitionName="cmc/foundation/IconView" stretches="both">
			
		<!---
			The current iconPath if defined
		-->
		<variable name="iconPath" type="string" value=""/>
		
		<!---
			The default icon resource used if iconPath not specified
		-->
		<variable name="icon" type="string" value=""/>

		<!---
			The maximum width allowed for this icon. Icons that are wider than this value will be scaled down.
			If this value is not specified then the icon will be displayed in its original size.
		-->
		<variable name="maximumWidth" type="number" value="${null}"/>
		
		<method args="url" name="setIconPath">
			<![CDATA[
			if (url != null && url != "") {
				this.set_imageSource(url);
				this.iconPath = url;
			}
			]]>
		</method>
		
		<method args="r" name="setIcon">
			<![CDATA[
			if (r != null && r != "") {
				this.setVariable("imageSet", r);
				this.icon = r;
			}
			]]>
		</method>

		<handler name="onload">
			<![CDATA[
			this.scaleImage();
			]]>
		</handler>
		
		<!--
			@keywords private
			This method will scale the icon down if required, and otherwise resets the icon to its full size.
		-->
		<method name="scaleImage">
			<![CDATA[
			if (this.classroot.maximumWidth != null && this.imageNaturalWidth > this.classroot.maximumWidth) {
				var scale = this.imageNaturalWidth / this.classroot.maximumWidth;
				this.setVariable('width', this.classroot.maximumWidth);
				this.setVariable('height', this.imageNaturalHeight / scale);
			}
			else {
				this.setVariable('height', this.imageNaturalHeight);
				this.setVariable('width', this.imageNaturalWidth);
			}
			]]>
		</method>

	<method args="icon" name="set_icon">
			<![CDATA[
			this.setIcon(icon);
			]]>
		</method><method args="iconPath" name="set_iconPath">
			<![CDATA[
			this.setIconPath(iconPath);
			]]>
		</method></Component>

</Definitions>