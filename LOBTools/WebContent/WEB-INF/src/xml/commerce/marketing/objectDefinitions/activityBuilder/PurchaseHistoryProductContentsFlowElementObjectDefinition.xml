<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		<p>This is the flow element object definition for the Purchase History Product Contents target. This object defines the following child elements:
		<ul>
		<li>{@link cmc/marketing/FlowElementCreateService} with PROPERTY_catalogEntryIdList as a parameter</li>
		<li>{@link cmc/marketing/FlowElementUpdateService} with PROPERTY_catalogEntryIdList as a parameter</li>
		<li>{@link cmc/foundation/ReferenceObjectDefinition} that defines a new ChildCatentry type which references the catalog entry object types</li>
		<li>{@link cmc/foundation/ReferenceObjectDefinition} that defines a new ChildInheritedCatentry type which references the inherited catalog entry object types</li>
		<li>instance of {@link cmc/foundation/RequiredChildObjectValidator} to ensure at least one catalog entry is selected</li>
		<li>instance of {@link cmc/foundation/StartDateEndDateValidator} to ensure that the selected start date is before the end date</li>
		<li>instance of {@link cmc/foundation/NumberRangeValidator} to ensure that the amount ranges (<code>amountValue1</code> and <code>amountValue2</code>) are valid</li>
		<li>instance of {@link cmc/foundation/NumberRangeValidator} to ensure that the quantity ranges (<code>quantityValue1</code> and <code>quantityValue2</code>) are valid</li>
		<li>instance of {@link cmc/foundation/CurrencyFormatValidator} to ensure that <code>amountValue1</code> is provided in the correct currency format specified by <code>amountCurrency</code>
		<li>instance of {@link cmc/foundation/CurrencyFormatValidator} to ensure that <code>amountValue2</code> is provided in the correct currency format specified by <code>amountCurrency</code>
		</ul>
		</p>
		<p>This object also has the following pre-defined properties and restrictions:
		<ul>
		<li><b>containsOperator</b>: required field with a default of "="</li>
		<li><b>anyOrAll</b>: required field with a default of "any"</li>
		<li><b>quantityOperator1</b>: optional field with possible values "&gt;=", "=" or "&lt;"</li>
		<li><b>quantityValue1</b>: optional field with a 10-digit maximum</li>
		<li><b>quantityOperator2</b>: optional field with possible value "&lt;="</li>
		<li><b>quantityValue2</b>: optional field with a 10-digit maximum</li>
		<li><b>amountOperator1</b>: required field with possible values "&gt;=", "=" or "&lt;"</li>
		<li><b>amountValue1</b>: optional field with a 15-digit maximum</li>
		<li><b>amountOperator2</b>: optional field with possible value "&lt;="</li>
		<li><b>amountValue2</b>: optional field with a 15-digit maximum</li>
		<li><b>amountCurrency</b>: optional field</li>
		<li><b>daysOperator</b>: optional field with possible values "&lt;=" or "&gt;"</li>
		<li><b>days</b>: optional field with a 5-digit maximum</li>
		<li><b>beforeAfterOnDate</b>: optional field with possible values "&gt;=", "&gt;", "=" or "&lt;"</li>
		<li><b>date1</b>: optional field</li>
		<li><b>beforeDate</b>: optional field with possible value "&lt;="</li>
		<li><b>date2</b>: optional field</li>
		</ul>
		</p>

		@deprecated Use {@link cmc/marketing/PurchaseHistoryElementObject} which now combines the functionality of {@link cmc/marketing/PurchaseHistoryTotalsElementObject},
		{@link cmc/marketing/PurchaseHistoryProductContentsElementObject} and {@link cmc/marketing/PurchaseHistoryCategoryContentsElementObject}.
	-->
	<FlowElementObjectDefinition definitionName="cmc/marketing/PurchaseHistoryProductContentsElementObject" displayName="${marketingResources.purchaseHistoryProductContentsName}" elemTemplateType="Target" flowIcon="purchaseHistoryProductContentsIcon" headerIcon="purchaseHistoryProductContentsHeaderIcon" objectType="purchaseHistoryProductContents" package="cmc/marketing" paletteIcon="purchaseHistoryProductContentsPaletteIcon" propertiesDefinition="cmc/marketing/ShopCartPurchHistProductContentsProperties" summaryClass="cmc/marketing/ShopCartPurchHistProductSummary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<CreateService baseDefinition="cmc/marketing/FlowElementCreateService">
			<ServiceParam name="PROPERTY_catalogEntryIdList" objectPath="ChildCatentry/CatalogEntry" optional="true" propertyName="catentryId"/>
		</CreateService>
		<UpdateService baseDefinition="cmc/marketing/FlowElementUpdateService">
			<ServiceParam name="PROPERTY_catalogEntryIdList" objectPath="ChildCatentry/CatalogEntry" optional="true" propertyName="catentryId"/>
		</UpdateService>
		<Xml name="template">
			<elemTemplateName>purchaseHistoryProductContents</elemTemplateName>
			<anyOrAll>any</anyOrAll>
			<containsOperator>=</containsOperator>
			<daysOperator/>
			<days/>
			<beforeAfterOnDate/>
			<date1/>
			<beforeDate/>
			<date2/>
			<amountOperator1/>
			<amountValue1/>
			<amountOperator2/>
			<amountValue2/>
			<amountCurrency>USD</amountCurrency>
			<quantityOperator1><![CDATA[>=]]></quantityOperator1>
			<quantityValue1>1</quantityValue1>
			<quantityOperator2/>
			<quantityValue2/>
		</Xml>
		<ReferenceObjectDefinition allowDuplicates="false" allowedParentTypes="WebActivity,WebActivityTemplate,DialogActivity,DialogActivityTemplate" derivedId="true" idProperty="childCatentryId" objectGroups="ChildCatentry,ChildCatentryGroup" objectType="ChildCatentry" referencedTypes="Product,Bundle,CatalogGroupSKU,ProductSKU,Kit,PredefinedDKit"/>
		<ReferenceObjectDefinition allowDuplicates="false" derivedId="true" idProperty="childCatentryId" objectGroups="ChildCatentry,ChildCatentryGroup" objectType="ChildInheritedCatentry" referencedTypes="InheritedProduct,InheritedBundle,InheritedCatalogGroupSKU,InheritedProductSKU,InheritedKit,InheritedPredefinedDKit"/>
		<PropertyDefinition displayName="${marketingResources.number}" maximumSize="10" propertyName="quantityValue1" required="true" type="number">
			<EnablementOrCondition conditionId="1">
				<EnablementCondition conditionId="11" enablementValue="&gt;=" propertyName="quantityOperator1"/>
				<EnablementCondition conditionId="12" enablementValue="=" propertyName="quantityOperator1"/>
				<EnablementCondition conditionId="13" enablementValue="&lt;" propertyName="quantityOperator1"/>
			</EnablementOrCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.quantity2}" maximumSize="10" propertyName="quantityValue2" required="true" type="number">
			<EnablementAndCondition conditionId="2">
				<EnablementCondition conditionId="21" enablementValue="&gt;=" propertyName="quantityOperator1"/>
				<EnablementCondition conditionId="22" enablementValue="&lt;=" propertyName="quantityOperator2"/>
			</EnablementAndCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.amount1}" maximumSize="15" propertyName="amountValue1" required="true" type="number">
			<EnablementOrCondition conditionId="3">
				<EnablementCondition conditionId="31" enablementValue="&gt;=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="32" enablementValue="=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="33" enablementValue="&lt;" propertyName="amountOperator1"/>
			</EnablementOrCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.amount2}" maximumSize="15" propertyName="amountValue2" required="true" type="number">
			<EnablementAndCondition conditionId="4">
				<EnablementCondition conditionId="41" enablementValue="&gt;=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="42" enablementValue="&lt;=" propertyName="amountOperator2"/>
			</EnablementAndCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.days}" maximumSize="5" propertyName="days" required="true" type="number">
			<EnablementOrCondition conditionId="5">
				<EnablementCondition conditionId="51" enablementValue="&lt;=" propertyName="daysOperator"/>
				<EnablementCondition conditionId="52" enablementValue="&gt;" propertyName="daysOperator"/>
			</EnablementOrCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.date1}" propertyName="date1" required="true" type="datetime">
			<EnablementOrCondition conditionId="6">
				<EnablementCondition conditionId="61" enablementValue="&gt;=" propertyName="beforeAfterOnDate"/>
				<EnablementCondition conditionId="62" enablementValue="&gt;" propertyName="beforeAfterOnDate"/>
				<EnablementCondition conditionId="63" enablementValue="=" propertyName="beforeAfterOnDate"/>
				<EnablementCondition conditionId="64" enablementValue="&lt;" propertyName="beforeAfterOnDate"/>
			</EnablementOrCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.date2}" propertyName="date2" required="true" type="datetime">
			<EnablementAndCondition conditionId="7">
				<EnablementCondition conditionId="71" enablementValue="&gt;=" propertyName="beforeAfterOnDate"/>
				<EnablementCondition conditionId="72" enablementValue="&lt;=" propertyName="beforeDate"/>
			</EnablementAndCondition>
		</PropertyDefinition>
		<RequiredChildObjectValidator errorMessage="${marketingResources.noProductsSelected}" objectPath="ChildCatentry" validatorId="reqChildValidator" validatorType="noProductsSelected"/>
		<StartDateEndDateValidator endDatePropertyName="date2" startDatePropertyName="date1" validatorId="dateValidator"/>
		<NumberRangeValidator endNumberPropertyName="amountValue2" startNumberPropertyName="amountValue1" validatorId="amountValidator"/>
		<NumberRangeValidator endNumberPropertyName="quantityValue2" errorMessage="${marketingResources.secondValueMustBeGreaterThanFirstValue}" startNumberPropertyName="quantityValue1" validatorId="quantityValidator"/>
		<CurrencyFormatValidator currencyPropertyName="amountCurrency" validatorId="currency1Validator" valuePropertyName="amountValue1"/>
		<CurrencyFormatValidator currencyPropertyName="amountCurrency" validatorId="currency2Validator" valuePropertyName="amountValue2"/>
	</FlowElementObjectDefinition>
</Definitions>