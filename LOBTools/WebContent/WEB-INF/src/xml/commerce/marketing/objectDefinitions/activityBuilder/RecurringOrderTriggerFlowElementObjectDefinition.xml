<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		<p>This is the flow element object definition for the Recurring Order trigger. This object defines the following child elements:
		<ul>
		<li>{@link cmc/marketing/FlowElementCreateService FlowElementCreateService}</li>
		<li>{@link cmc/marketing/FlowElementUpdateService FlowElementUpdateService}</li>
		</ul>
		</p>
		<p>This object also has the following pre-defined properties and restrictions:
		<ul>
		<li>
		<b>repeatSchedule</b>: A required property specifying how often the server checks for recurring orders.
		<b>recurringOrderTriggerType</b>: A required property specifying the type of recurring order property to trigger upon.
		<b>numberOfDays</b>: A required property specifying how many days before/after the recurring order's property.
		<b>startsBetweenDateRange</b>: A property specifying whether the start date range filter is used
		<b>startDate</b>: A required property specifying the starting range of the recurring order start date
		<b>startDate2</b>: A required property specifying the ending range of the recurring order start date
		<b>endsBetweenDateRange</b>: A property specifying whether the end date range filter is used
		<b>endDate</b>: A required property specifying the starting range of the recurring order end date
		<b>endDate2</b>: A required property specifying the ending range of the recurring order end date
		<b>checkOrderTotalRange</b>: A property specifying whether the order total range filter is used
		<b>amountOperator1</b>: A required property specifying the operator used to compare the order total
		<b>amountOperator2</b>: A required property specifying the second operator used to compare the order total
		<b>amountValue1</b>: A required property specifying the first amount used in the order total range filter
		<b>amountValue2</b>: A required property specifying the ending amount range used in the order total range filter
		<b>amountCurrency</b>: A required property specifying the currency used in the amounts
		</li>
		</ul>
		</p>
	-->
	<FlowElementObjectDefinition definitionName="cmc/marketing/RecurringOrderTriggerElementObject" displayName="${marketingResources.recurringOrderTriggerName}" elemTemplateType="Trigger" flowIcon="recurringOrderTriggerIcon" headerIcon="recurringOrderTriggerHeaderIcon" helpLink="concepts/csmtrirecurringorderevent.htm" objectType="RecurringOrderTrigger" package="cmc/marketing" paletteIcon="recurringOrderTriggerPaletteIcon" propertiesDefinition="cmc/marketing/RecurringOrderTriggerProperties" summaryClass="cmc/marketing/RecurringOrderTriggerSummary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<CreateService baseDefinition="cmc/marketing/FlowElementCreateService"/>
		<UpdateService baseDefinition="cmc/marketing/FlowElementUpdateService"/>
		<Xml name="template">
			<elemTemplateName>RecurringOrderTrigger</elemTemplateName>
			<repeatSchedule>runDaily</repeatSchedule>
			<recurringOrderTriggerType>beforeEnd</recurringOrderTriggerType>
			<numberOfDays>0</numberOfDays>
			<startsBetweenDateRange>false</startsBetweenDateRange>
			<startDate/>
			<startDate2/>
			<endsBetweenDateRange>false</endsBetweenDateRange>
			<endDate/>
			<endDate2/>
			<checkOrderTotalRange>true</checkOrderTotalRange>
			<amountOperator1/>
			<amountOperator2/>
			<amountValue1/>
			<amountValue2/>
		</Xml>
		<PropertyDefinition displayName="${marketingResources.recurringOrderRepeatSchedule}" propertyName="repeatSchedule">
			<PropertyValue displayName="${marketingResources.repeatScheduleDaily}" value="runDaily"/>
			<PropertyValue displayName="${marketingResources.repeatScheduleOnce}" value="runOnce"/>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.recurringOrderTriggerType}" propertyName="recurringOrderTriggerType">
			<PropertyValue displayName="${marketingResources.recurringOrderTriggerTypeBeforeEnd}" value="beforeEnd"/>
			<PropertyValue displayName="${marketingResources.recurringOrderTriggerTypeAfterStart}" value="afterStart"/>
			<PropertyValue displayName="${marketingResources.recurringOrderTriggerTypeAfterEnd}" value="afterEnd"/>
			<PropertyValue displayName="${marketingResources.recurringOrderTriggerTypeAfterCancel}" value="afterCancel"/>
			<EnablementCondition conditionId="21" enablementValue="runDaily" propertyName="repeatSchedule"/>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.recurringOrderNumberOfDays}" maxValue="365" minValue="0" propertyName="numberOfDays" required="true" type="integer">
			<EnablementCondition conditionId="31" enablementValue="runDaily" propertyName="repeatSchedule"/>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.recurringOrderStartsBetweenDateRange}" propertyName="startsBetweenDateRange">
			<PropertyValue displayName="${marketingResources.recurringOrderAnytime}" value="false"/>
			<PropertyValue displayName="${marketingResources.recurringOrderBetweenDates}" value="true"/>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.recurringOrderDate}" propertyName="startDate" required="true" type="datetime">
			<EnablementCondition conditionId="41" enablementValue="true" propertyName="startsBetweenDateRange"/>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.recurringOrderDate2}" propertyName="startDate2" required="true" type="datetime">
			<EnablementCondition conditionId="51" enablementValue="true" propertyName="startsBetweenDateRange"/>
		</PropertyDefinition>
		<StartDateEndDateValidator endDatePropertyName="startDate2" startDatePropertyName="startDate" validatorId="dateValidator"/>
		<PropertyDefinition displayName="${marketingResources.recurringOrderEndsBetweenDateRange}" propertyName="endsBetweenDateRange">
			<PropertyValue displayName="${marketingResources.recurringOrderAnytime}" value="false"/>
			<PropertyValue displayName="${marketingResources.recurringOrderBetweenDates}" value="true"/>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.recurringOrderDate}" propertyName="endDate" required="true" type="datetime">
			<EnablementCondition conditionId="61" enablementValue="true" propertyName="endsBetweenDateRange"/>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.recurringOrderDate2}" propertyName="endDate2" required="true" type="datetime">
			<EnablementCondition conditionId="71" enablementValue="true" propertyName="endsBetweenDateRange"/>
		</PropertyDefinition>
		<StartDateEndDateValidator endDatePropertyName="endDate2" startDatePropertyName="endDate" validatorId="dateValidator"/>
		<PropertyDefinition propertyName="checkOrderTotalRange">
			<EnablementOrCondition conditionId="8">
				<EnablementCondition conditionId="81" enablementValue="&gt;=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="82" enablementValue="=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="83" enablementValue="&lt;" propertyName="amountOperator1"/>
			</EnablementOrCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.amount1}" maximumSize="15" minValue="0" propertyName="amountValue1" required="true" type="number">
			<EnablementOrCondition conditionId="9">
				<EnablementCondition conditionId="91" enablementValue="&gt;=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="92" enablementValue="=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="93" enablementValue="&lt;" propertyName="amountOperator1"/>
			</EnablementOrCondition>
		</PropertyDefinition>
		<PropertyDefinition displayName="${marketingResources.amount2}" maximumSize="15" minValue="0" propertyName="amountValue2" required="true" type="number">
			<EnablementAndCondition conditionId="10">
				<EnablementCondition conditionId="101" enablementValue="&gt;=" propertyName="amountOperator1"/>
				<EnablementCondition conditionId="102" enablementValue="&lt;=" propertyName="amountOperator2"/>
			</EnablementAndCondition>
		</PropertyDefinition>
		<NumberRangeValidator endNumberPropertyName="amountValue2" startNumberPropertyName="amountValue1" validatorId="amountValidator"/>
		<CurrencyPropertyDefinition displayName="${marketingResources.currency}" propertyName="amountCurrency"/>
		<CurrencyFormatValidator currencyPropertyName="amountCurrency" validatorId="currency1Validator" valuePropertyName="amountValue1"/>
		<CurrencyFormatValidator currencyPropertyName="amountCurrency" validatorId="currency2Validator" valuePropertyName="amountValue2"/>
	</FlowElementObjectDefinition>
</Definitions>