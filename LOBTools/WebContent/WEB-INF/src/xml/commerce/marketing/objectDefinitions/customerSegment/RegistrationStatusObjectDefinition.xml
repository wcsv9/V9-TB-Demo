<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		<p>This is the object definition is the parent for the customer segment registration status condition. This definition provides
		a {@link cmc/foundation/ObjectDefinition#templateTypeProperty template property} with the name <code>template</code> which may have
		the following {@link cmc/foundation/ObjectTemplate object templates}:
		<ul>
		<li><code>ignore</code> - used when the customer segment should ignore the registration status of a shopper</li>
		<li><code>registered</code> - used to target register customers</li>
		<li><code>unregistered</code> - used to target guest shoppers</li>
		</ul>
		</p>

		<p>An instance of {@link cmc/marketing/PhoneNumberListObjectDefinition} is defined as a child object.</p>
	-->
	<ChildObjectDefinition definitionName="cmc/marketing/RegistrationStatusObjectDefinition" idProperty="elementName" objectType="RegistrationStatus" singleInstance="true" templateTypeProperty="template">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<Xml name="template">
			<elementName>RegistrationStatus</elementName>
			<template>ignore</template>
		</Xml>
		<ChildObjectDefinition baseDefinition="cmc/marketing/RegistrationStatusOrListObjectDefinition"/>
		<ObjectTemplate displayName="${marketingResources.customerSegment_regStatus_Ignore}" templateType="ignore">
			<Xml name="template"/>
		</ObjectTemplate>
		<ObjectTemplate displayName="${marketingResources.customerSegment_regStatus_Registered}" templateType="registered">
			<Xml name="template">
				<object objectType="RegistrationStatusOrList">
					<conditionUsage>orListCondition</conditionUsage>
					<elementName>registrationStatus</elementName>
					<object objectType="RegistrationStatusCondition">
						<conditionValue>R</conditionValue>
					</object>
				</object>
			</Xml>
		</ObjectTemplate>
		<ObjectTemplate displayName="${marketingResources.customerSegment_regStatus_Unregistered}" templateType="unregistered">
			<Xml name="template">
				<object objectType="RegistrationStatusOrList">
					<conditionUsage>orListCondition</conditionUsage>
					<elementName>registrationStatus</elementName>
					<object objectType="RegistrationStatusCondition">
						<conditionValue>G</conditionValue>
					</object>
				</object>
			</Xml>
		</ObjectTemplate>
	</ChildObjectDefinition>

	<!---
		<p>This is the wrapper orList for the customer segment regisration status condition. This definition defines
		a {@link cmc/foundation/ChildObjectDefinition child object} with objectType <code>RegistrationStatusCondition</code> that represents the
		registration status simple condition with the following properties:
		<ul>
		<li><code>conditionVariable</code> - always has the value <code>registrationStatus</code></li>
		<li><code>conditionOperator</code> - always has the value <code>=</code></li>
		<li><code>conditionValue</code> - required string value which must be one of <code>R</code> or <code>G</code></li>
		</ul>
		</p>
	-->
	<ChildObjectDefinition baseDefinition="cmc/marketing/CSElementAndOrListConditionObjectDefinition" definitionName="cmc/marketing/RegistrationStatusOrListObjectDefinition" objectType="RegistrationStatusOrList">
		<ChildObjectDefinition baseDefinition="cmc/marketing/CSElementSimpleConditionObjectDefinition" objectType="RegistrationStatusCondition">
			<Xml name="template">
				<conditionVariable>registrationStatus</conditionVariable>
				<conditionOperator>=</conditionOperator>
			</Xml>
		</ChildObjectDefinition>
	</ChildObjectDefinition>
</Definitions>