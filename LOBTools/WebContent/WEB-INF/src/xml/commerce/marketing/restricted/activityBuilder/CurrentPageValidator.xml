<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015, 2017 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		<p>Validator for {@link cmc/marketing/CurrentPageElementObject Current Page target}. Based on the selected option,
		this validator ensures that catalog entries, categories, search keywords and URL parameter values are provided.</p>
		
		<p>There should only be one instance of this class defined for each {@link cmc/marketing/FlowElementObjectDefinition}.</p>
	-->
	<Validator classDefinition="true" definitionName="cmc/marketing/CurrentPageValidator" validatorType="currentPageValidator">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<!--- Warning message to show when no catalog entries are provided -->
		<variable name="noProductsSelectedErrorMessage" type="string" value="${marketingResources.Singleton.noProductsSelected.string}"/>
		<!--- Warning message to show when no categories are provided -->
		<variable name="noCategoriesSelectedErrorMessage" type="string" value="${marketingResources.Singleton.noCategoriesSelected.string}"/>
		<!--- Warning message to show when no search terms are provided -->
		<variable name="noKeywordsSelectedErrorMessage" type="string" value="${marketingResources.Singleton.noKeywordProvided.string}"/>
		<!--- Warning message to show when no URL values are provided -->
		<variable name="noValuesSelectedErrorMessage" type="string" value="${marketingResources.Singleton.noParameterValueProvided.string}"/>
		
		<!--- The object path for catalog entry objects -->
		<variable name="catalogEntryObjectPath" type="string" value="ChildCatentry"/>
		<!--- The object path for category objects -->
		<variable name="categoryEntryObjectPath" type="string" value="ChildCatalogGroup"/>
		<!--- The object path for search term objects -->
		<variable name="searchTermObjectPath" type="string" value="searchTerm"/>
		<!--- The object path for URL value objects -->
		<variable name="urlValueObjectPath" type="string" value="urlValue"/>
				
		<!--- @keywords private -->		
		<method args="o, property" name="validate">
			<![CDATA[
			if (typeof(property) == "undefined") property = null;
			if (!o) {
				return;
			}
			var elementTemplate = o.getProperty("elemTemplateName");
			var typeProp = o.getProperty("type");
			o.clearValidationError(this);
			if (elementTemplate.value == "currentCustomerBehaviorProductBrowsing") {
				var childObjects = o.getObjects(this.catalogEntryObjectPath);
				if (childObjects.length <= 0) {
					o.addValidationError(this, this.noProductsSelectedErrorMessage);
				}
				if (elementTemplate.dirty) {
					typeProp.change("NVP");
				}
				else {
					typeProp.setVariable("value", "NVP");
				}
			}
			else if ((elementTemplate.value == "currentCustomerBehaviorCategoryBrowsing") || (elementTemplate.value == "currentCustomerBehaviorProductInCategoryBrowsing")) {
				var childObjects = o.getObjects(this.categoryEntryObjectPath);
				if (childObjects.length <= 0) {
					o.addValidationError(this, this.noCategoriesSelectedErrorMessage);
				}
				if (elementTemplate.value == "currentCustomerBehaviorProductInCategoryBrowsing") {
					if (elementTemplate.dirty) {
						typeProp.change("PARENTCATEGORY");
					}
					else {
						typeProp.setVariable("value", "PARENTCATEGORY");
					}
				}
			}
			else if (elementTemplate.value == "currentCustomerBehaviorSearching") {
				var childObjects = o.getObjects(this.searchTermObjectPath);
				if (childObjects.length <= 0) {
					o.addValidationError(this, this.noKeywordsSelectedErrorMessage);
				}
			}
			else if (elementTemplate.value == "currentCustomerBehaviorURLContents") {
				var childObjects = o.getObjects(this.urlValueObjectPath);
				var comparisonProp = o.getProperty("comparison");
				if ((childObjects.length <= 0) && (comparisonProp.value != "any")) {
					o.addValidationError(this, this.noValuesSelectedErrorMessage);
				}
			}
			]]>
		</method>
	</Validator>
</Definitions>