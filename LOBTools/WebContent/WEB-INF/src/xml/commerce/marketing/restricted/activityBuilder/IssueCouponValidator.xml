<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>

	<!---
		<p>Validator for {@link cmc/marketing/IssueCouponElementObject Issue Coupon action}. This ensures that a coupon promotion
		is selected.</p>
		
		<p>There should only be one instance of this class defined for each {@link cmc/marketing/FlowElementObjectDefinition}.</p>
	-->	 
	<Validator classDefinition="true" definitionName="cmc/marketing/IssueCouponValidator">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<!--- 
			The object path that describes required child objects. 
		 -->
		<variable name="objectPath" type="string" value="ChildPromotion/PromotionGroup"/>
		
		<!--- 
			The error message to be added to an object when the object does not one matching child object.
		 -->
		<variable name="errorMessage" type="string" value="${marketingResources.Singleton.noCouponsSelected.string}"/>
		
		<!--- 
			The error message to be added to an object when the object selected is not a coupon promotion.
		-->
		<variable name="errorCoupon" type="string" value="${marketingResources.Singleton.notCouponPromotion.string}"/>
		
		<!--- 
			@keywords private
		 -->
		<method args="o, property" name="validate">
			<![CDATA[
			if (typeof(property) == "undefined") property = null;
			o.clearValidationError(this);
			var childObjects = o.getObjects(this.objectPath);
			if (childObjects == null || childObjects.length <= 0) {
				o.addValidationError(this, this.errorMessage);
				return;
			}
			for (var i = 0; i < childObjects.length; i++) {
				var coupon = childObjects[i];
				var couponRequired = coupon.getPropertyValue("couponRequired");
				if (couponRequired != "true") {
					o.addValidationError(this, this.errorCoupon);
					return;
				}
			}
			]]>
		</method>

	</Validator>


</Definitions>