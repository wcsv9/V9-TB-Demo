<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		<p>Validator for {@link cmc/marketing/SendMessageElementObject Current Page target}. Based on the selected option,
		this validator ensures that an E-mail template or an Text message for SMS are provided.</p>
		
		<p>There should only be one instance of this class defined for each {@link cmc/marketing/SendMessageElementObject}.</p>
	-->
	<Validator classDefinition="true" definitionName="cmc/marketing/SendMessageValidator">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<!--- Warning message to show when no Email Template are provided -->
		<variable name="noEmailSelectedErrorMessage" type="string" value="${marketingResources.Singleton.noEmailTemplateSelected.string}"/>
		<!--- Warning message to show when no SMS content are provided -->
		<variable name="noContentSelectedErrorMessage" type="string" value="${marketingResources.Singleton.noMarketingContentSelected.string}"/>
		<!--- Warning message to show when the wrong type of Marketing Content is selected for SMS -->
		<variable name="wrongContentTypeSelectedErrorMessage" type="string" value="${marketingResources.Singleton.wrongContentTypeSelectedForSMS.string}"/>
		
		<!--- The object path for email template objects -->
		<variable name="emailObjectPath" type="string" value="ChildEmailTemplate"/>
		<!--- The object path for SMS content objects -->
		<variable name="SMSObjectPath" type="string" value="ChildContent/MarketingContentGroup"/>
				
		<!--- @keywords private -->		
		<method args="o, property" name="validate">
			<![CDATA[
			if (typeof(property) == "undefined") property = null;
			if (!o) {
				return;
			}
			o.clearValidationError(this);
			var elementTemplate = o.getProperty("elemTemplateName");
			if (elementTemplate.value == "sendIndividualEmail") {
				var childObjects = o.getObjects(this.emailObjectPath);
				if (childObjects.length != 1) {
					o.addValidationError(this, this.noEmailSelectedErrorMessage);
				}
			}
			else {
				var childObjects = o.getObjects(this.SMSObjectPath);
				if (childObjects.length != 1) {
					o.addValidationError(this, this.noContentSelectedErrorMessage);
				}
				else {
					var contentType = childObjects[0].getPropertyValue("format");
					if (contentType != "Sms") {
						o.addValidationError(this, this.wrongContentTypeSelectedErrorMessage);
					}
				}
			}
			]]>
		</method>
	</Validator>
</Definitions>