<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		<p>Validator for {@link cmc/marketing/ShoppingCartTotalsElementObject Shopping Cart Total} and
		{@link cmc/marketing/PurchaseHistoryTotalsElementObject Purchase History Total} targets. This ensures that at
		least one condition (number of items, value of items, and schedule) is specified.</p>
		
		<p>This validator reads from the following properties:
			<ul>
				<li>daysOperator</li>
				<li>days</li>
				<li>beforeAfterOnDate</li>
				<li>beforeDate</li>
				<li>date1</li>
				<li>date2</li>
				<li>amountOperator1</li>
				<li>amountOperator2</li>
				<li>amountValue1</li>
				<li>amountValue2</li>
				<li>quantityOperator1</li>
				<li>quantityOperator2</li>
				<li>quantityValue1</li>
				<li>quantityValue2</li>
			</ul>
		</p>
		
		<p>There should only be one instance of this class defined for each {@link cmc/marketing/FlowElementObjectDefinition}.</p>
	-->
	<Validator classDefinition="true" definitionName="cmc/marketing/ShopCartPurchHistTotalValidator">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<!--- Validator warning message -->
		<variable name="errorMessage" type="string" value="${marketingResources.Singleton.shopCartTotalOneConditionRequired.string}"/>

		<!--- @keywords private -->		
		<method args="o, property" name="validate">
			<![CDATA[
			if (typeof(property) == "undefined") property = null;
			if (!o) {
				return;
			}
			var daysOperator = o.getProperty("daysOperator");
			var days = o.getProperty("days");
			var beforeAfterOnDate = o.getProperty("beforeAfterOnDate");
			var beforeDate = o.getProperty("beforeDate");
			var date1 = o.getProperty("date1");
			var date2 = o.getProperty("date2");
			var amountOperator1 = o.getProperty("amountOperator1");
			var amountOperator2 = o.getProperty("amountOperator2");
			var amountValue1 = o.getProperty("amountValue1");
			var amountValue2 = o.getProperty("amountValue2");
			var quantityOperator1 = o.getProperty("quantityOperator1");
			var quantityOperator2 = o.getProperty("quantityOperator2");
			var quantityValue1 = o.getProperty("quantityValue1");
			var quantityValue2 = o.getProperty("quantityValue2");
			if ((daysOperator.value == "") && (days.value == "") && (beforeAfterOnDate.value == "") && (beforeDate.value == "") && (date1.value == "") && (date2.value == "") && (amountOperator1.value == "") && (amountOperator2.value == "") && (amountValue1.value == "") && (amountValue2.value == "") && (quantityOperator1.value == "") && (quantityOperator2.value == "") && (quantityValue1.value == "") && (quantityValue2.value == "")) {
				o.addValidationError(this, this.errorMessage);
			}
			else {
				o.clearValidationError(this);
			}
			]]>
		</method>
	</Validator>
</Definitions>