<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
<!---
		Validator for a {@link cmc/marketing/BaseSearchFilterChildAttributeWithAllowedValues SearchFilterChildAttributeWithAllowedValues} object. 
		This ensures the following case: 
		<ul>
			<li>If the operator chosen belongs to the single value operators list, then count the number of attribute values specified by the user. 
			If the total is greater than one, then clear out all the values. The user must choose a value again from the dialog box which
			should now show a list of radio buttons.</li>			
		</ul>
-->	
	<Validator classDefinition="true" definitionName="cmc/marketing/SearchFilterAttributeRuleValidator">
		<dependency localName="StringUtil" moduleName="cmc/foundation/StringUtil"/>
		<!-- Comma-separated list of single-value operators. -->
		<variable name="singleValueOperators" type="string" value=""/>
		
		<!--- @keywords private -->
		<method args="o, property" name="validate">
			<![CDATA[
			if (typeof(property) == "undefined") property = null;
			if (this.isEnabled(o)) {
				var operatorValue = o.getPropertyValue("filterOperator");
				if (operatorValue != "") {
					var singleOperators = StringUtil.Singleton.splitAndTrim(this.singleValueOperators, ",");
					var isSingleOperator = false;
					for (var i = 0; i < singleOperators.length; i++) {
						if (operatorValue == singleOperators[i]) {
							isSingleOperator = true;
							break;
						}
					}
					if (isSingleOperator) {
						var attrValueObjects = o.getObjects("ChildAttributeAllowedValues");
						if (attrValueObjects.length > 1) {
							for (var i = 0; i < attrValueObjects.length; i++) {
								attrValueObjects[i].deleteObject();
							}
						}
					}
				}
			}
			]]>
		</method>
	</Validator>		
			
</Definitions>