<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		This summary view provides brief information about the {@link cmc/marketing/CustomerSegmentElementObject} flow element.
		It is shown beneath the element on the Activity Builder flow diagram and to generate the text, it looks at the
		following property names of the {@link cmc/marketing/CustomerSegmentElementObject} object:
		<ul>
			<li>anyOrAll</li>
			<li>containsOperator</li>
			<li>ChildCustomerSegment/CustomerSegment[name]</li>
		</ul>
	-->
	<FlowElementSummary classDefinition="true" definitionName="cmc/marketing/CustomerSegmentSummary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<FlowSummaryParam name="anyOrAll" propertyName="anyOrAll"/>
		<FlowSummaryParam name="containsOperator" propertyName="containsOperator"/>
		<FlowSummaryParam name="segmentNames" objectPath="ChildSegment/CustomerSegmentGroup" propertyName="name"/>

		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryAnyText, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryAllText, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryNotAnyText, "onstring");
			]]>
		</handler>

		<!---
			Sets the summary text for the {@link cmc/marketing/CustomerSegmentElementObject} flow element. Classes overriding
			this method must call <code>setSummaryText</code> with the desired summary text.
		-->
		<method args="e" name="updateSummary">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var summary = "";
			var anyOrAll = this.resolvedParams.anyOrAll;
			var names = this.getValuesList("segmentNames");
			var containsOperator = this.resolvedParams.containsOperator;
			if ((anyOrAll != null) && (names != "") && (containsOperator != null)) {
				if ((anyOrAll == "any") && (containsOperator == "=")) {
					summary = marketingResources.Singleton.replaceValues("summaryAnyText", [names]);
				}
				else if ((anyOrAll == "all") && (containsOperator == "=")) {
					summary = marketingResources.Singleton.replaceValues("summaryAllText", [names]);
				}
				else if ((anyOrAll == "any") && (containsOperator == "!=")) {
					summary = marketingResources.Singleton.replaceValues("summaryNotAnyText", [names]);
				}
			}
			this.setSummaryText(summary);
			]]>
		</method>
	</FlowElementSummary>
</Definitions>