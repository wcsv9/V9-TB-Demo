<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		This summary view provides brief information about the {@link cmc/marketing/ExternalSiteReferralElementObject} flow element.
		It is shown beneath the element on the Activity Builder flow diagram and to generate the text.
	-->
	<FlowElementSummary classDefinition="true" definitionName="cmc/marketing/ExternalSiteReferralSummary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<FlowSummaryParam name="containsOperator" propertyName="containsOperator"/>
		<FlowSummaryParam name="domainOption" propertyName="domainOption"/>
		<FlowSummaryParam name="equalsOrEndsWith" propertyName="equalsOrEndsWith"/>
		<FlowSummaryParam name="referralURLValue" propertyName="referralURLValue"/>
		<FlowSummaryParam name="urlName" propertyName="urlName"/>
		<FlowSummaryParam name="comparison" propertyName="comparison"/>
		<FlowSummaryParam name="urlValueList" objectPath="urlValue" propertyName="urlValue"/>

		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryNone, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.PredefinedReferralURLGoogle, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.PredefinedReferralURLYahoo, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsExternalSiteIs, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsExternalSiteContains, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsExternalSiteEndsWith, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsSearchTermsExactly, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsSearchTermsStartsWith, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsSearchTermsContains, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsSearchTermsEndsWith, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsNVPExactly, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsNVPStartsWith, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsNVPContains, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsNVPEndsWith, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryCustomerBehaviorURLContentsNVPAny, "onstring");
			]]>
		</handler>

		<!---
			Sets the summary text for the flow element.
		-->
		<method args="e" name="updateSummary">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var containsOperator = this.resolvedParams.containsOperator;
			var domainOption = this.resolvedParams.domainOption;
			var comparisonText = this.resolvedParams.comparison;
			var referralURLValue = this.resolvedParams.referralURLValue;
			var summary = "";
			var valueText = this.getValuesList("urlValueList");
			if (domainOption == "predefined") {
				var searchEngine = "";
				if (referralURLValue == ".google.") {
					searchEngine = marketingResources.Singleton.PredefinedReferralURLGoogle.string;
				}
				else if (referralURLValue == ".yahoo.") {
					searchEngine = marketingResources.Singleton.PredefinedReferralURLYahoo.string;
				}
				if ((searchEngine != "") && (comparisonText != "") && ((comparisonText == "any") || ((comparisonText != "any") && (valueText != "")))) {
					summary = summary + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsExternalSiteIs", [searchEngine]);
					if (comparisonText == "=") {
						summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsSearchTermsExactly", [valueText]);
					}
					else if (comparisonText == "start") {
						summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsSearchTermsStartsWith", [valueText]);
					}
					else if (comparisonText == "contain") {
						summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsSearchTermsContains", [valueText]);
					}
					else if (comparisonText == "end") {
						summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsSearchTermsEndsWith", [valueText]);
					}
				}
			}
			else if (domainOption == "other") {
				var equalsOrEndsWithText = this.resolvedParams.equalsOrEndsWith;
				var nameText = this.resolvedParams.urlName;
				if ((referralURLValue != null) && (referralURLValue != "") && (equalsOrEndsWithText != null) && (equalsOrEndsWithText != "")) {
					if (equalsOrEndsWithText == "=") {
						summary = summary + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsExternalSiteIs", [referralURLValue]);
					}
					else if (equalsOrEndsWithText == "contain") {
						summary = marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsExternalSiteContains", [referralURLValue]);
					}
					else if (equalsOrEndsWithText == "end") {
						summary = marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsExternalSiteEndsWith", [referralURLValue]);
					}
					if ((nameText != null) && (nameText != "") && (comparisonText != null) && (comparisonText != "") && ((comparisonText == "any") || ((comparisonText != "any") && (valueText != "")))) {
						if (comparisonText == "=") {
							summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsNVPExactly", [nameText, valueText]);
						}
						else if (comparisonText == "start") {
							summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsNVPStartsWith", [nameText, valueText]);
						}
						else if (comparisonText == "contain") {
							summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsNVPContains", [nameText, valueText]);
						}
						else if (comparisonText == "end") {
							summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsNVPEndsWith", [nameText, valueText]);
						}
						else if (comparisonText == "any") {
							summary = summary + "\n" + marketingResources.Singleton.replaceValues("summaryCustomerBehaviorURLContentsNVPAny", [nameText]);
						}
					}
				}
			}
			if ((containsOperator == "!=") && (summary != "")) {
				summary = marketingResources.Singleton.summaryNone.string + "\n" + summary;
			}
			this.setSummaryText(summary);
			]]>
		</method>
	</FlowElementSummary>
</Definitions>