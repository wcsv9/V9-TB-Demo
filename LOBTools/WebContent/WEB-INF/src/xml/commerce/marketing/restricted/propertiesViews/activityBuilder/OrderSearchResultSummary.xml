<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		This summary view provides brief information about the {@link cmc/marketing/OrderSearchResultElementObject} flow element.
		It is shown beneath the element on the Activity Builder flow diagram and to generate the text, it looks at the
		following property names of the {@link cmc/marketing/OrderSearchResultElementObject} object:
		<ul>
			<li>searchActionFilter/filterName or searchOrderBy/orderByField</li>
		</ul>
	-->
	<FlowElementSummary classDefinition="true" definitionName="cmc/marketing/OrderSearchResultSummary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<FlowSummaryParam checkObjectDefinition="true" forceResolveAll="true" name="filterName" objectPath="filterGroup" propertyName="displayName"/>
		<FlowSummaryParam name="orderByField" objectPath="searchActionOrderBy" propertyName="orderByField" resolveDisplayName="true"/>
		<FlowSummaryParam name="orderSearchResultChoice" propertyName="orderSearchResultChoice"/>

		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.updateSummaryDel.connect(marketingResources.Singleton.summarysearchActionFilter, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summarysearchActionOrderBy, "onstring");
			]]>
		</handler>

		<!---
			Sets the summary text for the {@link cmc/marketing/OrderSearchResultElementObject} flow element. Classes overriding
			this method must call <code>setSummaryText</code> with the desired summary text.
		-->
		<method args="e" name="updateSummary">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var summary = "";
			var elemName = this.resolvedParams.orderSearchResultChoice;
			if (elemName == "orderSearchResultRank") {
				var filterNames = this.getValuesList("filterName");
				var uniqueFilters = {};
				var arrFilterNames = filterNames.split(", ");
				for (var i = 0; i < arrFilterNames.length; i++) {
					if (!uniqueFilters[arrFilterNames[i]]) {
						uniqueFilters[arrFilterNames[i]] = true;
					}
				}
				var uniqueFilterNames = "";
				for (var filter in uniqueFilters) {
					if (uniqueFilterNames != "") {
						uniqueFilterNames += ", ";
					}
					uniqueFilterNames += filter;
				}
				if (uniqueFilterNames != "") {
					summary = marketingResources.Singleton.replaceValues("summarysearchActionFilter", [uniqueFilterNames]);
				}
			}
			else if (elemName == "orderSearchResultSort") {
				var orderBy = this.getValuesList("orderByField");
				if (orderBy != null && orderBy != "") {
					summary = marketingResources.Singleton.replaceValues("summarysearchActionOrderBy", [orderBy]);
				}
			}
			this.setSummaryText(summary);
			]]>
		</method>
	</FlowElementSummary>
	
	<!---
		This summary view provides brief information about the {@link cmc/marketing/OrderSearchResultElementObjectV7FEP6} flow element.
		It is shown beneath the element on the Activity Builder flow diagram and to generate the text, it looks at the
		following property names of the {@link cmc/marketing/OrderSearchResultElementObjectV7FEP6} object:
		<ul>
			<li>searchActionFilter/filterName or searchOrderBy/orderByField</li>
		</ul>
	-->
	<FlowElementSummary classDefinition="true" definitionName="cmc/marketing/OrderSearchResultV7FEP6Summary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<FlowSummaryParam checkObjectDefinition="true" forceResolveAll="true" name="filterName" objectPath="filterGroup" propertyName="displayName"/>
		<FlowSummaryParam name="orderSearchResultChoice" propertyName="orderSearchResultChoice"/>
		<FlowSummaryParam name="orderByPropertyField" objectPath="searchActionOrderBy" propertyName="orderByField" resolveDisplayName="true"/>
		<FlowSummaryParam name="propertyName" objectPath="catalogEntryPropertySearchFilter" propertyName="filterName" resolveDisplayName="true"/>
		<FlowSummaryParam name="productType" objectPath="catenttype_id_ntk_cs/filterValue" propertyName="filterValue" resolveDisplayName="true"/>
		<FlowSummaryParam name="categoryName" objectPath="ChildCatalogGroupGroup/CatalogGroupAlias" propertyName="identifier"/>
		<FlowSummaryParam name="attributeName" objectPath="ChildAttributeWithAllowedValuesGroup/AttributeDictionaryAttributes" propertyName="attributeCode"/>

		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.updateSummaryDel.connect(marketingResources.Singleton.summarysearchActionFilter, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summarysearchActionOrderBy, "onstring");
			]]>
		</handler>

		<!---
			Sets the summary text for the {@link cmc/marketing/OrderSearchResultElementObjectV7FEP6} flow element. Classes overriding
			this method must call <code>setSummaryText</code> with the desired summary text.
		-->
		<method args="e" name="updateSummary">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var summaryText = "";
			var elemName = this.resolvedParams.orderSearchResultChoice;
			if (elemName == "orderSearchResultRank") {
				var categoryNames = this.getValuesList("categoryName");
				var attributeName = this.getValuesList("attributeName");
				var propertyName = this.getValuesList("propertyName");
				var productTypes = this.getValuesList("productType");
				var filterText = "";
				if (categoryNames != "") {
					filterText = categoryNames;
				}
				if (propertyName != "") {
					if (filterText != "") {
						filterText += ", " + propertyName;
					}
					else {
						filterText = propertyName;
					}
				}
				if (attributeName != "") {
					if (filterText != "") {
						filterText += ", " + attributeName;
					}
					else {
						filterText = attributeName;
					}
				}
				if (productTypes != "") {
					if (filterText != "") {
						filterText += ", " + productTypes;
					}
					else {
						filterText = productTypes;
					}
				}
				if (filterText != "") {
					var summaryFilter = marketingResources.Singleton.replaceValues("summarysearchActionFilter", [filterText]);
					summaryText += summaryFilter;
				}
			}
			else if (elemName == "orderSearchResultSort") {
				var orderBy = this.getValuesList("orderByPropertyField");
				if (orderBy != null && orderBy != "") {
					summaryText = marketingResources.Singleton.replaceValues("summarysearchActionOrderBy", [orderBy]);
				}
			}
			this.setSummaryText(summaryText);
			]]>
		</method>
	</FlowElementSummary>	
</Definitions>