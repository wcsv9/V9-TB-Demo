<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		This summary view provides brief information about the {@link cmc/marketing/SearchCriteriaAndResultElementObject} flow element.
	-->
	<FlowElementSummary classDefinition="true" definitionName="cmc/marketing/SearchCriteriaAndResultSummary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<FlowSummaryParam name="elemTemplateName" propertyName="elemTemplateName"/>
		<FlowSummaryParam name="included" propertyName="included"/>
		<FlowSummaryParam name="productNames" objectPath="ChildCatentryGroup/CatalogEntry/CatalogEntryDescription" propertyName="name"/>
		<FlowSummaryParam checkObjectDefinition="true" forceResolveAll="true" name="filterName" objectPath="filterGroup" propertyName="displayName"/>

		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchAnyCriteria, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchNotAnyCriteria, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchAnyProducts, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchNotAnyProducts, "onstring");
			]]>
		</handler>

		<method args="e" name="updateSummary">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var summaryText = "";
			summaryText = this.getSearchSummary();
			this.setSummaryText(summaryText);
			]]>
		</method>
		
		<!--- @keywords private -->
		<method name="getSearchSummary">
			<![CDATA[
			var summary = "";
			var included = this.resolvedParams.included;
			var elemTemplateName = this.resolvedParams.elemTemplateName;
			if ((elemTemplateName != null) && (elemTemplateName == "searchCriteria")) {
				var filterNames = this.getValuesList("filterName");
				if (filterNames != null && filterNames.length > 0) {
					if (included == "true") {
						summary = marketingResources.Singleton.replaceValues("summaryViewSearchAnyCriteria", [filterNames]);
					}
					else {
						summary = marketingResources.Singleton.replaceValues("summaryViewSearchNotAnyCriteria", [filterNames]);
					}
				}
			}
			else {
				var productText = this.getValuesList("productNames");
				if ((elemTemplateName != null) && (elemTemplateName == "searchResult") && (productText != "")) {
					if (included == "true") {
						summary = marketingResources.Singleton.replaceValues("summaryViewSearchAnyProducts", [productText]);
					}
					else {
						summary = marketingResources.Singleton.replaceValues("summaryViewSearchNotAnyProducts", [productText]);
					}
				}
			}
			return summary;
			]]>
		</method>
	</FlowElementSummary>
	
	<!---
		This summary view provides brief information about the {@link cmc/marketing/SearchCriteriaAndResultElementObjectV7FEP6} flow element.
	-->
	<FlowElementSummary classDefinition="true" definitionName="cmc/marketing/SearchCriteriaAndResultV7FEP6Summary">
		<dependency localName="marketingResources" moduleName="cmc/marketing/MarketingResources"/>
		<FlowSummaryParam name="elemTemplateName" propertyName="elemTemplateName"/>
		<FlowSummaryParam name="included" propertyName="included"/>
		<FlowSummaryParam name="productNames" objectPath="ChildCatentryGroup/CatalogEntry/CatalogEntryDescription" propertyName="name"/>
		<FlowSummaryParam checkObjectDefinition="true" forceResolveAll="true" name="filterName" objectPath="filterGroup" propertyName="displayName"/>
		<FlowSummaryParam name="categoryName" objectPath="ChildCatalogGroupGroup/CatalogGroupAlias" propertyName="identifier"/>
		<FlowSummaryParam name="propertyName" objectPath="catalogEntryPropertySearchFilter" propertyName="filterName" resolveDisplayName="true"/>
		<FlowSummaryParam name="attributeName" objectPath="ChildAttributeWithAllowedValuesGroup/AttributeDictionaryAttributes" propertyName="attributeCode"/>

		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchAnyCriteria, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchNotAnyCriteria, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchAnyProducts, "onstring");
			this.updateSummaryDel.connect(marketingResources.Singleton.summaryViewSearchNotAnyProducts, "onstring");
			]]>
		</handler>

		<method args="e" name="updateSummary">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var summaryText = "";
			summaryText = this.getSearchSummary();
			this.setSummaryText(summaryText);
			]]>
		</method>
		
		<!--- @keywords private -->
		<method name="getSearchSummary">
			<![CDATA[
			var summary = "";
			var included = this.resolvedParams.included;
			var elemTemplateName = this.resolvedParams.elemTemplateName;
			if ((elemTemplateName != null) && (elemTemplateName == "searchCriteriaV7FEP6")) {
				var categoryNames = this.getValuesList("categoryName");
				var attributeName = this.getValuesList("attributeName");
				var propertyName = this.getValuesList("propertyName");
				var productTypes = this.getValuesList("productType");
				var filterText = "";
				if (categoryNames != "") {
					filterText = categoryNames;
				}
				if (propertyName != "") {
					if (filterText != "") {
						filterText += ", " + propertyName;
					}
					else {
						filterText = propertyName;
					}
				}
				if (attributeName != "") {
					if (filterText != "") {
						filterText += ", " + attributeName;
					}
					else {
						filterText = attributeName;
					}
				}
				if (filterText != "") {
					if (included == "true") {
						var summaryViewSearchAnyCriteria = marketingResources.Singleton.replaceValues("summaryViewSearchAnyCriteria", [filterText]);
						summary += summaryViewSearchAnyCriteria;
					}
					else {
						var summaryViewSearchNotAnyCriteria = marketingResources.Singleton.replaceValues("summaryViewSearchNotAnyCriteria", [filterText]);
						summary += summaryViewSearchNotAnyCriteria;
					}
				}
			}
			else {
				var productText = this.getValuesList("productNames");
				if ((elemTemplateName != null) && (elemTemplateName == "searchResult") && (productText != "")) {
					if (included == "true") {
						summary = marketingResources.Singleton.replaceValues("summaryViewSearchAnyProducts", [productText]);
					}
					else {
						summary = marketingResources.Singleton.replaceValues("summaryViewSearchNotAnyProducts", [productText]);
					}
				}
			}
			return summary;
			]]>
		</method>
	</FlowElementSummary>

</Definitions>