<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		This definition defines the base object from which ContentPageFolder and InheritedContentPageFolder are derived.
		A Content Page folder is an object used to organize Content Pages so that they can be found easily.
		Content Pages can only be in one folders at a time.
		This class uses a reference object definition to define the relationship between folders and Content Pages.
		Content Page folders use the Folder noun from the file wc-infrastructure-clientobjects.xml
		which contains information on how the parameters in the services
		are mapped to create the appropriate BOD for the Web services.
	-->
	<PrimaryObjectDefinition definitionName="cmc/pagelayout/BaseContentPageFolderPrimaryObjectDefinition" displayName="${pageLayoutResources.ContentPageFolderObjectName}" displayNameProperty="identifier" idProperty="folderId" isBaseDefinition="true" newDisplayName="${pageLayoutResources.ContentPageFolder_newContentPageFolderDisplayName}" newObjectMenuItemText="${pageLayoutResources.contextMenuNewContentPageFolder}" objectGroups="ContentPageFolderGroup" propertiesDefinition="cmc/pagelayout/ContentPageFolderProperties" writeUsage="IBM_ManagePageComposerTool">
		<dependency localName="pageLayoutResources" moduleName="cmc/pagelayout/PageLayoutResources"/>
		<!--- This service retrieves all the child folders.  -->
		<GetChildrenService objectTypes="ContentPageFolderReference,InheritedContentPageFolderReference" url="/cmc/GetChildFolders">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="folderObjectType" value="ContentPageFolder"/>
		</GetChildrenService>
		<!--- This service retrieves all the folder items that belong to this folder. -->
		<GetChildrenService objectTypes="ContentPageFolderItemReference,ContentPageFolderInheritedItemReference,InheritedContentPageFolderInheritedItemReference" url="/cmc/GetPageComposerFolderItems">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="defaultLanguageId"/>
		</GetChildrenService>
		<ObjectTypeFilter filterType="utilitiesViewFilter" objectTypes="ContentPageFolderReference,InheritedContentPageFolderReference,ContentPageFolderItemReference,ContentPageFolderInheritedItemReference,InheritedContentPageFolderInheritedItemReference"/>
		<!--- Update service to update a folder. -->
		<UpdateService url="/cmc/UpdateFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="parentFolderId" optional="true" parameterName="parentFolderId" parentProperty="true" propertyName="folderId"/>
		</UpdateService>
		<!---
			Retrieves the cmc/pagelayout/BaseContentPageFolderPrimaryObjectDefinition object that is the parent to this object.
		-->
		<GetReferencesService url="/cmc/GetParentFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="parentFolderId" propertyName="parentFolderId"/>
			<ServiceParam name="folderObjectType" value="ContentPageFolder"/>
		</GetReferencesService>
		<!-- Refresh Service to reload the properties of the folder -->
		<RefreshService url="/cmc/GetFolderById">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="folderObjectType" value="ContentPageFolder"/>
		</RefreshService>
		<!--- This is the folder_id defined in the FOLDER table, which indicates the primary key of this folder. -->
		<PropertyDefinition copyProtected="true" propertyName="folderId"/>
		<!--- This is the identifier of the folder. -->
		<PropertyDefinition displayName="${pageLayoutResources.ContentPageFolder_name}" maximumSize="256" propertyName="identifier" required="true" trim="true"/>
		<!--- This is the description of the folder. -->
		<PropertyDefinition displayName="${pageLayoutResources.ContentPageFolder_description}" maximumSize="256" propertyName="description" type="string"/>
		<Xml name="template">
			<folderType>IBM_ContentPageFolder</folderType>
		</Xml>
		<!--- Reference to the parent of the folder. -->
		<ParentReferenceObjectDefinition baseDefinition="cmc/pagelayout/ContentPageFolderReferenceObjectDefinition" cascadeDelete="true"/>
		<!--- Navigation list definition for navigating from the folder item to the Content. -->
		<NavigationListDefinition baseDefinition="cmc/pagelayout/ContentPageFolderItemGridChildList" isDefault="true"/>
		<!--- Navigation list definition for navigating from the folder to its child items. -->
		<NavigationListDefinition baseDefinition="cmc/pagelayout/ContentPageFolderGridChildList" toolbarIcon="folderListToolbarIcon"/>
	</PrimaryObjectDefinition>

	<!--
		Defines the object to be used to represent folders owned by the local store.
	-->
	<PrimaryObjectDefinition baseDefinition="cmc/pagelayout/BaseContentPageFolderPrimaryObjectDefinition" creatable="true" definitionName="cmc/pagelayout/ContentPageFolder" headerIcon="GenericFolderHeaderIcon" icon="GenericFolderIcon" objectType="ContentPageFolder" utilitiesListDefinition="cmc/pagelayout/ContentPageFolderBrowseGrid">
		<!--- Create service to create a folder and its relationship to a parent folder.. -->
		<CreateService url="/cmc/CreateFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="parentFolderId" optional="false" parameterName="parentFolderId" parentProperty="true" propertyName="folderId">
				<EnablementCondition conditionId="enableParentFolderId" enablementValue="" negate="true" parentProperty="true" propertyName="identifier"/>
			</ServiceParam>
		</CreateService>
		<!--- Delete service to delete a folder. -->
		<DeleteService url="/cmc/DeleteFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
		</DeleteService>
		<TrueEnablementCondition/>
		<!--- Collection reference to the items that belong to the folder and are owned by the local store. -->
		<CollectionReferenceObjectDefinition baseDefinition="cmc/pagelayout/ContentPageFolderItemReferenceObjectDefinition"/>
		<!--- Collection reference to the items that belong to the folder and are owned by the asset store. -->
		<CollectionReferenceObjectDefinition baseDefinition="cmc/pagelayout/ContentPageFolderInheritedItemReferenceObjectDefinition"/>
	</PrimaryObjectDefinition>

	<!--
		Defines the object to be used to represent folders owned by the asset store.
	-->
	<PrimaryObjectDefinition baseDefinition="cmc/pagelayout/BaseContentPageFolderPrimaryObjectDefinition" compatibleObjectTypes="ContentPageFolder" creatable="false" definitionName="cmc/pagelayout/InheritedContentPageFolder" headerIcon="InheritedGenericFolderHeaderIcon" icon="InheritedGenericFolderIcon" objectType="InheritedContentPageFolder">
		<!--- Reference to the parent of the folder. -->
		<ParentReferenceObjectDefinition baseDefinition="cmc/pagelayout/InheritedContentPageFolderReferenceObjectDefinition"/>
		<!--- Collection reference to the items that belong to the folder and are owned by the asset store. -->
		<CollectionReferenceObjectDefinition baseDefinition="cmc/pagelayout/InheritedContentPageFolderInheritedItemReferenceObjectDefinition"/>
	</PrimaryObjectDefinition>

	<!-- The relationship between this folder and its local parent -->
	<ParentReferenceObjectDefinition cascadeDelete="true" definitionName="cmc/pagelayout/ContentPageFolderReferenceObjectDefinition" derivedId="true" idProperty="folderReferenceId" objectGroups="ContentPageFolderReferenceGroup" objectType="ContentPageFolderReference" referencedType="ContentPageFolder"/>

	<!-- The relationship between this folder and its asset store parent -->
	<ParentReferenceObjectDefinition cascadeDelete="true" definitionName="cmc/pagelayout/InheritedContentPageFolderReferenceObjectDefinition" derivedId="true" idProperty="folderReferenceId" objectGroups="ContentPageFolderReferenceGroup" objectType="InheritedContentPageFolderReference" referencedType="InheritedContentPageFolder"/>

	<!-- The relationship between a folder and local Content Page in this folder. -->
	<CollectionReferenceObjectDefinition baseDefinition="cmc/pagelayout/BaseContentPageFolderItemReferenceObjectDefinition" definitionName="cmc/pagelayout/ContentPageFolderItemReferenceObjectDefinition" initializeObjectStoreId="true" objectGroups="ContentPageFolderItemReferenceGroup" objectType="ContentPageFolderItemReference" referencedTypes="ContentPage">
		<TrueEnablementCondition conditionType="childObjectCondition"/>
	</CollectionReferenceObjectDefinition>

	<!-- The relationship between this folder and asset store Content Page in this folder. -->
	<CollectionReferenceObjectDefinition baseDefinition="cmc/pagelayout/BaseContentPageFolderItemReferenceObjectDefinition" definitionName="cmc/pagelayout/ContentPageFolderInheritedItemReferenceObjectDefinition" initializeObjectStoreId="true" objectGroups="ContentPageFolderItemReferenceGroup" objectType="ContentPageFolderInheritedItemReference" referencedTypes="InheritedContentPage">
		<TrueEnablementCondition conditionType="childObjectCondition"/>
	</CollectionReferenceObjectDefinition>

	<!-- The relationship between an inherited folder and an inherited Content Page in this folder. -->
	<CollectionReferenceObjectDefinition baseDefinition="cmc/pagelayout/BaseContentPageFolderItemReferenceObjectDefinition" definitionName="cmc/pagelayout/InheritedContentPageFolderInheritedItemReferenceObjectDefinition" objectGroups="ContentPageFolderItemReferenceGroup" objectType="InheritedContentPageFolderInheritedItemReference" referencedTypes="InheritedContentPage">
		<TrueEnablementCondition conditionType="childObjectCondition"/>
	</CollectionReferenceObjectDefinition>

	<!-- The class to represent relationships between folders and Content Page. These relationships are called folder items. -->
	<CollectionReferenceObjectDefinition alwaysAllowMove="false" definitionName="cmc/pagelayout/BaseContentPageFolderItemReferenceObjectDefinition" idProperty="folderItemID" isBaseDefinition="true">
		<!--- Create service to create the relationship between the parent folder and folder item reference. -->
		<CreateService url="/cmc/CreateFolderItemReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" parentProperty="true" propertyName="objectStoreId"/>
			<ServiceParam name="folderItemStoreId" objectPath="PageAlias" parameterName="folderItemStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" parentProperty="true" propertyName="folderId"/>
			<ServiceParam name="folderItemReferenceId" objectPath="PageAlias" propertyName="pageId"/>
		</CreateService>
		<!--- Delete service to delete the relationship between the parent folder and folder item reference. -->
		<DeleteService url="/cmc/DeleteFolderItemReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderItemStoreId" objectPath="PageAlias" parameterName="folderItemStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" parentProperty="true" propertyName="folderId"/>
			<ServiceParam name="folderItemReferenceId" objectPath="PageAlias" propertyName="pageId"/>
			<ServiceParam name="folderItemType" propertyName="folderItemType"/>
		</DeleteService>
		<TrueEnablementCondition conditionId="objectTypeFolderCondition" conditionType="childObjectCondition"/>
		<Xml name="template">
			<folderItemType>PageType</folderItemType>
		</Xml>
	</CollectionReferenceObjectDefinition>
</Definitions>