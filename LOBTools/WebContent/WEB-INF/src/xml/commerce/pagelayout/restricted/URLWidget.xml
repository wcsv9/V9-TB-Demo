<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		@keywords private
		
		This class overrides the <code>updateValue</code> method in the {@link cmc/foundation/GridTextViewer} class.
		cmc/pagelayout/GridUrlViewer is a text viewer that displays the non-SEO URL. Example of the non-SEO URL are: 
		"ProductDisplay?productId=10275&catalogId=#catalogId#&storeId=#storeId#", 
		"CategoryDisplay?categoryId=10105&catalogId=#catalogId#&storeId=#storeId#",
		"GenericStaticContentPageLayoutView?pageId=10001&catalogId=#catalogId#&storeId=#storeId#"
		These URLs need to be converted to SEO URL before being used by store front.
		This viewer takes the unique id of the catalog entry/catalog group/content page and generates the non-SEO URL.
	-->
	<GridTextViewer classDefinition="true" definitionName="cmc/pagelayout/GridUrlViewer">
		<!--- The store front command name to display a content page. The default value is 'GenericStaticContentPageLayoutView'. -->
		<variable name="contentURL" type="string" value="GenericStaticContentPageLayoutView"/>
		<!--- The store front command name to display a catalog entry page. The default value is 'ProductDisplay'. -->
		<variable name="catalogEntryURL" type="string" value="ProductDisplay"/>
		<!--- The store front command name to display a category page. The default value is 'CategoryDisplay'. -->
		<variable name="catalogGroupURL" type="string" value="CategoryDisplay"/>
	
		<!---
			@keywords private
			Updates and refreshes the non-SEO URL with a new {@link cmc/foundation/ModelProperty} value.
		-->
		<method args="e" name="updateValue">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var url = "";
			if (this.property != null) {
				var catgroupId = this.property.o.getPropertyValue("catgroupId", "PageAlias");
				if (catgroupId != null && catgroupId != "") {
					url += this.catalogGroupURL;
					url += "?categoryId=" + catgroupId;
				}
				else {
					var catentryId = this.property.o.getPropertyValue("catentryId", "PageAlias");
					if (catentryId != null && catentryId != "") {
						url += this.catalogEntryURL;
						url += "?productId=" + catentryId;
					}
					else {
						var pageId = this.property.o.getPropertyValue("pageId", "PageAlias");
						if (pageId != null && pageId != "") {
							url += this.contentURL;
							url += "?pageId=" + pageId;
						}
					}
				}
			}
			url += "&catalogId=#catalogId#&storeId=#storeId#";
			this.setVariable('text', url);
			this.property.change(url);
			]]>
		</method>
	</GridTextViewer>

	<!---
		@keywords private
		Use this class to show simple text data in a grid cell. Use this class instead of cmc/foundation/GridText if you
		need to display text for some rows and something else for other rows.
	-->
	<GridCellDescriptor classDefinition="true" definitionName="cmc/pagelayout/GridUrlCellDescriptor">
		<dependency localName="GridUrlViewer" moduleName="cmc/pagelayout/GridUrlViewer"/>
		<!---
			@keywords private
			Use {@link cmc/foundation/GridTextViewer} to create cell viewer instances.
		-->
		<variable name="cellViewerClass" value="${GridUrlViewer}"/>
	</GridCellDescriptor>

	<!---
		@keywords private
		This class defines a grid column for use with the generated non-SEO URL.
	-->

	<GridColumn classDefinition="true" definitionName="cmc/pagelayout/GridUrl" editable="false" enableFilter="false" width="300">
		<dependency localName="GridUrlViewer" moduleName="cmc/pagelayout/GridUrlViewer"/>
		<!---
			@keywords private
		 	Use "cmc/foundation/GridDisplayNameViewer" to create cell viewer instances.
		-->
		<variable name="cellViewerClass" value="${GridUrlViewer}"/>
	</GridColumn>

</Definitions>