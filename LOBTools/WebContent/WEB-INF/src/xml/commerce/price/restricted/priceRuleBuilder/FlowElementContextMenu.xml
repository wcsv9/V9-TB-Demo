<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	
	<!---
		Context menu for the elements in the price rule builder.
		@keywords private
	-->
	<FlowElementContextMenu classDefinition="true" definitionName="cmc/price/FlowElementContextMenu">
		<dependency localName="foundationResources" moduleName="cmc/foundation/FoundationResources"/>
		<dependency localName="priceResources" moduleName="cmc/price/PriceResources"/>
		<dependency localName="prcFlowElement" moduleName="cmc/price/FlowElement"/>
		
		<!---
			Populate the context menu.
			@keywords private
	 	-->
		<method name="createMenuItems">
			<![CDATA[
			if (this.flowElement.o.objectDefinition.definitionName == "prcFlowPath") {
				if (this.flowElement.parentFlow.editableFlow && !this.multiselected) {
					var siblings = this.flowElement.parentFlowElement.o.getObjects("FlowElement");
					if (siblings.length > 2) {
						this.addMenuItem(foundationResources.Singleton.contextMenuDelete.string, this, "doDeletePath");
					}
				}
			}
			else {
				if (!this.multiselected) {
					this.addMenuItem(priceResources.Singleton.details.string, this, "doDetails");
				}
				var doRemoveEnabled = this.flowElement.parentFlow.editableFlow;
				if (doRemoveEnabled) {
					if (this.multiselected) {
						for (var i = 0; i < this.flowElement.parentFlow.selectedElements.length; i++) {
							var e = this.flowElement.parentFlow.selectedElements[i];
							if (e instanceof prcFlowElement.Class) {
								if (e.o && e.o.objectDefinition && e.isBranch()) {
									continue;
								}
								if (e.fixedElement) {
									doRemoveEnabled = false;
									break;
								}
							}
						}
					}
					else {
						if (!this.flowElement.isBranch()) {
							doRemoveEnabled = !this.flowElement.fixedElement;
						}
					}
					if (doRemoveEnabled) {
						this.addMenuItem(foundationResources.Singleton.contextMenuDelete.string, this, "doRemove");
					}
				}
				if (this.flowElement.parentFlow.editableFlow && !this.multiselected && (this.flowElement.isBranch()) && this.flowElement.o.objectType != "dynamicKitBranch") {
					this.addMenuItem(priceResources.Singleton.addPath.string, this, "doAddPath");
				}
			}
			]]>
		</method>
		
	</FlowElementContextMenu>
		
</Definitions>