<?xml version="1.0" encoding="UTF-8"?>
<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>

	<FlowElementSummary classDefinition="true" definitionName="cmc/price/CustomerConditionElementSummary">
		<dependency localName="priceResources" moduleName="cmc/price/PriceResources"/>

		<FlowSummaryParam name="scope" propertyName="scope"/>
		<FlowSummaryParam name="targetMemberGroups" propertyName="targetMemberGroups"/>
		<FlowSummaryParam name="targetOrganizations" propertyName="targetOrganizations"/>
		<FlowSummaryParam name="targetCustomerSegments" propertyName="targetCustomerSegments"/>
		<FlowSummaryParam name="targetBuyerOrganizations" propertyName="targetBuyerOrganizations"/>
		
		<FlowSummaryParam name="memberGroupIds" objectPath="MemberGroupEntry" propertyName="memberGroupIdentifier"/>
		<FlowSummaryParam name="organizationIds" objectPath="OrganizationEntry" propertyName="organizationIdentifier"/>
		<FlowSummaryParam name="customerSegmentIds" objectPath="ChildSegment/CustomerSegmentGroup" propertyName="name"/>
		<FlowSummaryParam name="buyerOrganizationIds" objectPath="ChildBuyerOrganizationGroup/BuyerOrganizationGroup" propertyName="name"/>
		
		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.updateSummaryDel.connect(priceResources.Singleton.scopeMemberGroups, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.scopeOrganizations, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.scopeCustomerSegments, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAnyMemberGroups, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAllMemberGroups, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.notInMemberGroups, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAnyOrganizations, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAllOrganizations, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.notInOrganizations, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAnyCustomerSegments, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAllCustomerSegments, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.notInCustomerSegments, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAnyBuyerOrganizations, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.inAllBuyerOrganizations, "onstring");
			this.updateSummaryDel.connect(priceResources.Singleton.notInBuyerOrganizations, "onstring");
			]]>
		</handler>

		<method args="e" name="updateSummary">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			var summaryText = "";
			var tooltipText = "";
			if (this.resolvedParams.scope == "memberGroups") {
				var memberGroupIds = this.getValuesList("memberGroupIds");
				if (memberGroupIds != "") {
					if (this.resolvedParams.targetMemberGroups == "inAny") {
						summaryText = this.getSummaryText("summary_inAnyMemberGroups", memberGroupIds);
						tooltipText = this.getTooltipText("summary_inAnyMemberGroups", memberGroupIds);
					}
					else if (this.resolvedParams.targetMemberGroups == "inAll") {
						summaryText = this.getSummaryText("summary_inAllMemberGroups", memberGroupIds);
						tooltipText = this.getTooltipText("summary_inAllMemberGroups", memberGroupIds);
					}
					else if (this.resolvedParams.targetMemberGroups == "notIn") {
						summaryText = this.getSummaryText("summary_notInMemberGroups", memberGroupIds);
						tooltipText = this.getTooltipText("summary_notInMemberGroups", memberGroupIds);
					}
				}
			}
			else if (this.resolvedParams.scope == "organizations") {
				var organizationIds = this.getValuesList("organizationIds");
				if (organizationIds != "") {
					if (this.resolvedParams.targetOrganizations == "inAny") {
						summaryText = this.getSummaryText("summary_inAnyOrganizations", organizationIds);
						tooltipText = this.getTooltipText("summary_inAnyOrganizations", organizationIds);
					}
					else if (this.resolvedParams.targetOrganizations == "inAll") {
						summaryText = this.getSummaryText("summary_inAllOrganizations", organizationIds);
						tooltipText = this.getTooltipText("summary_inAllOrganizations", organizationIds);
					}
					else if (this.resolvedParams.targetOrganizations == "notIn") {
						summaryText = this.getSummaryText("summary_notInOrganizations", organizationIds);
						tooltipText = this.getTooltipText("summary_notInOrganizations", organizationIds);
					}
				}
			}
			else if (this.resolvedParams.scope == "customerSegments") {
				var customerSegmentIds = this.getValuesList("customerSegmentIds");
				if (customerSegmentIds != "") {
					if (this.resolvedParams.targetCustomerSegments == "inAny") {
						summaryText = this.getSummaryText("summary_inAnyCustomerSegments", customerSegmentIds);
						tooltipText = this.getTooltipText("summary_inAnyCustomerSegments", customerSegmentIds);
					}
					else if (this.resolvedParams.targetCustomerSegments == "inAll") {
						summaryText = this.getSummaryText("summary_inAllCustomerSegments", customerSegmentIds);
						tooltipText = this.getTooltipText("summary_inAllCustomerSegments", customerSegmentIds);
					}
					else if (this.resolvedParams.targetCustomerSegments == "notIn") {
						summaryText = this.getSummaryText("summary_notInCustomerSegments", customerSegmentIds);
						tooltipText = this.getTooltipText("summary_notInCustomerSegments", customerSegmentIds);
					}
				}
			}
			else if (this.resolvedParams.scope == "buyerOrganizations") {
				var buyerOrganizationIds = this.getValuesList("buyerOrganizationIds");
				if (buyerOrganizationIds != "") {
					if (this.resolvedParams.targetBuyerOrganizations == "inAny") {
						summaryText = this.getSummaryText("summary_inAnyBuyOrganizations", buyerOrganizationIds);
						tooltipText = this.getTooltipText("summary_inAnyBuyOrganizations", buyerOrganizationIds);
					}
					else if (this.resolvedParams.targetBuyerOrganizations == "inAll") {
						summaryText = this.getSummaryText("summary_inAllBuyOrganizations", buyerOrganizationIds);
						tooltipText = this.getTooltipText("summary_inAllBuyOrganizations", buyerOrganizationIds);
					}
					else if (this.resolvedParams.targetBuyerOrganizations == "notIn") {
						summaryText = this.getSummaryText("summary_notInBuyOrganizations", buyerOrganizationIds);
						tooltipText = this.getTooltipText("summary_notInBuyOrganizations", buyerOrganizationIds);
					}
				}
			}
			this.setSummaryText(summaryText);
			this.setTooltipText(tooltipText);
			]]>
		</method>
		
		<!--- @keywords private -->
		<method args="template, valuesList" name="getSummaryText">
			<![CDATA[
			var values = valuesList.split(", ");
			var text = "";
			if (values.length > 3) {
				text = priceResources.Singleton.replaceValues(template, valuesList.split(", ", 3));
			}
			else {
				text = priceResources.Singleton.replaceValues("full_" + template, [valuesList]);
			}
			return text;
			]]>
		</method>
		
		<!--- @keywords private -->
		<method args="template, valuesList" name="getTooltipText">
			<![CDATA[
			var values = valuesList.split(", ");
			var text = "";
			if (values.length > 3) {
				text = priceResources.Singleton.replaceValues("full_" + template, [valuesList]);
			}
			return text;
			]]>
		</method>
	</FlowElementSummary>
</Definitions>