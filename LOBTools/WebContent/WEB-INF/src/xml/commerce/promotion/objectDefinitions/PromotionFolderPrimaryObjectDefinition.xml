<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		This definition defines the base object from which PromotionFolder and InheritedPromotionFolder are derived.
		A promotion folder is an object used to organize promotions so that they can be found easily.
		A promotion can be in multiple folders at the same time which is why this class uses a collection reference object
		definition to define the relationship between folders and promotions.
		Promotion folders use the Folder noun from the file wc-infrastructure-clientobjects.xml
		which contains information on how the parameters in the services
		are mapped to create the appropriate BOD for the Web services.
	-->
	<PrimaryObjectDefinition definitionName="cmc/promotion/BasePromotionFolderPrimaryObjectDefinition" displayName="${promotionResources.promotionFolderObjectName}" displayNameProperty="identifier" helpLink="tasks/tprcreatpromofold.htm" idProperty="folderId" isBaseDefinition="true" newDisplayName="${promotionResources.promotionFolder_newPromotionFolderDisplayName}" newObjectMenuItemText="${promotionResources.contextMenuNewPromotionFolder}" objectGroups="PromotionFolderGroup" propertiesDefinition="cmc/promotion/PromotionFolderProperties" writeUsage="IBM_ManagePromotionTool">
		<dependency localName="promotionResources" moduleName="cmc/promotion/PromotionResources"/>
		<!--- This service retrieves all the child folders.  -->
		<GetChildrenService objectTypes="PromotionFolderReference,InheritedPromotionFolderReference" url="/cmc/GetChildFolders">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="folderObjectType" value="PromotionFolder"/>
		</GetChildrenService>
		<!--- This service retrieves all the folder items that belong to this folder. -->
		<GetChildrenService objectTypes="PromotionFolderItemReference,PromotionFolderInheritedItemReference,InheritedPromotionFolderInheritedItemReference" url="/cmc/GetPromotionFolderItems">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="defaultLanguageId"/>
		</GetChildrenService>
		<ObjectTypeFilter filterType="utilitiesViewFilter" objectTypes="PromotionFolderReference,InheritedPromotionFolderReference,PromotionFolderItemReference,PromotionFolderInheritedItemReference,InheritedPromotionFolderInheritedItemReference"/>
		<!--- Update service to update a folder. -->
		<UpdateService url="/cmc/UpdateFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="parentFolderId" optional="true" parameterName="parentFolderId" parentProperty="true" propertyName="folderId"/>
		</UpdateService>
		<!---
			Retrieves the {@link cmc/promotion/BasePromotionFolderPrimaryObjectDefinition} object that is the parent to this object.
		-->
		<GetReferencesService url="/cmc/GetParentFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="parentFolderId" propertyName="parentFolderId"/>
			<ServiceParam name="folderObjectType" value="PromotionFolder"/>
		</GetReferencesService>
		<!-- Refresh Service to reload the properties of the folder -->
		<RefreshService url="/cmc/GetFolderById">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
			<ServiceParam name="folderObjectType" value="PromotionFolder"/>
		</RefreshService>
		<!--- This is the folder_id in the FOLDER table, which indicates the primary key of this folder. -->
		<PropertyDefinition copyProtected="true" propertyName="folderId"/>
		<!--- This is the identifier of the folder. -->
		<PropertyDefinition displayName="${promotionResources.promotionFolder_name}" maximumSize="256" propertyName="identifier" required="true" trim="true"/>
		<!--- This is the description of the folder. The description of a folder is not language sensitive. -->
		<PropertyDefinition displayName="${promotionResources.promotionFolder_description}" maximumSize="256" propertyName="description" type="string"/>
		<Xml name="template">
			<folderType>IBM_PromotionFolder</folderType>
		</Xml>
		<!--- Reference to the parent of the folder. -->
		<ParentReferenceObjectDefinition baseDefinition="cmc/promotion/PromotionFolderReferenceObjectDefinition" cascadeDelete="true"/>
		<!--- Navigation list definition for navigating from the folder to the promotions in the folder. -->
		<NavigationListDefinition baseDefinition="cmc/promotion/PromotionFolderItemGridChildList" isDefault="true"/>
		<!--- Navigation list definition for navigating from the folder to sub folders. -->
		<NavigationListDefinition baseDefinition="cmc/promotion/PromotionFolderGridChildList" toolbarIcon="folderListToolbarIcon"/>
		<!--- Navigation list definition for calendar view of the promotions in the folder. -->
		<NavigationListDefinition baseDefinition="cmc/promotion/PromotionFolderGanttChartChildList"/>
	</PrimaryObjectDefinition>

	<!--
		Defines the object to be used to represent folders owned by the local store.
	-->
	<PrimaryObjectDefinition baseDefinition="cmc/promotion/BasePromotionFolderPrimaryObjectDefinition" creatable="true" definitionName="cmc/promotion/PromotionFolder" headerIcon="GenericFolderHeaderIcon" icon="GenericFolderIcon" objectType="PromotionFolder">
		<!--- Create service to create a folder and its relationship to a parent folder.. -->
		<CreateService url="/cmc/CreateFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="parentFolderId" optional="false" parameterName="parentFolderId" parentProperty="true" propertyName="folderId">
				<EnablementCondition conditionId="enableParentFolderId" enablementValue="" negate="true" parentProperty="true" propertyName="identifier"/>
			</ServiceParam>
		</CreateService>
		<!--- Delete service to delete a folder. -->
		<DeleteService url="/cmc/DeleteFolder">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderId" propertyName="folderId"/>
		</DeleteService>
		<TrueEnablementCondition/>
		<!--- Collection reference to the items that belong to the folder and are owned by the local store. -->
		<CollectionReferenceObjectDefinition baseDefinition="cmc/promotion/PromotionFolderItemReferenceObjectDefinition"/>
		<!--- Collection reference to the items that belong to the folder and are owned by the asset store. -->
		<CollectionReferenceObjectDefinition baseDefinition="cmc/promotion/PromotionFolderInheritedItemReferenceObjectDefinition"/>
	</PrimaryObjectDefinition>

	<!--
		Defines the object to be used to represent folders owned by the asset store.
	-->
	<PrimaryObjectDefinition baseDefinition="cmc/promotion/BasePromotionFolderPrimaryObjectDefinition" compatibleObjectTypes="PromotionFolder" creatable="false" definitionName="cmc/promotion/InheritedPromotionFolder" headerIcon="InheritedGenericFolderHeaderIcon" icon="InheritedGenericFolderIcon" objectType="InheritedPromotionFolder">
		<!--- Reference to the parent of the folder. -->
		<ParentReferenceObjectDefinition baseDefinition="cmc/promotion/InheritedPromotionFolderReferenceObjectDefinition"/>
		<!--- Collection reference to the items that belong to the folder and are owned by the asset store. -->
		<CollectionReferenceObjectDefinition baseDefinition="cmc/promotion/InheritedPromotionFolderInheritedItemReferenceObjectDefinition"/>
	</PrimaryObjectDefinition>

	<!-- The relationship between this folder and its local parent -->
	<ParentReferenceObjectDefinition cascadeDelete="true" definitionName="cmc/promotion/PromotionFolderReferenceObjectDefinition" derivedId="true" idProperty="folderReferenceId" objectGroups="PromotionFolderReferenceGroup" objectType="PromotionFolderReference" referencedType="PromotionFolder"/>

	<!-- The relationship between this folder and its asset store parent -->
	<ParentReferenceObjectDefinition cascadeDelete="true" definitionName="cmc/promotion/InheritedPromotionFolderReferenceObjectDefinition" derivedId="true" idProperty="folderReferenceId" objectGroups="PromotionFolderReferenceGroup" objectType="InheritedPromotionFolderReference" referencedType="InheritedPromotionFolder"/>

	<!-- The relationship between a folder and local promotions in this folder. -->
	<CollectionReferenceObjectDefinition allowDuplicates="false" baseDefinition="cmc/promotion/BasePromotionFolderItemReferenceObjectDefinition" definitionName="cmc/promotion/PromotionFolderItemReferenceObjectDefinition" initializeObjectStoreId="true" objectGroups="PromotionFolderItemReferenceGroup" objectType="PromotionFolderItemReference" referencedTypes="Promotion">
		<TrueEnablementCondition conditionType="childObjectCondition"/>
	</CollectionReferenceObjectDefinition>

	<!-- The relationship between a folder and asset store promotions in a folder. -->
	<CollectionReferenceObjectDefinition allowDuplicates="false" baseDefinition="cmc/promotion/BasePromotionFolderItemReferenceObjectDefinition" definitionName="cmc/promotion/PromotionFolderInheritedItemReferenceObjectDefinition" initializeObjectStoreId="true" objectGroups="PromotionFolderItemReferenceGroup" objectType="PromotionFolderInheritedItemReference" referencedTypes="InheritedPromotion">
		<TrueEnablementCondition conditionType="childObjectCondition"/>
	</CollectionReferenceObjectDefinition>

	<!-- The relationship between an inherited folder and an inherited promotion in a folder. -->
	<CollectionReferenceObjectDefinition allowDuplicates="false" baseDefinition="cmc/promotion/BasePromotionFolderItemReferenceObjectDefinition" definitionName="cmc/promotion/InheritedPromotionFolderInheritedItemReferenceObjectDefinition" objectGroups="PromotionFolderItemReferenceGroup" objectType="InheritedPromotionFolderInheritedItemReference" referencedTypes="InheritedPromotion">
		<TrueEnablementCondition conditionType="childObjectCondition"/>
	</CollectionReferenceObjectDefinition>

	<!--
		The class to represent relationships between folders and promotions. Items can be moved or added to a folder, but not copied into a folder.
		These relationships are called folder items.
	-->
	<CollectionReferenceObjectDefinition alwaysAllowMove="false" definitionName="cmc/promotion/BasePromotionFolderItemReferenceObjectDefinition" idProperty="folderItemID" isBaseDefinition="true">
		<!--- Create service to create the relationship between the parent folder and folder item reference. -->
		<CreateService url="/cmc/CreateFolderItemReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="objectStoreId" parentProperty="true" propertyName="objectStoreId"/>
			<ServiceParam name="folderItemStoreId" objectPath="PromotionGroup" parameterName="folderItemStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" parentProperty="true" propertyName="folderId"/>
			<ServiceParam name="folderItemReferenceId" objectPath="PromotionGroup" propertyName="promotionId"/>
		</CreateService>
		<!--- Delete service to delete the relationship between the parent folder and folder item reference. -->
		<DeleteService url="/cmc/DeleteFolderItemReference">
			<ServiceParam name="storeId"/>
			<ServiceParam name="folderItemStoreId" objectPath="PromotionGroup" parameterName="folderItemStoreId" propertyName="objectStoreId"/>
			<ServiceParam name="folderId" parentProperty="true" propertyName="folderId"/>
			<ServiceParam name="folderItemReferenceId" objectPath="PromotionGroup" propertyName="promotionId"/>
			<ServiceParam name="folderItemType" propertyName="folderItemType"/>
		</DeleteService>
		<TrueEnablementCondition conditionId="objectTypeBasePromotionFolderItemReferenceCondition" conditionType="childObjectCondition"/>
		<Xml name="template">
			<folderItemType>PromotionType</folderItemType>
		</Xml>
	</CollectionReferenceObjectDefinition>
</Definitions>