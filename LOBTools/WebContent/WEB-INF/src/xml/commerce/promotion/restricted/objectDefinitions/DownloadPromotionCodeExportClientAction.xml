<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!-- Custom client action class to download a promotion code export -->
	<ClientAction allowMultipleSelection="false" classDefinition="true" definitionName="cmc/promotion/DownloadPromotionCodeExportClientAction" toolbarIcon="downloadPromotionCodeExportToolbarIcon">
		<dependency localName="ContextUtil" moduleName="cmc/foundation/ContextUtil"/>

		<variable name="exportUrl" type="string"/>
		
		<!---
			@keywords private
			@param cmc/foundation/ModelObject objects: The array of selected model objects.
		-->
		<method args="objects" name="performAction">
			<![CDATA[
			var timeZoneId = ContextUtil.Singleton.findContextValue(null, "timeZoneId").value;
			var workspaceName = ContextUtil.Singleton.findContextValue(null, "workspaceName").value;
			var workspaceTaskGroup = ContextUtil.Singleton.findContextValue(null, "workspaceTaskGroup").value;
			var workspaceTask = ContextUtil.Singleton.findContextValue(null, "workspaceTask").value;
			var storeId = objects[0].getPropertyValue("objectStoreId");
			var uploadFileId = objects[0].getPropertyValue("promotionCodeExportId");
			var type = "PromotionCode";
			this.exportUrl = "ExportServlet?storeId=" + storeId + "&type=" + type + "&uploadFileId=" + uploadFileId + "&timeZoneId=" + timeZoneId + "&workspaceName=" + workspaceName + "&workspaceTaskGroup=" + workspaceTaskGroup + "&workspaceTask=" + workspaceTask;
			var caller = this;
			require(["cmc/price/GetSSOToken"], function(GetSSOToken) {
				GetSSOToken.Singleton.doRequest(caller, {});
			});
			]]>
		</method>
		
		<!---
			@keywords private
		-->
		<method name="popupExportWindow">
			<![CDATA[
			var SSOToken = ContextUtil.Singleton.findContextValue(null, "SSOToken").value;
			this.exportUrl = this.exportUrl + "&ActivityToken=" + SSOToken;
			var newWindowObj = new Object();
			newWindowObj.URL = this.exportUrl;
			newWindowObj.windowName = "Export";
			newWindowObj.windowFeatures = "left=0,top=0,width=1014,height=710,scrollbars=no,toolbar=no,directories=no,status=no,menubar=no,copyhistory=no,resizable=yes";
			openNewWindow(newWindowObj);
			]]>
		</method>		
	</ClientAction>
</Definitions>