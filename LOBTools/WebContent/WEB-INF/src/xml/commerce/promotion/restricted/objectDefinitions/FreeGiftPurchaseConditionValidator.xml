<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		<p>Validator for a {@link cmc/promotion/OrderLevelFreeGiftPurchaseConditionObjectDefinition OrderLevelFreeGiftPurchaseCondition} object.</p>
		
		This validator ensures that when the value of the property <code>chooseBehavior</code> is <code>pickFreeGift</code>,
		<ul>
			<li>the number of gift catalog entries is greater than or equal to the value of the <code>NoOfItems</code> property, and</li>
			<li>the number of gift catalog entries that are the same is less than or equal to the value of the <code>NoOfItems</code> property.</li>
		</ul>
	-->
	<Validator classDefinition="true" definitionName="cmc/promotion/OrderLevelFreeGiftPurchaseConditionValidator">
		<dependency localName="promotionResources" moduleName="cmc/promotion/PromotionResources"/>
		<!--- @keywords private -->
		<variable name="message_noOfItemsInvalidValue" type="string" value="${promotionResources.Singleton.promotion_error_NoOfItemsInvalidValue.string}"/>
		<!--- @keywords private -->
		<variable name="message_sameItemsInvalidForNoOfItemsValue" type="string" value="${promotionResources.Singleton.promotion_error_sameItemsInvalidForNoOfItemsValue.string}"/>
		
		<!--- @keywords private -->
		<method args="o, property" name="validate">
			<![CDATA[
			if (typeof(property) == "undefined") property = null;
			o.getProperty("NoOfItems").clearValidationError(this);
			o.clearValidationError(this);
			if (o.getPropertyValue("chooseBehavior") == "pickFreeGift") {
				var numberOfItems = o.getPropertyValue("NoOfItems");
				var giftEntries = o.getObjects("Identifier_GiftCatalogEntryGroup");
				if (numberOfItems > giftEntries.length) {
					o.getProperty("NoOfItems").addValidationError(this, this.message_noOfItemsInvalidValue);
				}
				for (var i = 0; i < giftEntries.length - 1; i++) {
					var id = giftEntries[i].getReferencedObject().getPropertyValue("catentryId");
					var count = 1;
					for (var j = i + 1; j < giftEntries.length; j++) {
						var otherId = giftEntries[j].getReferencedObject().getPropertyValue("catentryId");
						if (id == otherId) {
							count++;
						}
					}
					if (count > numberOfItems) {
						o.addValidationError(this, this.message_sameItemsInvalidForNoOfItemsValue);
						break;
					}
				}
			}
			]]>
		</method>
	</Validator>
		
</Definitions>