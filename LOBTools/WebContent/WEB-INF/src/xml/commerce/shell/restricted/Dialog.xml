<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>

	<!---
		@keywords private

		This class implements the dialog that is opened when a tool with unsaved changes closes.
		It has the options of disregarding the changes and close the tool, and cancel the close action.
	-->
	<AlertDialog definitionName="cmc/shell/ToolOnCloseWithChangesDialog" promptText="${shellResources.Singleton.systemCloseToolWithUnsavedChangesPrompt.string}" showNo="true" showOK="false" showYes="true" singletonDefinition="true">
		<dependency localName="ToolsController" moduleName="cmc/shell/ToolsController"/>
		<dependency localName="FocusUtil" moduleName="cmc/foundation/FocusUtil"/>
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/>
		<!---
			@keywords private
			Identifier of the tool. This is a required attribute.
		-->
		<variable name="objectId" type="string" value=""/>

		<!--- @keywords private -->
		<method args="oid" name="openToolOnCloseWithChangesDialog">
			<![CDATA[
			this.objectId = oid;
			this.openWindow();
			]]>
		</method>
		
		<!---
			@keywords private
			Set the focus to No button
		-->
		<method args="e" name="setInitialFocus">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			FocusUtil.setFocus(this.viewButtons.noBtn);
			]]>
		</method>

		<!--- @keywords private -->
		<method name="handleYes">
			<![CDATA[
			ToolsController.Singleton.destroyTool(this.objectId);
			]]>
		</method>
	</AlertDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when the user selects a workspace task to
		work on while opened tools in Management Center have unsaved changes. It has the options of
		disregarding the changes and start working on the task, and cancel the action.
	-->
	<AlertDialog definitionName="cmc/shell/SwitchTaskWithChangesDialog" promptText="${shellResources.Singleton.switchTaskWithUnsavedChangesPrompt.string}" showNo="true" showOK="false" showYes="true" singletonDefinition="true">
		<dependency localName="FocusUtil" moduleName="cmc/foundation/FocusUtil"/>
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/>
		<!--- @keywords private -->
		<variable name="o" value="${null}"/>
		
		<!---
			@keywords private
			This method opens this dialog to warn the user that tools in Management Center have unsaved
			changes.
			@param cmc/foundation/ModelObject o The model object that the user is performing the work on action with.
		-->
		<method args="o" name="openSwitchTaskWithChangesDialog">
			<![CDATA[
			if (o) {
				this.o = o;
			}
			this.openWindow();
			]]>
		</method>
		
		<!---
			@keywords private
			Set the focus to No button
		-->
		<method args="e" name="setInitialFocus">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			FocusUtil.setFocus(this.viewButtons.noBtn);
			]]>
		</method>

		<!---
			@keywords private
			This method closes this dialog.
		-->
		<method name="closeWindow">
			<![CDATA[
			this.o = null;
			this.inherited(arguments);
			]]>
		</method>
		
		<!--- @keywords private -->
		<method name="handleYes">
			<![CDATA[
			var caller = this;
			require(["cmc/shell/WorkspaceUtil"], function(WorkspaceUtil) {
				WorkspaceUtil.Singleton.updateWorkspaceContext(caller.o);
			});
			]]>
		</method>
	</AlertDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when the user selects workspace tasks to
		process while opened tools in Management Center have unsaved changes. It has the options of
		disregarding the changes and start processing the tasks, and cancel the action. Possible options
		of processing the tasks are complete, approve and reject.
	-->
	<AlertDialog classDefinition="true" definitionName="cmc/shell/ProcessTasksWithChangesDialog" promptText="${shellResources.Singleton.switchTaskWithUnsavedChangesPrompt.string}" showNo="true" showOK="false" showYes="true">
		<dependency localName="FocusUtil" moduleName="cmc/foundation/FocusUtil"/>
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/>
		<!--- @keywords private -->
		<variable name="objects" value="${null}"/>

		<!---
			@keywords private
			This method opens this dialog to warn the user that tools in Management Center have unsaved
			changes.
			@param [cmc/foundation/ModelObject] objects The array of model objects that the user is performing the process action with.
		-->
		<method args="objects" name="openProcessTasksWithChangesDialog">
			<![CDATA[
			if (objects) {
				this.objects = objects;
			}
			this.openWindow();
			]]>
		</method>

		<!---
			@keywords private
			This method closes this dialog.
		-->
		<method name="closeWindow">
			<![CDATA[
			this.objects = null;
			this.inherited(arguments);
			]]>
		</method>
		
		<!---
			@keywords private
			Set the focus to No button
		-->
		<method args="e" name="setInitialFocus">
			<![CDATA[
			if (typeof(e) == "undefined") e = null;
			FocusUtil.setFocus(this.viewButtons.noBtn);
			]]>
		</method>
	</AlertDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when the user selects workspace tasks to
		complete while opened tools in Management Center have unsaved changes. It has the options of
		disregarding the changes and start completing the tasks, and cancel the action.
	-->
	<ProcessTasksWithChangesDialog definitionName="cmc/shell/CompleteTasksWithChangesDialog" package="cmc/shell" singletonDefinition="true">
		<!--- @keywords private -->
		<method name="handleYes">
			<![CDATA[
			var caller = this;
			require(["cmc/shell/WorkspaceUtil"], function(WorkspaceUtil) {
				WorkspaceUtil.Singleton.invokeCompleteTaskService(caller.objects);
			});
			]]>
		</method>
		<!--- @keywords private -->
		<method args="objects" name="openCompleteTasksWithChangesDialog">
			<![CDATA[
			this.openProcessTasksWithChangesDialog(objects);
			]]>
		</method>
	</ProcessTasksWithChangesDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when the user selects workspace task groups
		to approve while opened tools in Management Center have unsaved changes. It has the options
		of disregarding the changes and start approving the task groups, and cancel the action.
	-->
	<ProcessTasksWithChangesDialog definitionName="cmc/shell/ApproveTaskGroupsWithChangesDialog" package="cmc/shell" singletonDefinition="true">
		<!--- @keywords private -->
		<method name="handleYes">
			<![CDATA[
			var caller = this;
			require(["cmc/shell/WorkspaceUtil"], function(WorkspaceUtil) {
				WorkspaceUtil.Singleton.invokeApproveTaskGroupService(caller.objects);
			});
			]]>
		</method>
		<!--- @keywords private -->
		<method args="objects" name="openApproveTaskGroupsWithChangesDialog">
			<![CDATA[
			this.openProcessTasksWithChangesDialog(objects);
			]]>
		</method>
	</ProcessTasksWithChangesDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when the user selects workspace task groups
		to cancel while opened tools in Management Center have unsaved changes. It has the options
		of disregarding the changes and start canceling the task groups, and cancel the action.
	-->
	<ProcessTasksWithChangesDialog definitionName="cmc/shell/CancelTaskGroupsWithChangesDialog" package="cmc/shell" singletonDefinition="true">
		<!--- @keywords private -->
		<method name="handleYes">
			<![CDATA[
			var caller = this;
			require(["cmc/shell/WorkspaceUtil"], function(WorkspaceUtil) {
				WorkspaceUtil.Singleton.invokeCancelTaskGroupService(caller.objects);
			});
			]]>
		</method>
		<!--- @keywords private -->
		<method args="objects" name="openCancelTaskGroupsWithChangesDialog">
			<![CDATA[
			this.openProcessTasksWithChangesDialog(objects);
			]]>
		</method>
	</ProcessTasksWithChangesDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when the user selects workspace task groups
		to reject while opened tools in Management Center have unsaved changes. It has the options
		of disregarding the changes and start rejecting the task groups, and cancel the action.
	-->
	<ProcessTasksWithChangesDialog definitionName="cmc/shell/RejectTaskGroupsWithChangesDialog" package="cmc/shell" singletonDefinition="true">
		<!--- @keywords private -->
		<method name="handleYes">
			<![CDATA[
			var caller = this;
			require(["cmc/shell/WorkspaceUtil"], function(WorkspaceUtil) {
				WorkspaceUtil.Singleton.invokeRejectTaskGroupService(caller.objects);
			});
			]]>
		</method>
		<!--- @keywords private -->
		<method args="objects" name="openRejectTaskGroupsWithChangesDialog">
			<![CDATA[
			this.openProcessTasksWithChangesDialog(objects);
			]]>
		</method>
	</ProcessTasksWithChangesDialog>
	
	<!---
		@keywords private
		
		This class implements the dialog that is opened when there are outstanding transactions. A message
		is displayed in the dialog.
	-->
	<AlertDialog definitionName="cmc/shell/TransactionProgressDialog" promptText="${shellResources.Singleton.systemHasOutstandingTransactions.string}" singletonDefinition="true">
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/></AlertDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when a tool is opened or brought to focus while
		Management Center is in its read-only mode. A message is displayed in the dialog.
	-->
	<AlertDialog definitionName="cmc/shell/ApplicationInReadOnlyModeDialog" promptText="${shellResources.Singleton.systemApplicationInReadOnlyMode.string}" singletonDefinition="true">
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/></AlertDialog>
	
	<!---
		@keywords private

		This class implements the dialog that is opened when a tool is opened or brought to focus while
		Management Center is in its read-only mode. A message is displayed in the dialog.
	-->
	<AlertDialog definitionName="cmc/shell/ApplicationInReadOnlyModeInApprovedContentDialog" promptText="${shellResources.Singleton.systemApplicationInReadOnlyModeInApprovedContent.string}" singletonDefinition="true">
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/></AlertDialog>
	
	<!---
		@keywords private

		This class implements the dialog that is opened when the user selects workspace tasks to
		process while there are unsaved changes in the task tool. Possible options of processing 
		the tasks are complete, approve and reject.
	-->
	<AlertDialog definitionName="cmc/shell/ProcessTasksWithUnsavedChangesDialog" promptText="${shellResources.Singleton.systemHasUnsavedChanges.string}" singletonDefinition="true">
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/></AlertDialog>

	<!-- 
		This dialog is used to prompt the user when they have unsaved objects and want to change their current time zone
	 -->
	<AlertDialog definitionName="cmc/shell/ChangeTimeZoneUnsavedDialog" promptText="${shellResources.Singleton.changeTimeZoneUnsavedDialogText.string}" showCancel="false" showNo="false" showOK="true" showYes="false" singletonDefinition="true">
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/>							
	</AlertDialog>

	<!---
		@keywords private

		This class implements the dialog that is opened when the user opens a tool that is not available to workspace tasks
		while the user is working on a workspace task. A message is displayed in the dialog.
	-->
	<AlertDialog definitionName="cmc/shell/ToolNotAvailableToWorkspaceTasksDialog" promptText="${shellResources.Singleton.systemToolNotAvailableToWorkspaceTasks.string}" singletonDefinition="true">
		<dependency localName="shellResources" moduleName="cmc/shell/ShellResources"/></AlertDialog>

</Definitions>