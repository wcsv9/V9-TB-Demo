<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015, 2016 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>

	<!---
		@keywords private
		
		This class implements all the tabs in the work area in Management Center. When a tool is
		opened, its associated tab will be displayed in the tab section of the area above the tool
		pane, and users can access the tool by clicking on the tab.
	-->
	<Component classDefinition="true" definitionName="cmc/shell/ToolTabs">
		<dependency localName="ToolTab" moduleName="cmc/shell/ToolTab"/>
		<dependency localName="Logger" moduleName="cmc/shell/Logger"/>
		<AxisLayout axis="x"/>

		<!--- @keywords private -->
		<handler name="oninit">
			<![CDATA[
			this.bringToFront();
			]]>
		</handler>

		<!---
			This method opens the tab for the specified tool in the work area in Management Center.
			@param string objectId: identifier of the tool
			@param BusinessObjectEditor tool: an instance of a BusinessObjectEditor
			@param boolean setFocus: indicates that the tool is to be given focus
		-->
		<method args="objectId, tool, setFocus" name="openTab">
			<![CDATA[
			if (Logger.Singleton.enabled) {
				Logger.Singleton.entering("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "openTab(objectId,tool,setFocus)", [objectId, tool, setFocus]);
			}
			var tabViewIndex = this.findTab(objectId);
			if (tabViewIndex >= 0) {
				if (setFocus) {
					this.focusTab(objectId);
				}
			}
			else {
				this.createTab(objectId, tool, setFocus);
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "openTab(objectId,tool,setFocus)");
			}
			]]>
		</method>

		<!--- @keywords private -->
		<method args="objectId, tool, setFocus" name="createTab">
			<![CDATA[
			if (Logger.Singleton.enabled) {
				Logger.Singleton.entering("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "createTab(objectId,tool)", [objectId, tool]);
			}
			new ToolTab.Class(this, {
				objectId: objectId,
				tool: tool,
				active: setFocus
			});
			if (setFocus) {
				this.focusTab(objectId);
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "createTab(objectId,tool)");
			}
			]]>
		</method>

		<!--- @keywords private -->
		<method args="objectId" name="findTab">
			<![CDATA[
			if (Logger.Singleton.enabled) {
				Logger.Singleton.entering("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "findTab(objectId)", [objectId]);
			}
			for (var i = 0; i < this.childComponents.length; i++) {
				if (this.childComponents[i].objectId == objectId) {
					if (Logger.Singleton.enabled) {
						Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "findTab(objectId)", i);
					}
					return i;
				}
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.log("com.ibm.commerce.lobtools.foundation.shell", "WARNING", "cmc/shell/ToolTabs", "findTab(objectId)", "Unable to find the tab for the following tool: " + objectId);
				Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "findTab(objectId)", -1);
			}
			return -1;
			]]>
		</method>

		<!---
			This method returns the identifier of the tool that is currently being focused on in
			the work area.
			@returns string: identifier of the tool that is currently being focused
		-->
		<method name="getCurrentTab">
			<![CDATA[
			if (Logger.Singleton.enabled) {
				Logger.Singleton.entering("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "getCurrentTab");
			}
			for (var i = 0; i < this.childComponents.length; i++) {
				if (this.childComponents[i].active) {
					if (Logger.Singleton.enabled) {
						Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "getCurrentTab", this.childComponents[i].objectId);
					}
					return this.childComponents[i].objectId;
				}
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.log("com.ibm.commerce.lobtools.foundation.shell", "WARNING", "cmc/shell/ToolTabs", "getCurrentTab", "Unable to resolve the tool tab that is currently focused on.");
				Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "getCurrentTab", null);
			}
			return null;
			]]>
		</method>

		<!---
			This method brings the tab of the specified tool into focus.
			@param string objectId: identifier of the tool that will be focused
		-->
		<method args="objectId" name="focusTab">
			<![CDATA[
			if (Logger.Singleton.enabled) {
				Logger.Singleton.entering("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "focusTab(objectId)", [objectId]);
			}
			for (var i = 0; i < this.childComponents.length; i++) {
				if (this.childComponents[i].objectId == objectId) {
					this.childComponents[i].focus();
				}
				else {
					this.childComponents[i].unfocus();
				}
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "focusTab(objectId)");
			}
			]]>
		</method>

		<!---
			This method closes the tab of the specified tool in the work area in Management Center.
			@param string objectId: identifier of the tool that will be closed
		-->
		<method args="objectId" name="closeTab">
			<![CDATA[
			if (Logger.Singleton.enabled) {
				Logger.Singleton.entering("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "closeTab(objectId)", [objectId]);
			}
			var tabViewIndex = this.findTab(objectId);
			if (tabViewIndex >= 0) {
				this.childComponents[tabViewIndex].destroy();
			}
			if (Logger.Singleton.enabled) {
				Logger.Singleton.exiting("com.ibm.commerce.lobtools.foundation.shell", "cmc/shell/ToolTabs", "closeTab(objectId)");
			}
			]]>
		</method>
	</Component>

</Definitions>