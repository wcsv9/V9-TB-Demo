<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<Definitions>
	<!---
		@keywords private
		This text viewer takes the SEO static page URL keyword and generates the full URL for display.
	-->
	<TextViewer classDefinition="true" definitionName="cmc/store/UrlViewer" fgcolor="#676767">
		<dependency localName="StringUtil" moduleName="cmc/foundation/StringUtil"/>
		<dependency localName="storeResources" moduleName="cmc/store/StoreResources"/>
		<!---
			Generates and returns the full URL based on the properties value and sets it as the text
			to be displayed in the viewer.
			@param cmc/foundation/EventHandler del An optional delegate to call when a change in property value is caused by the value service.
			@returns string: display value
		-->
		<method args="del" name="getDisplayValue">
			<![CDATA[
			var displayValue = "";
			if (this.property != null) {
				var prefixUrlProperty = this.property.o.getProperty("staticPagePrefixUrl");
				del.connect(prefixUrlProperty, "onvalue");
				var urlKeywordValue = this.property.value;
				var prefixUrlValue = prefixUrlProperty.value;
				if (prefixUrlValue != "" && prefixUrlValue.indexOf("$SEO:PRIMARYTOKEN$") != -1 && urlKeywordValue != "") {
					var fullURL = StringUtil.Singleton.replace(prefixUrlValue, "$SEO:PRIMARYTOKEN$", urlKeywordValue);
					displayValue = storeResources.Singleton.replaceValues("seoStaticPageUrlPreviewPrompt", [fullURL]);
				}
			}
			return displayValue;
			]]>
		</method>
	</TextViewer>
	
	<!-- @keywords private -->
	<Component classDefinition="true" definitionName="cmc/store/UrlPreview">
		<AxisLayout axis="y" spacing="3"/>	
		<TextEditor property="${this.classroot.property}" width="${this.classroot.width}"/>
		<UrlViewer package="cmc/store" property="${this.classroot.property}" width="${this.classroot.width}"/>
	</Component>
	
	<!-- @keywords private -->
	<PropertyEditor classDefinition="true" definitionName="cmc/store/PropertyUrlPreview" sizeToAvailableWidth="true">
		<dependency localName="stoUrlPreview" moduleName="cmc/store/UrlPreview"/>
		<!---	
			@keywords private
			Create the editor box for the given {@link cmc/foundation/ModelProperty} component. This method overrides the createEditor
			method in the {@link cmc/foundation/PropertiesComponent} class.
			@param cmc/foundation/PropertiesComponent parentComponent The parent properties component from which to create the editor.
		-->
		<method args="parentComponent" name="createEditor">
			<![CDATA[
			var availableWidth = parentComponent.width - parentComponent.promptWidth - parentComponent.xspacing;
			new stoUrlPreview.Class(parentComponent, {
				name: "editor",
				x: parentComponent.promptWidth + parentComponent.xspacing,
				property: parentComponent.property,
				width: availableWidth,
				enabled: parentComponent.enabled
			});
			]]>
		</method>
	</PropertyEditor>
	
</Definitions>