<?xml version="1.0" encoding="UTF-8"?>
<!--********************************************************************-->
<!--  Licensed Materials - Property of IBM                              -->
<!--                                                                    -->
<!--  WebSphere Commerce                                                -->
<!--                                                                    -->
<!--  (c) Copyright IBM Corp. 2007                                      -->
<!--                                                                    -->
<!--  US Government Users Restricted Rights - Use, duplication or       -->
<!--  disclosure restricted by GSA ADP Schedule Contract with IBM Corp. -->
<!--                                                                    -->
<!--********************************************************************-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.ibm.com/xmlns/prod/commerce/foundation/config" xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/foundation/config">
	<xsd:annotation>
		<xsd:documentation>
		The WebSphere Commerce getData action will search for configuration files in the WEB-INF/config directory that have
		the name "get-data-config.xml". The configuration files must have "get-data-config" as
		the root element. There should be one configuration file for each component that is configured
		for use with the getData action. Base component configuration files are expected in
		WEB-INF/config/base/component/get-data-config.xml where
		&quot;component&quot; is a directory that is unique to the component.
		Client extensions must be located in WEB-INF/config/ext/.global/get-data-config. Client
		extensions will be loaded after base component configurations.
		</xsd:documentation>
	</xsd:annotation>
	<xsd:element name="get-data-config">
		<xsd:annotation>
			<xsd:documentation>
			This get-data-config element is used to configure the WebSphere Commerce getData action.
			The getData action can be used by JSP authors to fetch data from WebSphere Commerce
			component services for use on a JSP page. Component data types must be registered
			as part of the get-data-config element in order for them to be recognized by
			the getData action.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="data-type" type="_config:data-typeComplexType">
					<xsd:annotation>
						<xsd:documentation>
						The data-type element is used to declare a supported data type for the getData action.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="client-facade" type="_config:client-facadeComplexType">
					<xsd:annotation>
						<xsd:documentation>
						The client-facade element is used to declare the component client facade that
						is to be used to invoke the component service that will fetch the desired
						data.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="expression-builder" type="_config:expression-builderComplexType">
					<xsd:annotation>
						<xsd:documentation>
						The expression-builder element is used to declare expression builders. An expression
						builder can be used to help the JSP author by handling the complexity of composing
						a query expression. The JSP author will only need to supply the name of the expression builder
						and values for the expression builder's published input parameters.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="data-typeComplexType">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="name"
				type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					The name of the data type. This name is used to correlate the data type with client
					facade and expression builder declarations.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1"
				name="description" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					A description of the data type.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="1" maxOccurs="1" name="type"
				type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					The fully qualified Java class or interface name of the data type. For WebSphere Commerce
					components, this will be the noun SDO type.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="client-facadeComplexType">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1"
				name="data-type-name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					The name of the data type with which this client facade definition will be associated.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="1" maxOccurs="1" name="class"
				type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					The fully qualified Java class name of the component client facade that is to be used
					by the getData action when data of the matching data type is requested. The client facade
					class must have a constructor that takes two parameters. The business context and
					the security callback. The business context is of type
					'com.ibm.commerce.foundation.datatypes.BusinessContextType'.
					The security callback handler is of type
					'javax.security.auth.callback.CallbackHandler'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="1" maxOccurs="1" name="method"
				type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					The name of the method in the componet client facade class that is to be used
					to fetch the data requested by the getData action.
					The method must be able to accept an instance of 'com.ibm.commerce.oagis9.datatypes.GetType'
					and return an instance of the ShowXXXDataAreaType for the specific noun that is being
					requested.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="expression-builderComplexType">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="name"
				type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					The name of the expression builder. This value can be specified using the &quot;expressionBuilder&quot;
					to fetch the data requested by the getData action.
					The method must be able to accept an instance of 'com.ibm.commerce.oagis9.datatypes.GetType'
					and return an instance of the ShowXXXDataAreaType for the specific noun that is being
					requested.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1"
				name="description" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					A description of the expression builder.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="1" maxOccurs="1"
				name="data-type-name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
					The name of the data type with which this expression builder definition will be associated.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="1" maxOccurs="1">
				<xsd:sequence>
					<xsd:element minOccurs="1" maxOccurs="1"
						name="class" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
							The fully qualified Java class name of the expression builder. This class
							must have a default constructor.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="1" maxOccurs="1"
						name="method" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
							The method name of the expression builder. This method must accept a 'java.util.Map'
							and return an instance of 'com.ibm.commerce.oagis9.datatypes.ExpressionType'.
							The map is the parameter map which maps names of type String to values of type
							String[]. If there are parameter values for the parameter name, then the String
							array will have a length greater than one.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:sequence>
					<xsd:element minOccurs="1" maxOccurs="1"
						name="expression-template" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
							The expression template that will be used to compose the expression.
							The expression can include substitution parameters of the form $name$ that
							will be replaced with parameter values of the same name. If a parameter name
							has multiple values, only the first value will be used.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1"
						name="expression-language" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
							The expression language for the specified expression template. If this value is
							not specified, then &quot;wcf:XPath&quot; is used.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:choice>
			<xsd:element minOccurs="0" maxOccurs="unbounded"
				name="param">
				<xsd:annotation>
					<xsd:documentation>
					The param element can be used to declare parameters that are expected by
					the expression builder. If one or more value elements are specified as part of the
					declaration, then those values will be passed to the expression builder unless
					the JSP author has explicity used the same parameter name when coding the getData tag.
					In that case, the values specified by the JSP author will be used and the values
					declared here will be ignored.
					Undeclared parameter names can be specified by the JSP author
					and will also be passed to the expression builder.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1"
							name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>
								The name of a parameter that is expected by the expression builder.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element minOccurs="0" maxOccurs="1"
							name="description" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>
								A description of the parameter.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element minOccurs="0" maxOccurs="unbounded"
							name="value" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>
								A default value for the parameter.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>