pipeline {
    agent none
    
        stages {
        stage('checking out') {
            agent { label 'wcsv9' }
            steps { 
             echo "Checking out to Mounted Volume"
	     checkout scm
              
            }
        }
	
            stage('Creating WCB Commerce Build') {
            agent { label 'wcsv9' }
                steps { 
             echo "Building Image in Utility Container"
                    sh 'docker exec -i 950dbbcea50c bash -c  "cd /opt/WebSphere/CommerceServer90/wcbd/ ; ./setenv ; ./wcbd-ant -buildfile wcbd-build.xml -Dbuild.type=local -Dapp.type=$apptype -Dbuild.label=$label -Dwork.dir=/opt/deploy && mv /opt/WebSphere/CommerceServer90/wcbd/dist/server/wcbd-deploy-server-local-"$apptype"-"$label".zip /opt/deploy && rm -rf /opt/WebSphere/CommerceServer90/wcbd/source/demo && rm -rf /opt/WebSphere/CommerceServer90/wcbd/working/* "'
                   
            }
            }
			
           stage('Unpacking Deploy package') {
            agent { label 'wcsv9' }
                steps { 
                            
                   dir ('/opt/wcscode/') {
                   sh 'rm -rf /opt/Deploy/CustDeploy/CustDeploy/*'
		   sh 'unzip wcbd-deploy-server-local-"$apptype"-"$label".zip -d /opt/Deploy/CustDeploy/CustDeploy'
                  
             
              }
                    
            }
            }
		 stage('Updating Image with Changes ') {
            agent { label 'wcsv9' }
                steps { 
                    dir ('/opt/Deploy/CustDeploy/') {
		    
                    sh 'docker build -f Dockerfile-"$apptype" . -t master-node:5000/commerce/"$apptype"-app:"$image"'
                    
                    }
            }
            }	        
		
		stage('Pushing to Repo ') {
            agent { label 'wcsv9' }
                steps { 
                    dir ('/opt/Deploy/CustDeploy/CustDeploy') {
                    sh 'docker push master-node:5000/commerce/"$apptype"-app:"$image"'
		   
                    
                    }
            }
            }
			stage('Updating Pod') {
            agent { label 'wcsv9' }
                steps { 
		   
                    sh 'kubectl set image deployment/demoqaauth"$apptype"-app "$apptype"-app=master-node:5000/commerce/"$apptype"-app:"$image" '
                  
                    
            }
            }
	   
        
		}
            
         
            
        
}
