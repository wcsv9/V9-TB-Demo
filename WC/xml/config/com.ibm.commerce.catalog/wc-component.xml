<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2007, 2017 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<_config:DevelopmentComponentConfiguration
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ibm.com/xmlns/prod/commerce/foundation/config ../xsd/wc-component.xsd "
	xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/foundation/config">
	<_config:database name="java:comp/env/jdbc/WCDataSource" />
	<_config:dataservice
    		dataMediatorType="JDBC"
           	metadataClass="com.ibm.commerce.catalog.facade.server.metadata.CatalogMetadata"
           	maximumPagingResultLimit="5000" maximumPageSize="1000">
		   	<_config:context key="LANG_ID"
                    name="com.ibm.commerce.context.globalization.GlobalizationContext"
                    propertyName="languageId"
                    defaultValue="-1" />

        <_config:context key="CATALOG_ID"
                    name="com.ibm.commerce.catalog.businesscontext.CatalogContext"
                    propertyName="catalogID"
                    defaultValue="-1" />
        <_config:context key="OWNER_ID"
                    name="com.ibm.commerce.catalog.businesscontext.CatalogContext"
                    propertyName="ownerID"
                    defaultValue="-1" />
        <_config:context key="STORE_ID"
                    name="com.ibm.commerce.context.base.BaseContext"
                    propertyName="storeId"
                    defaultValue="-1" />

				<_config:context key="CURRENCY"
                    name="com.ibm.commerce.context.globalization.GlobalizationContext"
                    propertyName="currency"
                    defaultValue="USD" />


            <!-- Mapping for catentry search -->
		<_config:mapping>
			<_config:key name="CatalogEntry" />
			<_config:basetable name="CATENTRY" useAllColumns="true">
				<_config:columns name="PARTNUMBER"
					propertyName="CatalogEntryIdentifier/ExternalIdentifier/PartNumber"  caseSensitive="false"/>
				<_config:columns name="MFPARTNUMBER"
					propertyName="CatalogEntryAttribute/Attributes/mfPartNumber"  caseSensitive="false"/>
				<_config:columns name="MFNAME"
					propertyName="CatalogEntryAttribute/Attributes/mfName"  caseSensitive="false"/>
				<_config:columns name="FIELD1"
					propertyName="CatalogEntryAttribute/Attributes/field1"/>
				<_config:columns name="FIELD2"
					propertyName="CatalogEntryAttribute/Attributes/field2"/>
				<_config:columns name="FIELD3"
					propertyName="CatalogEntryAttribute/Attributes/field3"/>
			    <_config:columns name="FIELD4"
					propertyName="CatalogEntryAttribute/Attributes/field4"/>
                <_config:columns name="FIELD5"
					propertyName="CatalogEntryAttribute/Attributes/field5"/>
				<_config:associatedtable name="CATENTDESC"
					useAllColumns="true">
					<_config:columns name="NAME"
						propertyName="Description/Name"  caseSensitive="false"/>
					<_config:columns name="SHORTDESCRIPTION"
						propertyName="Description/ShortDescription"  caseSensitive="false"/>
					<_config:columns name="PUBLISHED"
						propertyName="Description/Attributes/published"/>
				</_config:associatedtable>
			</_config:basetable>
		</_config:mapping>

	    <!-- Mapping for catgroup search -->
		<_config:mapping>
   			<_config:key name="CatalogGroup" />
			<_config:basetable name="CATGROUP" useAllColumns="true">
				<_config:columns name="IDENTIFIER"
	             		propertyName="CatalogGroupIdentifier/ExternalIdentifier/GroupIdentifier"  caseSensitive="false"/>
	         		<_config:associatedtable name="CATGRPDESC" useAllColumns="true">
					<_config:columns name="NAME"
					propertyName="Description/Name"  caseSensitive="false"/>
	     		      		<_config:columns name="SHORTDESCRIPTION"
		       			propertyName="Description/ShortDescription"  caseSensitive="false"/>
	         		</_config:associatedtable>
			</_config:basetable>
		</_config:mapping>
		
		<_config:mapping>
			<_config:key name="AttributeDictionaryAttribute" />
			<_config:basetable name="ATTR" useAllColumns="true">
				<_config:columns name="IDENTIFIER" 
						propertyName="AttributeIdentifier/ExternalIdentifier/Identifier" caseSensitive="false"/>
				<_config:associatedtable name="ATTRDESC" useAllColumns="true">
					<_config:columns name="NAME" propertyName="AttributeDescription/Name" caseSensitive="false"/>						
					<_config:columns name="LANGUAGE_ID" propertyName="AttributeDescription/language" caseSensitive="false"/>						
				</_config:associatedtable>
			</_config:basetable>
		</_config:mapping>		  

		<_config:mapping>
			<_config:key name="Catalog" />
			<_config:basetable name="CATALOG" useAllColumns="true">
				<_config:columns name="IDENTIFIER" 
						propertyName="CatalogIdentifier/ExternalIdentifier/Identifier" caseSensitive="false"/>
				<_config:associatedtable name="CATALOGDSC" useAllColumns="true">
					<_config:columns name="NAME" propertyName="Description/Name" caseSensitive="false"/>						
					<_config:columns name="LANGUAGE_ID" propertyName="Description/language" caseSensitive="false"/>						
				</_config:associatedtable>
			</_config:basetable>
		</_config:mapping>		  

		<_config:mapping>
		  <_config:key name="CatalogFilter" />
   		<_config:basetable name="CATFILTER" useAllColumns="false">
		    <_config:columns name="IDENTIFIER" caseSensitive="false"
    		  propertyName="CatalogFilterIdentifier/ExternalIdentifier/Identifier" />
   		</_config:basetable>
 		</_config:mapping>

		<_config:mapping>
			<_config:key name="CatgroupExternalContentRel" />
			<_config:basetable name="CATGROUP_EXTERNAL_CONTENT_REL" useAllColumns="true" />
		</_config:mapping>

		<_config:mapping>
			<_config:key name="CatentryExternalContentRel" />
			<_config:basetable name="CATENTRY_EXTERNAL_CONTENT_REL" useAllColumns="true" />
		</_config:mapping>
		
	</_config:dataservice>

	<_config:valuemappingservice>
		<_config:valuemapping externalName="CatalogFilterSelectionTypeMapping" internalName="CatalogFilterSelectionTypeMapping">
			<_config:valuemap externalValue="Exclude" internalValue="0" />
			<_config:valuemap externalValue="Include" internalValue="1" />
			<_config:valuemap externalValue="ExcludeImplicitSKU" internalValue="2" />
			<_config:valuemap externalValue="IncludeImplicitSKU" internalValue="3" />
		</_config:valuemapping>
		
		<_config:valuemapping externalName="CatalogFilterConditionRelationMapping" internalName="CatalogFilterConditionRelationMapping">
			<_config:valuemap externalValue="and" internalValue="0" />
			<_config:valuemap externalValue="or" internalValue="1" />
		</_config:valuemapping>

		<_config:valuemapping externalName="WebContentTypeMapping" internalName="WebContentTypeMapping">
			<_config:valuemap externalValue="HTML" internalValue="text/html" />
			<_config:valuemap externalValue="PDF" internalValue="application/pdf" />
			<_config:valuemap externalValue="XML" internalValue="application/xml" />
			<_config:valuemap externalValue="WORD" internalValue="application/msword" />
			<_config:valuemap externalValue="PPT" internalValue="application/mspowerpoint" />
			<_config:valuemap externalValue="EXCEL" internalValue="application/msexcel" />
		</_config:valuemapping>

	</_config:valuemappingservice>


   <_config:authorization-configuration>
		<_config:protectable-proxy protectable="com.ibm.commerce.catalog.facade.server.authorization.CatalogTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.CatalogType" />
		<_config:protectable-proxy protectable="com.ibm.commerce.catalog.facade.server.authorization.CatalogEntryTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.CatalogEntryType" />
		<_config:protectable-proxy protectable="com.ibm.commerce.catalog.facade.server.authorization.CatalogGroupTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.CatalogGroupType" />
		<_config:protectable-proxy protectable="com.ibm.commerce.catalog.facade.server.authorization.AttributeDictionaryTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.AttributeDictionaryType" />
		<_config:protectable-proxy protectable="com.ibm.commerce.catalog.facade.server.authorization.AttributeDictionaryAttributeTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.AttributeDictionaryAttributeType" />
		<_config:protectable-proxy protectable="com.ibm.commerce.catalog.facade.server.authorization.AttributeDictionaryAttributeGroupTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.AttributeDictionaryAttributeGroupType" />
		<_config:protectable-proxy protectable="com.ibm.commerce.catalog.facade.server.authorization.AssociationTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.AssociationType" />	
		<_config:protectable-proxy
			protectable="com.ibm.commerce.catalog.facade.server.authorization.CatalogNavigationViewTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.CatalogNavigationViewType" />
			
		<_config:protectable-proxy 
			protectable="com.ibm.commerce.catalog.facade.server.authorization.CatalogFilterTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.CatalogFilterType" />
			
		<_config:protectable-proxy 
			protectable="com.ibm.commerce.catalog.facade.server.authorization.CatalogEntryFilteringTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.CatalogEntryFilteringType" />
			
		<_config:protectable-proxy 
			protectable="com.ibm.commerce.catalog.facade.server.authorization.SEOURLTypeProtectableProxy"
			interfacename="com.ibm.commerce.foundation.common.datatypes.SEOURLType" />
		<_config:protectable-proxy 
			protectable="com.ibm.commerce.catalog.facade.server.authorization.SEOPropertiesTypeProtectableProxy"
			interfacename="com.ibm.commerce.foundation.common.datatypes.SEOPropertiesType" />		
		
		<_config:protectable-proxy 
			protectable="com.ibm.commerce.catalog.facade.server.authorization.CatalogDescriptionOverrideTypeProtectableProxy"
			interfacename="com.ibm.commerce.catalog.facade.datatypes.CatalogDescriptionOverrideType" />					

		<_config:protectable-proxy 
			  protectable="com.ibm.commerce.catalog.facade.server.authorization.ExternalContentReferenceTypeProtectableProxy"
			interfacename="com.ibm.commerce.foundation.common.datatypes.ExternalContentReferenceType"/>					

	
			
	</_config:authorization-configuration>
	<!-- 
		This config grouping controls the way sales category is linked. 

		If this property is defined and is set to true, then the link process will be run asynchronously as an scheduler job. 
		The link operation is returned immediately so that CMC user is not blocked. However, if there is problem in the link process, 
		CMC user will not see the error in CMC UI. They have to check Scheduler job tool or check in the log file.

		If this property is not defined or set to false, then the link process will be running like before. 
		CMC user has to wait until the link process finish before they can do other operations. 
		If the linked category contains large number of sub categories and cataog entries, it may take long time to return.
	 -->
	<!-- 
	<_config:extendedconfiguration>
		<_config:configgrouping name="SalesCatalogConfiguration">
			<_config:property name="AsynchronousSalesCategoryLink" value="true" />
		</_config:configgrouping>
	</_config:extendedconfiguration>
	 -->
	 
	<_config:extendedconfiguration>
	
		<_config:configgrouping name="LoadOnStartup">
			<!-- 
				Defines a list of modules to be called at server start up, with the name of the property being the class name for
				implementing the com.ibm.commerce.foundation.internal.server.services.bootstrap.LoadOnStartup interface.
				Its value field defines whether this module should be loaded or not. 
			  -->
			<_config:property name="com.ibm.commerce.catalog.facade.server.services.bootstrap.SearchServiceWarmStarter" value="true" />
		</_config:configgrouping>
				
		<_config:configgrouping name="SearchConfiguration">

			<!-- 
				Start up
			  -->
			  
			<!-- Allow WC server to issue a search request to warm start the SOLR server;
			     setting to false will disable warm starting SOLR server. -->
			<_config:property name="WarmStartSearchServer" value="false" />
			<!-- Reset any pending indexing lock at server startup. Normally this kind of cleanup operation
			     is not necessary unless a prior indexing process failed unexpectedly and blocks all subsequent
			     indexing requests to start. -->
			<_config:property name="WarmStartResetIndexingLock" value="true" />
					
			<!-- 
				Server connectivity
			  -->
			  
			<!-- Maximum number of indexing retries -->
			<_config:property name="IndexingRetries" value="10" />
			<!-- Time interval between indexing retry, unit in second -->
			<_config:property name="IndexingRetryInterval" value="60" />
			<!-- Data import handler timeout, unit in second -->
			<_config:property name="IndexingTimeout" value="150" />
			<!-- Time interval between each polling for replication status on slave servers, unit in second -->
			<_config:property name="ReplicationPollingInterval" value="5" />
			<!-- Connection timeout for the polling request for replication status, unit in second -->
			<_config:property name="ReplicationPollingConnectionTimeout" value="15" />
			
			<!-- 
				Search Term Association 
			 -->
			 
			<!-- Maximum number of synonym expanded predicates allowed within each search operation -->
			<_config:property name="SynonymExpansionThreshold" value="300" />

			<!-- 
				Search rule
			 -->
			 
			<!-- 
				This configuration defines whether to allow search rule with filtering conditions to work with
				product sequencing during category navigation.  When enabled, search rule for all keywords
				can be used for category navigation and	products returned will be ordered according to their
				sequence defined at that category.  Default is false.
				
				Limitation: because sorting override ranking at runtime, search rule with boosting and relevancy
				ranking criteria will be ignored.  Only search rule with filtering conditions can be used with
				product sequencing.
				
				Note: in order to trigger search rule for all keywords during category navigation, a search term
				'*' should be added to the browse query request.
			-->
			<_config:property name="CombineFilterRuleWithProductSequencing" value="false" />
			
			 <!-- 
			MaximumItemsInProductDisplayConfiguration
			
			Maximum of 500 products' display properties can be saved into the DB tables, per category. If a request contains 
			more than this default number of products, only the first 500 products' display properties will be saved. 
			 -->
			<_config:property name="MaximumItemsInProductDisplayConfiguration" value="500" />
			
			<!-- 
				Index synchronization 
			 -->
			 
			<!-- Pre-processor to be executed in a multi-threaded mode -->
			<_config:property name="MultiThreadedIndexPreprocessing" value="false" />
			<!-- Time interval in milliseconds between each indexing status query when using DIH -->
			<_config:property name="IndexingStatusCheckInterval" value="10000" />
			<!-- Maximum number of delta updates that can be perform without a full re-indexing -->
			<_config:property name="DeltaIndexingThreshold" value="10000" />
			<!-- When the number of delta updates exceeds this threshold, a warning will be 
			     displayed at the store preview header -->
			<_config:property name="IndexingWarningThreshold" value="1000" />
			<!-- Maximum amount of time (in minutes) to allow a lock to be placed to an index --> 
			<_config:property name="IndexingMaximumLockTime" value="720" />
			<!-- Maximum amount of time (in minutes) each thread is allowed to use for indexing each core --> 
			<_config:property name="MaximumThreadTimeForIndexing" value="-1" />
			<!-- do a *:* query after build index to valid index --> 
			<_config:property name="ValidateIndexAfterBuild" value="false" />
			<!-- if to skip the unstructured index when launch preview and show facet from CMC-->
			<_config:property name="IndexUnstructured" value="true" />
			<!-- if to to invoke the index replication in UpdateSearchIndex command -->
			<_config:property name="InvokeIndexReplication" value="false" />
			<!-- if the value set to true, re-indexing will be disable from the Management Center 
			   for following cases:
			   1. Store preview
			   2. Show facets (catalog entry index)
			   3. Task group commit (with workspace enabled)
			   
			   When this property is not defined, the default value is false
			-->
			<_config:property name="DisableIndexBuildFromCMC" value="false" />	
					
			<!-- 
				DynaCache invalidation for storefront cached content
			 -->
			 
			<!-- 
				Invalidation identifier template for CatalogEntry, CatalogGroup, and StoreHeader objects, with each
				identifier separated by	a comma (,).  In order to automate the cache invalidation for storefront
				cached content using DynaCache as part of the search re-indexing procedure, the following guideline
				must be followed:
				
				 - define a cache policy (in cachespec.xml) for a JSP page with the proper dependency identifier
				   for use with search index emergency (delta) update.
				   
				   For example, in order to invalidate the ProductDisplay page given a catalog entry identifier:
				    
					   <dependency-id>ProductDisplay:productId:langId
						  <component id="" ignore-value="true" type="pathinfo">
							 <required>true</required>
							 <value>/ProductDisplay</value>
						  </component>
						  <component id="productId" type="parameter">
						     <required>true</required>
						  </component>
						  <component id="DC_lang" type="attribute">
							 <required>true</required>
						  </component>
					   </dependency-id>
					   
				   For example, in order to invalidate the CategoryDisplay page given a catalog group identifier:
				   
					   <dependency-id>CategoryDisplay:categoryId:langId
						  <component id="" ignore-value="true" type="pathinfo">
							 <required>true</required>
							 <value>/CategoryDisplay</value>
							 <value>/SearchDisplay</value>
						  </component>
						  <component id="categoryId" type="parameter">
						     <required>true</required>
						  </component>
						  <component id="DC_lang" type="attribute">
							 <required>true</required>
						  </component>
					   </dependency-id>
					   
				   For example, in order to invalidate the TopCategoriesDisplay page:
				   
					   <dependency-id>TopCategoriesDisplay:langId
						  <component id="" ignore-value="true" type="pathinfo">
							 <required>true</required>
							 <value>/TopCategoriesDisplay</value>
						  </component>
						  <component id="DC_lang" type="attribute">
							 <required>true</required>
						  </component>
					   </dependency-id>
					   
				   For example, in order to invalidate the Department navigation menu:
				  
			           <dependency-id>StoreHeader:storeId:catalogId
						  <component id="" ignore-value="true" type="pathinfo">
							 <required>true</required>
							 <value>/DepartmentDropdownViewRWD</value>
						  </component>
						  <component id="storeId" type="parameter">
							 <required>true</required>
						  </component>
						  <component id="catalogId" type="parameter">
							 <required>true</required>
						  </component>
					   </dependency-id>						
					   
				 - define a corresponding invalidation identifier to be generated by providing a template
				   for the following three properties in this wc-component.xml file, for example:
				   
				   		<_config:property name="CacheInvalidationForCatalogEntry"
				   					 	  value="ProductDisplay:productId:langId:$catEntryId$:$langId$,CategoryDisplay:categoryId:langId:$catGroupId$:$langId$" />
				   
				   This CatalogEntry invalidation template provided above includes two templates, separated by a comma (,):
				    - the first template is to invalidate all related ProductDisplay pages
				    - the second template is used for invalidating its immediate parent categories across all catalogs
				   
				  		<_config:property name="CacheInvalidationForCatalogGroup"
				   						  value="CategoryDisplay:categoryId:langId:$catGroupId$:$langId$,TopCategoriesDisplay:langId:$langId$" />
				   
				   Similar to the product related invalidation template, the above CatalogGroup invalidation template
				   also contains two invalidation templates
				    - the first template is to invalidate the CategoryDisplay for the current category and all its
				      immediate parent categories across all catalogs
				    - the second template is used for invalidating another related display, called TopCategoriesDisplay.
				      This TopCategoriesDisplay is typically used in the Home page where the affect category may show up. 

				  		<_config:property name="CacheInvalidationForStoreHeader"
				   						  value="StoreHeader:storeId:catalogId:$storeId$:$catalogId$" />
				   
				   The above StoreHeader invalidation template is used to automate the cache invalidation for storefront
				   cached content using DynaCache as part of the search re-indexing procedure.
				   
				The following is a list of pre-defined context variables that can be used in the "CacheInvalidationForCatalogEntry"
				invalidation template:

			     - storeId    = internal store identifier for the modifier entry
				 - catalogId  = internal catalog identifier for the modifier entry
				 - catEntryId = internal identifier for the modified catalog entry
				 - catGroupId = internal identifier for its immediate parent category across all catalogs
				 - langId     = internal language identifier for the modifier entry
				 
				The following is a list of pre-defined context variables that can be used in the "CacheInvalidationForCatalogGroup"
				invalidation template:

				 - storeId    = internal store identifier for the modifier entry
				 - catalogId  = internal catalog identifier for the modifier entry
				 - catGroupId = internal identifier for the modified catalog group,
				 				as well as its immediate parent category across all catalogs
				 - langId     = internal language identifier for the modifier entry
				 
				The following is a list of pre-defined context variables that can be used in the "CacheInvalidationForStoreHeader"
				invalidation template:

				 - storeId    = internal store identifier for the modifier entry
				 - catalogId  = internal catalog identifier for the modifier entry
				 - langId     = internal language identifier for the modifier entry
			 -->
			<_config:property name="CacheInvalidationForCatalogEntry"
			                  value="productId:$catEntryId$,CategoryDisplay:storeId:categoryId:$storeId$:$catGroupId$" />
			<_config:property name="CacheInvalidationForCatalogGroup"
			                  value="CategoryDisplay:storeId:categoryId:$storeId$:$catGroupId$,categoryId:$catGroupId$" />
			<_config:property name="CacheInvalidationForStoreHeader"
			                  value="StoreHeader:storeId:catalogId:$storeId$:$catalogId$,StoreHeader:storeId:$storeId$" />
			<!-- 
				Full cache invalidation - this is a special cache invalidation operator for full cache invalidation.
				When the search runtime determines that a full cache invalidation is necessary and this value
				"CacheInvalidationForAll" is set (default is set to "clearall"), then this value will be set into
				the CACHEIVL.DATA_ID in order to request all cache to be cleared.  However, if this value is not set
				or left as an empty string (""), then no full cache invalidation will be performed.
				Note: in order to allow full cache invalidation to be performed through the DynaCacheInvalidationCmd
				scheduler command, ensure that "enableRefreshRegistry=false" is passed in as the one of the job
				parameters.
			 -->
			<_config:property name="CacheInvalidationForAll" value="clearall" />
			<!-- 
				Cache invalidation delay - in order to determine a reasonable amount of delay, in milliseconds, before the
				cache invalidation kicks in after each search re-indexing, there are the four factors that needs to be
				considered: 
				 - the time of the next re-indexing scheduler command will be executed, e.g. in 5 minutes
				 - the amount of time approximately that the re-indexing may take to completion, e.g 2 minutes
				 - the next replication time between the production search index and the Repeater, e.g. 1 minute
				 - the amount of time approximately that the index replication may take to completion, e.g. 3 minutes
				In this given example above, the estimated invalidation delay should be the total of 5, 2, 1, and 3 minutes,
				which equals to 11 minutes, or 660000 milliseconds.  Default is 0 - meaning to disable manual delay override
				and automatically synchronize with the search index replication.  In other words, all corresponding 
				dependencies for the updated entries will be invalidated immediately after index replication is completed. 
			 -->
			<_config:property name="CacheInvalidationDelay" value="120000" />

			<!-- 
				Statistics
			 -->
			 
			<!-- Batch processing size for capturing search statistics, unit is the number of cached entries -->
			<_config:property name="SearchStatisticsBatchInsertSize" value="10000" />
			<!-- Time interval between batch processing updates, unit in second -->
			<_config:property name="SearchStatisticsUpdateInterval" value="600" />
			<!-- Track search rule statistics up to only the first number of search result pages -->
			<_config:property name="SearchStatisticsResultPagesTrackingThreshold" value="1" />
						
			<!-- 
				Spell correction
			 -->
			 
			<!-- 
				SpellCheckMaxResultsForSuggestion
				
				This setting is used for defining the Solr spellcheck parameter, spellcheck.maxResultsForSuggest.
				
				This parameter defines the maximum number of results the query can return while still triggering
				spelling suggestions (and collations, if using "spellcheck.collate"). Suggestions will not be
				generated if the query returns more results than this value. When using "spellcheck.extendedResults",
				this value is also the threshold for determining if the "correctlySpelled" flag is false.
				
				If "spellcheck.maxResultsForSuggest" is not specified, the default behavior is to generate
				suggestions and to report "correctlySpelled" as "false" if at least 1 term is not in the index
				regardless of the number of results returned. This parameter is especially useful in conjunction
				with "spellcheck.alternativeTermCount" to generate "Did You mean?"-style suggestions for
				low hit-count queries.
			 -->
			<_config:property name="SpellCheckMaxResultsForSuggestion" value="3" />
			<!-- 
				SpellCheckAlternativeTermCount
				
				This setting is used for defining the Solr spellcheck parameter, spellcheck.alternativeTermCount.
				
				This parameter defines the maximum number of suggestions to return for terms that exist in the index.
				Specifying this instructs the spellchecker to try and make suggestions for every term in the query.
				This differs from the "spellcheck.onlyMorePopular" option in that suggested terms need not be
				"more popular".
			 -->
			<_config:property name="SpellCheckAlternativeTermCount" value="2" />
			<!--
				SpellCheckOnlyMorePopular
				
				This setting is used for defining the Solr spellcheck parameter, spellcheck.onlyMorePopular.

				This parameter only returns suggestions that result in more hits for the query than the existing
				query. Note that even if the given query term is correct, a more popular suggestion will be
				returned (if one exists).
			 -->
			<_config:property name="SpellCheckOnlyMorePopular" value="" />
			<!--
				SpellCheckMaxCollations
				
				This setting is used for defining the Solr spellcheck parameter, spellcheck.maxCollations.
				
				This parameter defines the maximum number of collations to return. Defaults to 1.
			 -->
			<_config:property name="SpellCheckMaxCollations" value="1" />
			<!--
				SpellCheckMaxCollationTries
				
				This setting is used for defining the Solr spellcheck parameter, spellcheck.maxCollationTries.
				
				This parameter defines the maximum number of collation possibilities to try before giving up.
				Lower values ensure better performance. Higher values may be necessary to find a collation that
				can return results. Defaults to 0 (do not check collations).
			 -->
			<_config:property name="SpellCheckMaxCollationTries" value="2" />
						
			<!-- 
			 	Special character handling
			 	
				Lucene escape character list: + - && || ! ( ) { } [ ] ^ " ~ * ? : \ 
				eDismax escape character list can be a lot smaller(i.e, + - ), however we will maintain
				a single large Lucene character set because we share it with the filter queries which 
				use the Lucene query syntax
				EscapePatterns uses full characters match
				IgnorePatterns uses regular expression match
				StopPatterns uses regular expression match 
	
			Following is the sample list of Lucene query parser escape characters:
			
			<_config:property name="EscapePatterns" value="\,+,-,&amp;&amp;,~,||,(,),{,},[,],&quot;,^,!,:,AND,OR,NOT" />
			
			Following is the sample list of eDismax query parser escape characters:
			
			<_config:property name="EscapePatterns" value="+,-,&quot;" />

			-->
			
			<_config:property name="EscapePatterns" value="\,+,-,&amp;&amp;,~,||,(,),{,},[,],&quot;,^,!,:,AND,OR,NOT" />
			<_config:property name="IgnorePatterns" value="" />
			<!-- REGULAR Expression escape .|*?+(){}[]^$\ -->
			<_config:property name="StopPatterns" value="[\\*\\?]+,&apos;&apos;|&quot;&quot;,.*[\\~\|].*" />
			<!--  keywords with leading wildcard characters will be updated to not contain them   -->
		 	<_config:property name="IgnoreLeadingPatterns" value="[\\*\\?]+"/>
			<!-- ; splits different sections. Each section related fields will be separated by , -->
			<_config:property name="RequestFields" value="searchTerm,filterTerm,manufacturer,minPrice,maxPrice,categoryId" />
			
			<!-- 
				Query function
			 -->
			 
			<!--
				BoostByRankInCatalogAndCategory
				
				Formula for boosting by product/category sequence: rank
				Param 1: internal catalog identifier
				Param 2: internal category identifier
			 -->
			<_config:property name="BoostByRankInCatalogAndCategory" value="getSequenceByCatalogAndCategory(sequence,'%s','%s')" />
			<!--
				FilterInventoryByStoreAndFulfillmentCenter
				
				Formula for retrieving inventory count by physical store  using the single-value indexing design
				Param 1: online store internal identifier
				Param 2: physical store internal identifier
				Param 3: range filter [%s TO %s]
				
				Note: this function can only be used for single-value option on Inventory index
			 -->
			<_config:property name="FilterInventoryByStoreAndFulfillmentCenter" value="inv_strlocqty_%s_%s:%s" />
			<!--
				OnlinePhysicalStoreQualifier
				
				A static identifier for an online store virtual physical store field name in solr index. There is no actual physical store 
				associated to an online store. 			
				
				Note: This property will only be needed when DOM inventory model is used. 
			 -->
			<_config:property name="OnlinePhysicalStoreQualifier" value="OnlineStore" />
			<!--
				ConvertPhysicalStoreToFulfillmentCenter
				
				This flag controls whether or not the identifier passed in through _wcf.search.store parameter
				is a store location identifier and should be converted into a fulfillment center identifier to be used
				with the inventory search index.  For example, set this option to "true" when used with non-ATP inventory
				model, or set this option to "false" when used with DOM inventory model.
			 -->
			<_config:property name="ConvertPhysicalStoreToFulfillmentCenter" value="true" />
			
			<!-- 
				Facet management
			 -->
			 
			<!-- 
				The allowed table SRCHATTRPROP propertyname types to be displayed and managed in the "Show Facets" feature in the managment center.
			 -->
			<_config:property name="allowedFacetPropertynames" value="facet,facet-category,facet-range,facet-classicAttribute" />
			<!-- The maximum number of facet fields to request in the FacetHelper.  This is configurable to avoid Solr URI length limit errors -->
			<_config:property name="maximumFacetFieldsToRequest" value="200" />
			<!-- Display only child category facets of the browsed category. The sub-categories of the child categories will not be faceted.  -->
			<_config:property name="displayChildCategoriesOnly" value="false"/>
			
			<!-- 
				facetConfigurationDefaultForLimit
				
				This configuration defines the limit value for the facet configuration parameter to
				be used in a native Solr expression, facet.limit.  Defaults to -1 if not specified.
				The Search runtime will not specify this value if the detected or specified value for
				any given facet is the same as the default.  This is done to reduce the overall length
				of the Solr expression.
				
				Note: it is important to ensure this default is the same as that defined in solrconfig.xml.
				      See https://wiki.apache.org/solr/SimpleFacetParameters#facet.limit for details.
			 -->
			<_config:property name="facetConfigurationDefaultForLimit" value="-1"/>
			
			<!-- 
				facetConfigurationDefaultForSort
				
				This configuration defines the sort value for the facet configuration parameter to
				be used in a native Solr expression, facet.sort.  Defaults to count if not specified.
				The Search runtime will not specify this value if the detected or specified value for
				any given facet is the same as the default.  This is done to reduce the overall length
				of the Solr expression.
				
				Note: it is important to ensure this default is the same as that defined in solrconfig.xml.
				      See https://wiki.apache.org/solr/SimpleFacetParameters#facet.sort for details.
			 -->
			<_config:property name="facetConfigurationDefaultForSort" value="count"/>
			
			<!-- 
				facetConfigurationDefaultForMinimumCount
				
				This configuration defines the minimum value for the facet configuration parameter to
				be used in a native Solr expression, facet.mincount.  Defaults to 0 if not specified.
				The Search runtime will not specify this value if the detected or specified value for
				any given facet is the same as the default.  This is done to reduce the overall length
				of the Solr expression.
				
				Note: it is important to ensure this default is the same as that defined in solrconfig.xml.
				      See https://wiki.apache.org/solr/SimpleFacetParameters#facet.mincount for details.
			 -->
			<_config:property name="facetConfigurationDefaultForMinimumCount" value="0"/>
			
			<!-- 
				Search runtime
			 -->
			 
			<!-- 
				This configuration defines whether to use new relevancy keyword search function or use previous keyword search function. 
				Attentions: if set the value to "true", please don't forget to update "EscapePatterns" values to corresponding parser.
			-->
			<_config:property name="BackCompatibleKeywordSearch" value="false" />

			<!-- 
				IndexPublishedOnly
				
				This configuration defines whether to index catalog entries only from published categories.
				Default is false.
			 -->
			<_config:property name="IndexPublishedOnly" value="false" />
			
			<!-- 
				EnableDeepCategoryUnpublish
				
				This configuration defines whether to enable the deep category un-publish feature.
				Default is false. Change this to "true" if required to enable deep category un-publish feature.
			 -->
			<_config:property name="EnableDeepCategoryUnpublish" value="false" />
			<!--
				DisplayPublishedOnly
				
				This configuration allow only products from published categories to be displayed
				in the keyword search result when deep category un-publish feature is enabled.
				Default is false.
				
				Note: deep category un-published is not enabled by default and this configuration
				      has no effect when the deep category un-published feature is disabled.
			 -->
			<_config:property name="DisplayPublishedOnly" value="false" />
			
			<!-- 
				EnableDeepProductSequence
				
				This configuration defines whether to enable the deep product sequence feature.
				Default is false.
			 -->
			<_config:property name="EnableDeepProductSequence" value="false" />
			
			<!-- 
				IndexListPrice
				
				This configuration defines whether to index list prices.
				Default is true. Change this to "false" to disable indexing list prices.
			 -->
			<_config:property name="IndexListPrice" value="true" />

			<!-- Dynamic Catalog Entry Recommendations -->
			<!-- This is the search profile used in the dynamic catalog entry recommendation configuration -->
			<_config:property name="dynamicCatalogEntryRecommendation_searchProfile" value="IBM_dynamicCatalogEntryRecommendation" />
			
			<!--
				Search profiles global defaults
			 -->
			 
			<!--
				Requests search server to generate additional debug messages.
				Defaults to false.

				This property acts as the default value for all search profile setting like this
				<_config:profile>
					<_config:query>
						<_config:param name="debug" value="false"/>
					</_config:query>
				</_config:profils>
				in the wc-search.xml file
			-->
			<_config:property name="SearchProfilesDebug" value="false" />
			
			<!--
				Determines the level of details for preview. Defaults to 1.
				0: Minimal  - includes marketing rules
				1: Summary  - includes marketing rules, index status
				2: Detailed - includes marketing rules, index status, query explain

				This property acts as the default value for all search profile setting like this
				<_config:profile>
					<_config:query>
						<_config:param name="preview" value="1"/>
					</_config:query>
				</_config:profile>
				in the wc-search.xml file				
			-->
			<_config:property name="SearchProfilesPreview" value="1" />
			
			<!--
				Determines the display mode for showing price in storefront. Defaults to 1.
				0: Computed
				   - summary: prices only for the current page are calculated at runtime
				   - hide price facets
				   - show computed price in each result
				   - hide price range search in Advanced Search page
				   - usage: prices are not populated in the search index
				1: Indexed
				   - summary: all prices are retrieved from search index
				   - show price facets with price range configured in facet configuration table
				   - show indexed price in each result
				   - show price range search in Advanced Search page
				   - usage: prices are populated in the search index
				2: Mixed
				   - summary: search result contains computed prices, while price facets use indexed prices
				   - show price facets with price range configured in facet configuration table
				   - show computed price in each result
				   - show price range search in Advanced Search page
				   - usage: prices for all supported currencies are populated in the search index

				This property acts as the default value for all search profile setting like this
				<_config:profile>
					<_config:query>
						<_config:param name="price" value="1"/>
					</_config:query>
				</_config:profile>
				in the wc-search.xml file				
			-->
			<_config:property name="SearchProfilesPrice" value="1" />	
					
			<!--
				Requests search server to capture search related statistics in the WC runtime.
				When this option is enabled, statistical data is cached in memory until the
				batch size (defined as SearchStatisticsBatchInsertSize in wc-component.xml
				under ExtendedConfiguration) has been reached. This is done to minimize the
				amount of I/O traffic caused as a result of search statistics gathering.
				Defaults to false.

				This property acts as the default value for all search profile setting like this
				<_config:profile>
					<_config:query>
						<_config:param name="statistics" value="false"/>
					</_config:query>
				</_config:profils>
				in the wc-search.xml file				
			-->
			<_config:property name="SearchProfilesStatistics" value="false"/>
			<!--
				This flag will determine whether fast flow is enabled or not, if fast flow is enabled and the entitlement expression is *:*(Apply to all), 
				then entitlement solr call will be skipped and assume all specified category/product was entitled.
			
			
			-->
			<_config:property name="FastFlowForEntitlement" value="true"/>
			
			<_config:property name="NavigationTrigger" value="_nav_"/>
					
			<!-- 
				IndexResultGrouping
				
				This configuration defines which preprocessing query to use when processing attribute data. When set,
				
				1. It will disable rolling up of defining attribute dictionary attribute values from ItemBeans to ProductBeans.
				2. It will enable rolling down of descriptive attributes values from ProductBeans into their Item beans.				
				
				Default is false.
			 -->
			<_config:property name="IndexResultGrouping" value="false"/>
			
			<!-- 
				DropTempTable
				Indicates whether to drop tables when you preprocess the search index.
				By default a table truncate would happens every time preprocess runs.
				
				Default value is false.
			-->			
			<_config:property name="DropTempTable" value="false"/>
						
		</_config:configgrouping>

		<!--
			SearchServerSetting
			
			This section defines the communication settings with the Search server.
		 -->
		<_config:configgrouping name="SearchServerSetting">
		
			<!--
				SearchServerSetting/hostnameReference = [string|localhost]
				 
				Specify the configured name binding in WAS for the hostname of the Search server that
				provides with REST services. For example,
				
		        server or cluster scope: com.ibm.commerce.foundation.server.services.search.hostname
		        cell scope: cell/persistent/com.ibm.commerce.foundation.server.services.search.hostname
			 -->
			<_config:property name="SearchServerSetting/hostnameReference" value="com.ibm.commerce.foundation.server.services.search.hostname"/>
			
			<!--
				SearchServerSetting/securedPreviewPortReference = [number|443]
				 
				Specify the configured name binding in WAS for the port number on the Search server
				for establishing a secured preview session.  For example,
				
		        server or cluster scope: com.ibm.commerce.foundation.server.services.search.preview.port
		        cell scope: cell/persistent/com.ibm.commerce.foundation.server.services.search.preview.port
			 -->
			<_config:property name="SearchServerSetting/securedPreviewPortReference" value="com.ibm.commerce.foundation.server.services.search.preview.port"/>
			
			<!--
				SearchServerSetting/nonSecuredPreviewPortReference = [number|80]
				 
				Specify the configured name binding in WAS for the port number on the Search server
				for establishing a non-secured preview session.  For example,
				
		        server or cluster scope: com.ibm.commerce.foundation.server.services.search.preview.port.nonsecured
		        cell scope: cell/persistent/com.ibm.commerce.foundation.server.services.search.preview.port.nonsecured
			 -->
			<_config:property name="SearchServerSetting/nonSecuredPreviewPortReference" value="com.ibm.commerce.foundation.server.services.search.preview.port.nonsecured"/>
			
			<!--
				SearchServerSetting/RESTPortReference = [number|80]
				 
				Specify the configured name binding in WAS for the port number on the Search server that
				provides with REST services. For example,
				
		        server or cluster scope: com.ibm.commerce.foundation.server.services.search.port
		        cell scope: cell/persistent/com.ibm.commerce.foundation.server.services.search.port
			 -->
			<_config:property name="SearchServerSetting/RESTPortReference" value="com.ibm.commerce.foundation.server.services.search.port"/>
			
			<!--
				SearchServerSetting/RESTConextPath = [string]
				 
				Specify the context path for REST service on the Search server.
			 -->
			<_config:property name="SearchServerSetting/RESTConextPath" value="/search/resources"/>
			
			<!--
				SearchServerSetting/RESTPreviewConextPath = [string]
				 
				Specify the preview context path for REST service on the Search server.
			 -->
			<_config:property name="SearchServerSetting/RESTPreviewConextPath" value="/search/previewresources"/>
			
						<!--
				SearchServerSetting/RESTIndexingHostnameReference = [string|localhost]
				 
				Specify the configured name binding in WAS for the hostname of the indexing Search server.
				For example,
				
		        server or cluster scope: com.ibm.commerce.foundation.server.services.search.indexing.hostname
		        cell scope: cell/persistent/com.ibm.commerce.foundation.server.services.search.indexing.hostname
			 -->
			<_config:property name="SearchServerSetting/RESTIndexingHostnameReference" value="com.ibm.commerce.foundation.server.services.search.indexing.hostname"/>
			
			<!--
				SearchServerSetting/RESTIndexingPortNumberReference = [number|3738]
				 
				Specify the configured name binding in WAS for the port number on the indexing Search server.
				For example,
				
		        server or cluster scope: com.ibm.commerce.foundation.server.services.search.indexing.port
		        cell scope: cell/persistent/com.ibm.commerce.foundation.server.services.search.indexing.port
			 -->
			<_config:property name="SearchServerSetting/RESTIndexingPortNumberReference" value="com.ibm.commerce.foundation.server.services.search.indexing.port"/>
			
			<!--
				SearchServerSetting/IndexingRESTConextPath = [string]
				 
				Specify the context path for REST service on the Search server.
			 -->
			<_config:property name="SearchServerSetting/RESTIndexingConextPath" value="/search/admin/resources/index"/>
				
		</_config:configgrouping>
				
		<_config:configgrouping name="AccessProfileToSearchProfileMapping">
		  <_config:property name="IBM_Store_Summary" value="IBM_findCatalogEntrySummary"/>
		  <_config:property name="IBM_Store_Details" value="IBM_findCatalogEntryDetails"/>
		  <_config:property name="IBM_Store_CatalogEntryAttachments" value="IBM_findCatalogEntryAttachments"/>
		  <_config:property name="IBM_Store_CatalogEntryDetailsWithAttachments" value="IBM_findCatalogEntryDetailsWithAttachments"/>
		  <_config:property name="IBM_Store_CatalogEntryDetailsWithComponentsAndAttachments" value="IBM_findCatalogEntryDetailsWithComponentsAndAttachments"/>
		  <_config:property name="IBM_Store_CatalogEntryDetailsWithMerchandisingAssociations" value="IBM_findCatalogEntryDetailsWithMerchandisingAssocDetails"/>
		  <_config:property name="IBM_Store_All" value="IBM_findCatalogEntryAll"/>
		  <_config:property name="IBM_Store_CatalogEntryPrice" value="IBM_findCatalogEntryPrice"/>
		  <_config:property name="IBM_Store_CatalogEntryPriceWithAttributes" value="IBM_findCatalogEntryPriceWithAttributes"/>
		</_config:configgrouping>
		
		<!-- 
			 The following configuration group maps access profiles to SEO filter classes. This mapping is used by the GetCatalogNavigationView service
			 to populate SEO TMD into the CatalogNavigationView noun. This mapping is used irrespective of Search being enabled or disabled. 
			 
			 If Search is enabled, then it is possible to add a Search result filter for adding SEO TMD in wc-search.xml file. In such a scenario, the
			 SEO filter specified in wc-search.xml file for the corresponding search profile will take precedence over the SEO filter specified in the 
			 access profile to SEO filter mapping below. 
			 
			 If you want to add SEO filter at an access profile level, then the name of the property should be the access profile, e.g, 
			 IBM_Store_Summary. In this case the SEO filtering will be applied for all IBM_Store_Summary access profiles irrespective of
			 the search profile.

			 If you want to add SEO filter at a search profile level, then the name of the property should be access profile + search profile, e.g, 
			 IBM_Store_Summary+IBM_findCatalogEntrySummary. In this case the SEO filtering will be applied only for the access profile IBM_Store_Summary
			 having a search profile IBM_findCatalogEntrySummary.
		-->
		<_config:configgrouping name="AccessProfileToSEOFilterMapping">
			<_config:property name="IBM_Store_Summary+IBM_findCatalogEntrySummary" value="com.ibm.commerce.catalog.facade.server.services.search.metadata.SearchCatalogNavigationViewSEOTitleMetaDataFilter"/>
			<_config:property name="IBM_Store_Details+IBM_findCatalogGroupDetails" value="com.ibm.commerce.catalog.facade.server.services.search.metadata.SearchCatalogNavigationViewSEOTitleMetaDataFilter"/>
			<_config:property name="IBM_Store_Summary_SEO" value="com.ibm.commerce.catalog.facade.server.services.search.metadata.SearchCatalogNavigationViewSEOTitleMetaDataFilter"/>
			<_config:property name="IBM_Store_Details_SEO" value="com.ibm.commerce.catalog.facade.server.services.search.metadata.SearchCatalogNavigationViewSEOTitleMetaDataFilter"/>
		</_config:configgrouping>
		
		<_config:configgrouping name="MultipleContracts"> 
		
			<!-- 
				Defines the operation between multiple contract, if the operation is AND, then the expression among multiple contract are wrapped with '+', otherwise,
				multiple expression will be wrapped with ' '
			  -->
		 	<_config:property name="operation"  value="OR"/>
	 	
	 	 </_config:configgrouping>

		
	</_config:extendedconfiguration>	 
	 
	 
</_config:DevelopmentComponentConfiguration>
