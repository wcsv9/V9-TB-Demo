<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2010, 2016 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<!-- 
	This is the event configuration file for the Catalog component.
	The main configuration file is in the Infrastructure component. 
 -->
<_config:event-template
	xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/foundation/config"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ibm.com/xmlns/prod/commerce/foundation/config ../xsd/wc-event.xsd ">

	<!--
		Event groups
		
		Event groups are used for subscriptions and queries. The event
		consumer receives only those events that match the event group
		definitions specified in the subscription. Additional properties can
		also be passed into each subscription definition by using the property
		sub-tag.
		
		Note that if a subscription condition checker is specified, the
		implementation class will be called to evaluate whether the current
		subscription is validate or not before executing.
		
		For example:
		<_config:group name="com.ibm.commerce.catalog.facade.datatypes.CatalogEntry">
			<_config:subscription
				consumer="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogEntryEventConsumerForIdentifyIndexUpdate"
				condition="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogEntryEventSubscriptionConditionBySearch" />
		</_config:group>
	-->
	
	<!-- 
		Catalog entry event group
	 -->
	<_config:group name="com.ibm.commerce.catalog.facade.datatypes.CatalogEntry">
		<_config:subscription
			consumer="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogEntryEventConsumerForIdentifyIndexUpdate"
			condition="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogEntryEventSubscriptionConditionBySearch">
			
			<!-- 
				CatalogEntryEventForGeneralChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting general
 				changes in the catalog entry, such as manufacturer name, SKU, display
 				sequence, etc. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForGeneralChangeAnalyzer" />
			
			<!-- 
				CatalogEntryEventForAttachmentChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting changes
 				in the catalog attachment. If so, a full update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForAttachmentChangeAnalyzer" />
			
			<!-- 
				CatalogEntryEventForDescriptionChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting changes
 				in the catalog entry description. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForDescriptionChangeAnalyzer" />
			
			<!-- 
				CatalogEntryEventForAttributeChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting
 				attribute changes in the catalog entry. If so, only a delta update can be
 				performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForAttributeChangeAnalyzer" />
			
			<!--  
				CatalogEntryEventForPriceChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting price
 				changes in the catalog entry. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForPriceChangeAnalyzer" />
			
			<!--  
				CatalogEntryEventForAssociationChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting changes
 				in the merchandising associations. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForAssociationChangeAnalyzer" />
			
			<!-- 
				CatalogEntryEventForParentCategoryChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting changes
 				in the parent category. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForParentCategoryChangeAnalyzer" />

			<!-- 
				CatalogEntryEventForComponentChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting
 				component changes related to bundles, packages, and kits. For example, adding
 				a SKU to a bundle or removing an existing item from a package. In such
 				situation, both the top level component and that related child component will
 				be marked as changed and be qualified as delta update operation.		
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForComponentChangeAnalyzer" />
			
			<!-- 
				CatalogEntryEventForCatalogFilterChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting catalog
				entry selection change for catalog filter. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForCatalogFilterChangeAnalyzer" />

			<!-- 
				CatalogEntryEventForSEOChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting catalog
				entry SEO and SEO properties change. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForSEOChangeAnalyzer" />

			<!-- 
				CatalogEntryEventForExternalContentChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting changes
 				in the catalog entry external content. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogEntryEventForExternalContentChangeAnalyzer" />
			
		</_config:subscription>
		<_config:subscription
			consumer="com.ibm.commerce.pagelayout.facade.server.event.consumer.CatalogEntryEventConsumerForLayoutAssignment"
			condition="com.ibm.commerce.pagelayout.facade.server.event.consumer.CatalogEntryEventSubscriptionConditionByPageComposer">
		</_config:subscription>
	</_config:group>
	
	<_config:group name="com.ibm.commerce.catalog.facade.datatypes.CatalogGroup">
		<_config:subscription
			consumer="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogGroupEventConsumerForSearchIndexUpdate"
			condition="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogGroupEventSubscriptionConditionBySearch">
			
			<!-- 
				CatalogGroupEventForParentCategoryChangeAnalyzer
				
			 	This class is the implementation of the event analyzer for detecting changes
 				in the parent of a category. If so, a full update must be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogGroupEventForParentCategoryChangeAnalyzer" />
			
			<!-- 
				CatalogGroupEventForGeneralChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting general
 				changes in the catalog group, such as identifier,sequence, etc. If so, a delta
 				update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogGroupEventForGeneralChangeAnalyzer" />
				
			<!-- 
				CatalogGroupEventForDescriptionChangeAnalyzer
				
			 	This class is the implementation of the event analyzer for detecting changes
 				in the description information of a category. If so, a delta update will be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogGroupEventForDescriptionChangeAnalyzer" />
			
			<!-- 
				CatalogEntryEventForNavigationRelationshipChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting changes
 				from product relationships in the sales catalog. If so, a delta update can be
 				performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogGroupEventForNavigationRelationshipChangeAnalyzer" />
							
			<!-- 
				CatalogGroupEventForSEOChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting category
				SEO and SEO properties change. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogGroupEventForSEOChangeAnalyzer" />
			
			<!-- 
				CatalogGroupEventForExternalContentChangeAnalyzer
				
				This class is the implementation of the event analyzer for detecting changes
 				in the catalog group external content. If so, a delta update can be performed.
			 -->
			<_config:param name="com.ibm.commerce.catalog.facade.server.event.analyzer.CatalogGroupEventForExternalContentChangeAnalyzer" />
						
		</_config:subscription>
		<_config:subscription
			consumer="com.ibm.commerce.pagelayout.facade.server.event.consumer.CatalogGroupEventConsumerForLayoutAssignment"
			condition="com.ibm.commerce.pagelayout.facade.server.event.consumer.CatalogGroupEventSubscriptionConditionByPageComposer">
		</_config:subscription>
	</_config:group>

	<!-- 
		Catalog group pre action event group
	 -->
	<_config:group name="com.ibm.commerce.catalog.facade.datatypes.CatalogGroupPreAction">
		<_config:subscription
			consumer="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogGroupPreActionEventConsumerForSearchIndexUpdate"
			condition="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogGroupEventSubscriptionConditionBySearch">
		</_config:subscription>
	</_config:group>

	
	<!-- 
		Search indexing event group
	 -->
	<_config:group name="com.ibm.commerce.catalog.facade.datatypes.CatalogNavigationView">
		<_config:subscription
			consumer="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogNavigationViewEventConsumerForRequestReindexing"
			condition="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogEntryEventSubscriptionConditionBySearch">
		</_config:subscription>
	</_config:group>
	
	
	<!-- 
		Event group for Catalog filter 
	 -->
	<_config:group name="com.ibm.commerce.catalog.facade.datatypes.CatalogFilter">
		<_config:subscription
			consumer="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogFilterEventConsumer"
			condition="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogFilterEventSubscriptionCondition">
		</_config:subscription>
	</_config:group>
	
	<!-- 
		Attribute dictionary attribute event group
	 -->
	<_config:group name="com.ibm.commerce.catalog.facade.datatypes.AttributeDictionaryType">
		<_config:subscription
			consumer="com.ibm.commerce.catalog.facade.server.event.consumer.AttributeDictionaryAttributeEventConsumerForSearchIndexUpdate"
			condition="com.ibm.commerce.catalog.facade.server.event.consumer.CatalogEntryEventSubscriptionConditionBySearch">
		</_config:subscription>
	</_config:group>
	
	<!-- 
		Events
		
		The event definition. It is also used as an event template that
		contains the default values for all events created by the event
		factory. The properties can be defined using a property sub-tag. For
		example, <_config:property name="Foundation/Noun" required="true" />
		and if a value is specified in this tag, it will be copied into the
		event object when this property is empty at the time when completed.
		
		For example:
		<_config:event
			name="com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogEntry"
			group="com.ibm.commerce.catalog.facade.datatypes.CatalogEntry">
		</_config:event>
	-->
	<!-- Update catalog filter events -->
	
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogFilter"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogFilter">
	</_config:event>
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ProcessCatalogFilter"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogFilter">
	</_config:event>
	
	<!-- Update product events -->
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogEntry"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogEntry">
	</_config:event>
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ProcessCatalogEntry"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogEntry">
	</_config:event>
	
	<!-- Search re-indexing events -->
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogNavigationView"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogNavigationView">
	</_config:event>
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.SyncCatalogNavigationView"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogNavigationView">
	</_config:event>

	<!-- Update category events -->
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ChangeCatalogGroup"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogGroup">
	</_config:event>
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ProcessCatalogGroup"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogGroup">
	</_config:event>
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ProcessCatalogGroupPreAction"
		group="com.ibm.commerce.catalog.facade.datatypes.CatalogGroupPreAction">
	</_config:event>
	
	<!-- Update attribute dictionary attribute events -->
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ChangeAttributeDictionaryAttribute"
		group="com.ibm.commerce.catalog.facade.datatypes.AttributeDictionaryType">
	</_config:event>
	<_config:event
		name="com.ibm.commerce.catalog.facade.datatypes.ProcessAttributeDictionaryAttribute"
		group="com.ibm.commerce.catalog.facade.datatypes.AttributeDictionaryType">
	</_config:event>

</_config:event-template>
