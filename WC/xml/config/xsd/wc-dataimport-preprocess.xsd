<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2010, 2016 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<xsd:schema targetNamespace="http://www.ibm.com/xmlns/prod/commerce/foundation/config"
	xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/foundation/config"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:annotation>
		<xsd:documentation>
		This is the configuration for DIH pre-process.
		</xsd:documentation>
	</xsd:annotation>
	<xsd:element name="DIHPreProcessConfig">
		<xsd:annotation>
			<xsd:documentation>
			The pre-process configuration.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="_config:data-processing-config" minOccurs="1" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>	
	
	<xsd:element name="data-processing-config">
		<xsd:annotation>
			<xsd:documentation>
				This element includes pre-processor class name, an element for table definition, mapping information from the
				commerce table to temporary table.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="_config:table" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="_config:query" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="_config:deltaQuery" minOccurs="0" maxOccurs="1"/>			
				<xsd:element ref="_config:mapping" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="property" type="_config:NameValuePairType" minOccurs="0" maxOccurs="unbounded"></xsd:element>
			</xsd:sequence>
			<xsd:attribute name="processor" type="xsd:string" use="required"/>
			<xsd:attribute name="masterCatalogId" type="xsd:long"/>
			<xsd:attribute name="fetchSize" type="xsd:long" default="500"/>
			<xsd:attribute name="batchSize" type="xsd:long" default="500"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="table">
		<xsd:annotation>
			<xsd:documentation>
				This element includes the name of the table will store the pre-processed data and 
				the table definition for creating the table.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="name" type="xsd:string" use="required"/>
			<xsd:attribute name="definition" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="query">
		<xsd:complexType>
			<xsd:attribute name="sql" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="deltaQuery">
		<xsd:complexType>
			<xsd:attribute name="sql" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
		
	<xsd:element name="key">
		<xsd:complexType>
			<xsd:attribute name="queryColumn" type="xsd:normalizedString" use="required"/>
			<xsd:attribute name="tableColumn" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="mapping">
		<xsd:annotation>
			<xsd:documentation>Define the mapping between commerce tables and the temporary table
			  to store the pre-processing data. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="_config:key" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="_config:column-mapping" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="column-mapping">
		<xsd:annotation>
			<xsd:documentation>
				define column mapping
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="1" maxOccurs="1">
					<xsd:element ref="_config:column-column-mapping"/>
					<xsd:element ref="_config:row-column-mapping"/>
					<xsd:element ref="_config:dynamic-column-mapping"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="column-column-mapping">
		<xsd:annotation>
			<xsd:documentation>The default pre-processor uses this configuration to define column to column conversion.  
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="_config:column-column" minOccurs="1" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="column-column">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The section defines common configuration parameters which could used cross access profiles 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="queryColumn" type="xsd:string" use="required"/>
			<xsd:attribute name="tableColumn" type="xsd:string" use="required"/>
			<xsd:attribute name="separator" type="xsd:string" default=";"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="row-column-mapping">
		<xsd:annotation>
			<xsd:documentation>The default pre-processor uses this configuration to define row to column conversion.  
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="_config:row-column-name" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="_config:row-column" minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="row-column-name">
		<xsd:annotation>
			<xsd:documentation>The column names of a row in the queried horizontal table which used to fill the columns in the 
			table
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="attrNameColName" type="xsd:string" use="required"/>
			<xsd:attribute name="attrValueColName" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="row-column">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The section defines common configuration parameters which could used cross access profiles 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="attr-name-value" type="xsd:string" use="required"/>
			<xsd:attribute name="table-column" type="xsd:string" use="required"/>
			<xsd:attribute name="separator" type="xsd:string" default=","/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:complexType name="NameValuePairType">
		<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
		<xsd:attribute name="value" type="xsd:string"></xsd:attribute>
	</xsd:complexType>
	
	<xsd:element name="dynamic-column-mapping">
		<xsd:annotation>
			<xsd:documentation>Dynamic index column representation   
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="_config:dynamic-column-name" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="_config:dynamic-column-value" minOccurs="1" maxOccurs="1" />
				<xsd:element ref="_config:dynamic-value-map" minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="dynamic-column-name">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Dynamic index column name definition 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="pattern" type="xsd:string" use="required"/>
			<xsd:attribute name="tableColumn" type="xsd:string" use="required"/>
			<xsd:attribute name="delimiter" type="xsd:string" default="||"/>
			<xsd:attribute name="separator" type="xsd:string" default=":"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="dynamic-column-value">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Multi-value field definition 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="pattern" type="xsd:string" use="required"/>
			<xsd:attribute name="separator" type="xsd:string" default=","/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="dynamic-value-map">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Database column map for dynamic column pattern substitution 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="name" type="xsd:string" use="required"/>
			<xsd:attribute name="tableColumn" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>