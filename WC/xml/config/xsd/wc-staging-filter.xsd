<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2014 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->
<xsd:schema targetNamespace="omittedNamespace" xmlns:wc="omittedNamespace" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<xsd:annotation>
		<xsd:documentation>&lt;P&gt;
The staging filter configuration file controls the &lt;STRONG&gt;stagingprop&lt;/STRONG&gt; utility and filters the set of records on a per table basis
that are to be propagated on invocation.  Records on a table are filtered by defining a SQL fragment that will be appended to the base query as stagingprop
selects records corresponding to that table from &lt;STRONG&gt;STAGLOG&lt;/STRONG&gt;.  The same filter is also applied (or can be overridden) when the
STAGLOG records are marked processed subsequently after propagated to production.  A different SQL fragment can be specified depending on the operation 
on the table: &lt;STRONG&gt;INSERT&lt;/STRONG&gt;, &lt;STRONG&gt;UPDATE&lt;/STRONG&gt;, &lt;STRONG&gt;DELETE&lt;/STRONG&gt;, or &lt;STRONG&gt;ALL&lt;/STRONG&gt;.
&lt;/P&gt;</xsd:documentation>
	</xsd:annotation>

  <xsd:element name="StagingFilters">
<xsd:annotation>
<xsd:documentation>&lt;P&gt;
  The configuration file specifies a staging filter element that lists the set of filter definitions, 
   each is for a specific table during stagingprop. 
</xsd:documentation>
</xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="wc:FilterDefinition"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="StagLogFilter">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="3" ref="wc:Filter"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
<xsd:simpleType name="actionType">
  <xsd:restriction base="xsd:string">
    <xsd:enumeration value="INSERT" />
    <xsd:enumeration value="UPDATE" />
    <xsd:enumeration value="DELETE" />
    <xsd:enumeration value="ALL" />
  </xsd:restriction>
</xsd:simpleType>
  <xsd:element name="Filter">
    <xsd:complexType mixed="true">
      <xsd:attribute name="action" type="wc:actionType" use="required"/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="StagLogProcessedFilter">
      <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="3" ref="wc:Filter"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FilterDefinition">
<xsd:annotation>
		<xsd:documentation>&lt;P&gt;
A filter definition specifies the set of filters to apply during stagingprop for a given table identified
by the &lt;STRONG&gt;tableName&lt;/STRONG&gt; attribute.   The filter definition will contain StagLogFilter
elements that control which records from STAGLOG are to be selected for propagation.  The StagLogFilter specifies
Filter elements with an &lt;STRONG&gt;action&lt;/STRONG&gt; attribute with values
&lt;STRONG&gt;INSERT&lt;/STRONG&gt;, &lt;STRONG&gt;UPDATE&lt;/STRONG&gt;, &lt;STRONG&gt;DELETE&lt;/STRONG&gt;, or &lt;STRONG&gt;ALL&lt;/STRONG&gt;
that map to records in STAGLOG with the corresponding operation in the &lt;STRONG&gt;STGOP&lt;/STRONG&gt; column.
The value for each filter is an SQL fragment acting on the STAGLOG table that by default will be appended during the
query for STAGLOG records.  Note that the literal &lt;STRONG&gt;SL&lt;/STRONG&gt; is the STAGLOG table within the SQL.
&lt;/P&gt;
&lt;P&gt;
The following is a sample SQL fragment that can be defined as a StagLogFilter:&lt;BR&gt;
SL.STGRFNBR in ( select ST.STGRFNBR from FOLDERITEM FI, STAGLOG ST where ST.stgtable='px_promotion' AND ST.stgokey1=FI.reference_id
 AND FI.folderitemtype='PromotionType' AND FI.folder_id ={customfilterfolderid} AND
  ST.stgprocessed = 0 )
&lt;/P&gt;
&lt;P&gt;
Optionally, a filter definition for a table can use the &lt;STRONG&gt;className&lt;/STRONG&gt; attribute to specify a class
extending from the interface &lt;STRONG&gt;com.ibm.commerce.staging.filter.StagingFilter&lt;/STRONG&gt; that can override 
and return the SQL queries for this particular table (and make use of the filter configuration as needed).
&lt;/P&gt;</xsd:documentation>
	</xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="wc:StagLogFilter"/>
        <xsd:element minOccurs="0" ref="wc:StagLogProcessedFilter"/>
      </xsd:sequence>
      <xsd:attribute name="className" type="xsd:string" use="optional"/>
      <xsd:attribute name="tableName" type="xsd:string" use="required"/>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>