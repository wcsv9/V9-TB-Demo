<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2006, 2012 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<schema targetNamespace="http://www.ibm.com/xmlns/prod/WebSphereCommerce"
			xmlns="http://www.w3.org/2001/XMLSchema"
			xmlns:wc="http://www.ibm.com/xmlns/prod/WebSphereCommerce">
    <element name="ContentManagement">
        <complexType>
            <sequence>
                <element ref="wc:DefaultConfiguration" minOccurs="0" maxOccurs="1"/>
                <element ref="wc:ResourceContainers" minOccurs="0" maxOccurs="1"/>
                <element ref="wc:QuickPublishConfiguration" minOccurs="1" maxOccurs="1" />
            </sequence>
        </complexType>
    </element>
    <element name="DefaultConfiguration">
        <complexType>
            <attribute name="enableDynamicWorkspaceCreation"
                type="string" use="optional"/>
            <attribute name="lockingPolicy" type="string" use="optional"/>
            <attribute name="readPrefixName" type="string" use="optional"/>
            <attribute name="writePrefixName" type="string" use="optional"/>
        </complexType>
    </element>
    <element name="ResourceContainer">
        <complexType>
            <attribute name="className" type="string" use="required"/>
            <attribute name="id" use="required" type="string">
            	</attribute>
            <attribute name="name" type="string" use="required"/>
            <attribute name="configurationFile" type="string" use="required"/>
            <attribute name="lockingPolicy" type="string" use="optional"/>
        </complexType>
    </element>
    <element name="ResourceContainers">
        <complexType>
            <sequence>
                <element maxOccurs="unbounded" minOccurs="1" ref="wc:ResourceContainer"/>
            </sequence>
        </complexType>
    </element>
    
    <element name="QuickPublishConfiguration">
    	<complexType>
    		<all>
    			<element ref="wc:Publisher" />
    			<element ref="wc:RetryErrorHandler" minOccurs="0" maxOccurs="1" />
    		</all>
    	</complexType>
    </element>
    <element name="Publisher">
    	<complexType>
    		<attribute name="className" type="string" use="required"/>
    		<attribute name="initParameters" type="string" use="optional"/>
    		<attribute name="retry" type="int" use="optional">
    			<annotation>
    				<documentation>
    					Specify the number of times the content
    					publisher should attempt the transaction again
    					when it encounters a transaction rollback. See
    					the knowledge center for more information.
    				</documentation>
    			</annotation>
    		</attribute>
    		<attribute name="waitTime" type="int" use="optional">
    			<annotation>
    				<documentation>
    					Specify the number of seconds the content
    					publisher should wait between retry attempts.
    				</documentation>
    			</annotation>
    		</attribute>
    		<attribute name="lowerCaseStaglog" type="string" default="false" use="optional">
    			<annotation>
    				<documentation>The default for this option is "false".
This option may be set to "true" if there are no custom stageable tables in the schema, AND all UPDATE, DELETE and INSERT triggers on all custom stageable tables only insert
lowercase values into the STGTABLE column of the STAGLOG table. For more information, see APAR JR39925. </documentation>
    			</annotation>
    		</attribute>
    		<attribute name="updateStaglogStmtNum" type="string" default="0" use="optional">
    			<annotation>
    				<documentation>The default for this option is "0".
This option may be set to "1" to direct the bookkeeping action to use a semantically equivalent UPDATE statement that may perform better than the default UPDATE statement to mark any
necessary STAGLOG records as processed. For more information, see APAR JR39925. </documentation>
    			</annotation>
    		</attribute>
    		<attribute name="postPublish" type="string" use="optional"></attribute>
    		<attribute name="postPublishSize" type="string" use="optional" default="0">
    			<annotation>
    				<documentation>By default, the post-publish process will process data from all the resource managers and propagate them in one shot. If the total amount of data to be propagated is larger than available memory, this can lead to OutOfMemory error. The problem can be alleviated by JVM tuning or by assigning a post-publish size. If size n is specified, post-publish will process and propagate data from n resource managers at a time until post-publish is complete.</documentation></annotation>
    		</attribute>
		<attribute name="jvmName" type="string" use="optional" default="0">
    			<annotation>
    				<documentation>The name of the process that Quick Publish tasks should run on.</documentation>
				</annotation>
    		</attribute>
    	</complexType>
    </element>

    <element name="RetryErrorHandler">
        <annotation>
        	<documentation>Specify the Exceptions to retry on during Quick Publish. This must be used in conjunction with "retry" and "waitTime" attribute of the Publisher element. </documentation>
        </annotation>
        <complexType>
    		<sequence>
    			<element ref="wc:SQLException" minOccurs="0" maxOccurs="1">
    				<annotation>
    					<documentation>This is a comma delimited list of SQLException error codes. When errorCode is used, retry will only occur on the SQLException with error codes specified in this attribute.</documentation>
    				</annotation>
    			</element>
    			<element ref="wc:Exception" minOccurs="0" maxOccurs="unbounded" >
    				<annotation>
    					<documentation>This option can be used to specify other Exception classes that you wish to enable Quick Publish retry.</documentation>
    				</annotation>
    			</element>
    		</sequence>
    	</complexType>
    </element>

    <element name="SQLException">
    	<complexType>
    		<attribute name="errorCode" type="string" use="optional">
    			<annotation>
    				<documentation>For example, error code -911 for DB2 deadlock timeout SQLException.</documentation>
    			</annotation>
    		</attribute>
    	</complexType>
    </element>
    
    <element name="Exception">
    	<complexType>
    		<attribute name="className" type="string" >
    			<annotation>
    				<documentation>Fully qualified class name of the Exception</documentation>
    			</annotation>
    		</attribute>
    	</complexType>
    </element>
</schema>
