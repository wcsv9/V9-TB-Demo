<!-- Comments, Copyright go here -->


<!-- This is the descriptor of the archive file. It contains information about
     the archive which should help a tool or utility process the archive file.
     . An archive may represent a multi or mono lingual store, this is specified 
       in the "multi-language" attribute.  
     . An archive may also represent a complete store or just an incremental
       assets of a store, this is specified in the "complete-store" attribute.
     . The attribute "version" specifies the version of the archive file.
     . The archive itself is logically divided into "assets".  
       Each asset may contains one or more files.
-->
<!ELEMENT sarinfo (display-name?, description?, WCS-info?, 
                   store-info, locale*, asset*)*> 
<!ATTLIST sarinfo 
          multi-language (yes|no) #REQUIRED
          complete-store (yes|no) #REQUIRED
          version        CDATA    #IMPLIED>


<!-- This contains a user-friendly name of an archive, an asset, or a file.
-->
<!ELEMENT display-name (#PCDATA)>


<!-- This contains the desription of an archive, an asset, or a file
-->
<!ELEMENT description (#PCDATA)>


<!-- This specifies information about WCS this archive is targeted for.
     . "version" attribute specifies the version of WCS target.
     . If out-of-the-box schema is used, set "standard-schema" attribute to
       "yes", else set it to "no".
-->
<!ELEMENT WCS-info EMPTY>
<!ATTLIST WCS-info 
	      version         CDATA    #REQUIRED
	      standard-schema (yes|no) #REQUIRED>


<!-- This specifies the asset that serves as the "anchor". All the store
     information can be found in the files belonging to the asset specified
     by the attribute "asset-name".
-->
<!ELEMENT store-info EMPTY>
<!ATTLIST store-info 
          asset-name      IDREF    #REQUIRED>


<!-- This specifies the locale supported by the archive.  Note that an archive
     may support one or more locales.
-->
<!ELEMENT locale (#PCDATA)>


<!-- An asset is just a logical collection of related files making up a useful
     concept.  For example, "Catalog" may be an asset and so is "Tax".
     . An asset has a unique name.  
     . It may be fragmented into multiple files along language line, 
       the attribute "fragmented" specifies this.
     . An asset may be processed by its own "handler" code.
-->
<!ELEMENT asset (display-name?, description?, handler?, file*)>
<!ATTLIST asset
          name       ID              #REQUIRED             
          fragmented (yes|no)        #REQUIRED>


<!-- A handler is a bean which processes an asset.
     . "class" specifies the fully qualified name of the class that implements
	    the bean.
	 . This bean implement a Command object which has the following protocols
	   (preferably the same protocol as the Server TaskCommand)
	   . a default constructor
	   . zero or more setter methods as the way to pass parameters
	   . an execute() method
	   . either a getReturnCode() method or the execute() method may throw
	     a well-defined exception (again, make it consistent with the 
		 TaskCommand)
-->
<!ELEMENT handler (param*)>
<!ATTLIST handler
          class      NMTOKEN             #REQUIRED>


<!-- A param defines a parameter to the handler class. A parameter named XXX 
     corresponds to setXXX() method of the handler class. Only parameters of
	 simple types are supported.
-->
<!ELEMENT param EMPTY>
<!ATTLIST param
          name       NMTOKEN             #REQUIRED
          value      CDATA               #REQUIRED>


<!-- A file has a type which determines how it should be processed by 
     the handler. These types are recognized by our tools for V5.1:  
	 . "zip", a source for unzip utility.
	 . "db-load", a source for massloader in XML format.
	 . "dtd", a supporting file to the XML file.
	 . "config", an XML file used for configuring the asset.
     It also has a name and a priority for processing.
-->
<!ELEMENT file (display-name?, description?, locale*)>
<!ATTLIST file
          name       CDATA               #REQUIRED
          type       NMTOKEN             #REQUIRED
          priority   NMTOKEN             #IMPLIED>

