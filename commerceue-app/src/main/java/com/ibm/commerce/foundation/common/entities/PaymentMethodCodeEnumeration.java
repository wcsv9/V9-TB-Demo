//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.16 at 11:14:39 AM CST 
//


package com.ibm.commerce.foundation.common.entities;

import com.ibm.commerce.copyright.IBMCopyright;



/**
 * <p>Java class for PaymentMethodCodeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PaymentMethodCodeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Cash"/>
 *     &lt;enumeration value="Cheque"/>
 *     &lt;enumeration value="CreditCard"/>
 *     &lt;enumeration value="DebitCard"/>
 *     &lt;enumeration value="ElectronicFundsTransfer"/>
 *     &lt;enumeration value="ProcurementCard"/>
 *     &lt;enumeration value="BankDraft"/>
 *     &lt;enumeration value="PurchaseOrder"/>
 *     &lt;enumeration value="CreditTransfer"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
public enum PaymentMethodCodeEnumeration {

    CASH("Cash"),
    CHEQUE("Cheque"),
    CREDIT_CARD("CreditCard"),
    DEBIT_CARD("DebitCard"),
    ELECTRONIC_FUNDS_TRANSFER("ElectronicFundsTransfer"),
    PROCUREMENT_CARD("ProcurementCard"),
    BANK_DRAFT("BankDraft"),
    PURCHASE_ORDER("PurchaseOrder"),
    CREDIT_TRANSFER("CreditTransfer");
    private final String value;

    /**
	 * IBM copyright notice field.
	 */
	@SuppressWarnings("unused")
	private static final String COPYRIGHT = IBMCopyright.SHORT_COPYRIGHT;
	
    PaymentMethodCodeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PaymentMethodCodeEnumeration fromValue(String v) {
        for (PaymentMethodCodeEnumeration c: PaymentMethodCodeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
