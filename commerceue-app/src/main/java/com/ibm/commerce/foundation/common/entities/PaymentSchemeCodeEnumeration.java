//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.16 at 11:14:39 AM CST 
//


package com.ibm.commerce.foundation.common.entities;

import com.ibm.commerce.copyright.IBMCopyright;



/**
 * <p>Java class for PaymentSchemeCodeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PaymentSchemeCodeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="ACH"/>
 *     &lt;enumeration value="RTGS"/>
 *     &lt;enumeration value="Fednet"/>
 *     &lt;enumeration value="CHIPS"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
public enum PaymentSchemeCodeEnumeration {


    /**
     * 
     * 						Payment has to be executed through an Automated
     * 						Clearing House
     * 					
     * 
     */
    ACH("ACH"),

    /**
     * 
     * 						Payment has to be executed through Real time
     * 						gross settlement system.
     * 					
     * 
     */
    RTGS("RTGS"),

    /**
     * 
     * 						Payment has to be executed through FedNet
     * 					
     * 
     */
    FEDNET("Fednet"),

    /**
     * 
     * 						Payment has to be executed through CHIPS.
     * 					
     * 
     */
    CHIPS("CHIPS");
    private final String value;

    /**
	 * IBM copyright notice field.
	 */
	@SuppressWarnings("unused")
	private static final String COPYRIGHT = IBMCopyright.SHORT_COPYRIGHT;
	
    PaymentSchemeCodeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PaymentSchemeCodeEnumeration fromValue(String v) {
        for (PaymentSchemeCodeEnumeration c: PaymentSchemeCodeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
