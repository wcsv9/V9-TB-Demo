<?xml version="1.0" encoding="UTF-8"?>

<!--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2016 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
-->

<_config:DataloadBusinessObjectConfiguration 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ibm.com/xmlns/prod/commerce/search/config ../xsd/wc-indexload-item.xsd" 
	xmlns:_config="http://www.ibm.com/xmlns/prod/commerce/search/config">

  <_config:DataLoader className="com.ibm.commerce.search.indexload.loader.SearchIndexLoadCSVLoader" >
 	
 		<!--
			FirstLineIsHeader = [boolean|false]
			
			Indicates that the first line in the CSV file is column header information.  Use this header line for providing
			the column mappings in the DataMapping element in this configuration file.
			
			Default value is false.
		 --> 	
 		<_config:property name="FirstLineIsHeader" value="true" />
 	
  	<!--
			lineDelimiter = [string|\n]
			
			Specifies the line separator character or record separator character.  The lineDelimiter character cannot appear
			in the content of a token unless enclosed within the tokenValueDelimiter character.
			
			Note: If you want records in a CSV file to span multiple lines, you can configure a custom lineDelimiter character
			to identify the end of a record. By configuring a different delimiter character, CSV files can include newline
			characters within object records, instead of having the data reader handle each newline character as the end of
			a record.
			
			For instance, you can configure the lineDelimiter to be a semi-colon ( ; ) instead of the newline character. 
			With this new lineDelimiter character configured, the following CSV file is considered to have a single object
			record instead of two records.
		
			The default value is the new line character.
			
			<_config:property name="LineDelimiter" value="\n" />
		 -->
		
		<!--
			CharSet = [string|UTF-8]
			
			Specifies the character set of the CSV file.  The default character set is UTF-8.
			-->
		<_config:property name="Charset" value="UTF-8" />

		<!--
			TokenDelimiter = [string|,]
			
			Specifies the token separator character.  The default is the comma character (,).
			-->
		<_config:property name="TokenDelimiter" value="," />

 	
    <_config:DataReader className="com.ibm.commerce.search.indexload.reader.SearchIndexLoadCSVReader" />

		<!--
		     A data mapping reader, SearchIndexLoadDataMappingMediator, is used to transform a multi-value data entry from the CSV file
		     into multiple dynamic index fields.
		     
		     Usage:
		     - attribute "columnName" defines the name of the column in the CSV file
		     - attribute "indexFieldName" defines the corresponding index field name to be used for indexing
		     The following attributes are optional, but if present, allows you to define a multi-value field to be split into multiple
		     dynamic index fields.
		     - attribute "valueSeparator" defines the character to be used to separate each encoded value in the multi-value column
		     - attribute "tokenSeparator" defines the character to be used to separate the multi-parts of an encoded value
		     - attribute "indexFieldName" and "indexFieldValue" define the name of the index field name and its corresponding value to
		       be used for indexing.  Special notation can be used to define the value from the multi-part input data
		     
		     For example:
		     
		     <_config:Field columnName="price_segments" valueSeparator=" " tokenSeparator="_" indexFieldName="p_%1%" indexFieldValue="%2%" />
		     
		     The input data, 1000_99.99, will be re-written as index field name "price_1000" with a value of "99.99".		     
     	-->
		<_config:BusinessObjectBuilder>
     
		    <_config:DataMapping>
      </_config:DataMapping>
      
      <_config:BusinessObjectMediator className="com.ibm.commerce.foundation.internal.server.services.indexload.mediator.SolrIndexLoadBusinessObjectMediator"/>
				 <_config:BusinessObjectMediator className="com.ibm.commerce.search.indexload.mediator.SearchIndexLoadCSVMediator" />
           	</_config:BusinessObjectBuilder>
   
  </_config:DataLoader>
  
</_config:DataloadBusinessObjectConfiguration>